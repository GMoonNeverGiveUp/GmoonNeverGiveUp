---
import jwt from 'jsonwebtoken';

interface MyUserPayload extends jwt.JwtPayload {
  username: string;
  discordId: string;
}

const cookieHeader = Astro.request.headers.get('cookie') || '';
const cookies = Object.fromEntries(
  cookieHeader.split(';').map(c => {
    const [key, ...v] = c.trim().split('=');
    return [key, v.join('=')];
  })
);
const token = cookies.token;
let user: MyUserPayload | null = null;

if (token) {
  try {
    user = jwt.verify(token, import.meta.env.JWT_SECRET || 'your-very-secret-key') as MyUserPayload;
  } catch (err) {
    console.error('Invalid JWT:', err);
    Astro.redirect('/auth/spectator');
  }
} else {
  Astro.redirect('/auth/spectator');
}

if (!user) {
  Astro.redirect('/auth/spectator');
}

const currentUser = user!;
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>User Profile - NGU Meme dApp</title>
    <style>
      body {
        margin: 0;
        padding: 2rem;
        background: #0a0a0f;
        color: #e0e0e0;
        font-family: 'Montserrat', sans-serif;
      }
      .profile-container {
        max-width: 600px;
        margin: 0 auto;
        background: rgba(255, 255, 255, 0.05);
        padding: 2rem;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0,0,0,0.5);
      }
      h1 {
        text-align: center;
      }
      form {
        display: flex;
        flex-direction: column;
        gap: 1rem;
      }
      input, textarea {
        padding: 0.75rem;
        border: 1px solid #444;
        border-radius: 5px;
        background: #1a1a2e;
        color: #e0e0e0;
      }
      button {
        padding: 0.75rem;
        background: #1e90ff;
        border: none;
        border-radius: 5px;
        color: #fff;
        cursor: pointer;
        transition: background 0.3s;
      }
      button:hover {
        background: #1590e0;
      }
    </style>
  </head>
  <body>
    <div class="profile-container">
      <h1>User Profile</h1>
      <p>Update your profile information below:</p>
      <form id="profileForm">
        <input type="text" id="username" placeholder="Username" value="{currentUser.username}" />
        <input type="text" id="avatarUrl" placeholder="Avatar URL" />
        <textarea id="bio" placeholder="Write a short bio..." rows="4"></textarea>
        <button type="submit">Save Profile</button>
      </form>
    </div>
    <script type="module">
      const form = document.getElementById('profileForm');
      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        const username = document.getElementById('username').value;
        const avatarUrl = document.getElementById('avatarUrl').value;
        const bio = document.getElementById('bio').value;
        try {
          const response = await fetch('/api/profile', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ username, avatarUrl, bio }),
          });
          if (response.ok) {
            alert('Profile updated successfully!');
          } else {
            const data = await response.json();
            alert('Error: ' + data.error);
          }
        } catch (error) {
          console.error('Profile update error:', error);
          alert('Error updating profile.');
        }
      });
    </script>
  </body>
</html>
