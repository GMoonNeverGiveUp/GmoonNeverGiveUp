{"id":"54df20fe94f835b0e6223da1b680391b","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title ERC-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"},"@openzeppelin/contracts/interfaces/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC-721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guaratees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/MemeContest.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract MemeContest is ERC721URIStorage, Ownable {\n    using SafeERC20 for IERC20;\n\n    // NGU token instance used for fee payments\n    IERC20 public nguToken;\n\n    // Fee settings for various actions (denominated in smallest NGU token units)\n    uint256 public creationFee;    // Fee for meme creation (if needed)\n    uint256 public mintingFee;     // Fee for minting a meme NFT\n    uint256 public submissionFee;  // Fee for submitting a meme to contest\n    uint256 public voteFee;        // Fee per vote\n\n    // Counter for meme token IDs\n    uint256 public currentTokenId;\n\n    // Structure to store meme details\n    struct Meme {\n        uint256 tokenId;\n        address creator;\n        string memeURI;\n        uint256 voteCount;\n        bool minted;    // Indicates whether the NFT has been minted\n        bool submitted; // Indicates if the meme has been submitted to contest\n    }\n\n    // Mapping from tokenId to Meme data\n    mapping(uint256 => Meme) public memes;\n\n    // Whitelist for Galactic G users (must be added via admin/Discord verification)\n    mapping(address => bool) public isGalacticG;\n\n    // Events for logging activities\n    event MemeSubmitted(uint256 indexed tokenId, address indexed creator, string memeURI);\n    event MemeMinted(uint256 indexed tokenId, address indexed creator);\n    event MemeVoted(uint256 indexed tokenId, address indexed voter, uint256 voteCount);\n\n    /**\n     * @dev Constructor sets the NGU token address and default fee amounts.\n     * Adjust the fee values based on NGU token decimals (commonly 18 decimals).\n     */\n    constructor(IERC20 _nguToken) ERC721(\"NGU Meme\", \"NGUM\") Ownable(msg.sender) {\n        nguToken = _nguToken;\n        // Example fee settings (adjust as needed)\n        creationFee    = 10 * (10 ** 18); // e.g. 10 NGU tokens\n        mintingFee     = 5  * (10 ** 18); // e.g. 5 NGU tokens\n        submissionFee  = 2  * (10 ** 18); // e.g. 2 NGU tokens\n        voteFee        = 1  * (10 ** 18); // e.g. 1 NGU token per vote\n        currentTokenId = 0;\n    }\n\n    /**\n     * @dev Modifier to restrict functions to Galactic G role holders.\n     */\n    modifier onlyGalacticGRole() {\n        require(isGalacticG[msg.sender], \"Only Galactic G role owners allowed\");\n        _;\n    }\n\n    /**\n     * @dev Owner can add or remove addresses that have the Galactic G role.\n     */\n    function addGalacticG(address _user) external onlyOwner {\n        isGalacticG[_user] = true;\n    }\n    \n    function removeGalacticG(address _user) external onlyOwner {\n        isGalacticG[_user] = false;\n    }\n\n    /**\n     * @dev Owner function to update fee amounts.\n     */\n    function setFees(\n        uint256 _creationFee,\n        uint256 _mintingFee,\n        uint256 _submissionFee,\n        uint256 _voteFee\n    ) external onlyOwner {\n        creationFee    = _creationFee;\n        mintingFee     = _mintingFee;\n        submissionFee  = _submissionFee;\n        voteFee        = _voteFee;\n    }\n\n    /**\n     * @dev Submit a meme for contest participation.\n     * The caller must pay the submission fee in NGU tokens.\n     * Only whitelisted Galactic G users can submit memes.\n     */\n    function submitMeme(string calldata memeURI) external onlyGalacticGRole {\n        // Transfer submission fee from the user to this contract\n        nguToken.safeTransferFrom(msg.sender, address(this), submissionFee);\n\n        // Increment token counter and store meme details\n        currentTokenId++;\n        memes[currentTokenId] = Meme({\n            tokenId: currentTokenId,\n            creator: msg.sender,\n            memeURI: memeURI,\n            voteCount: 0,\n            minted: false,\n            submitted: true\n        });\n\n        emit MemeSubmitted(currentTokenId, msg.sender, memeURI);\n    }\n\n    /**\n     * @dev Mint an NFT for a submitted meme.\n     * The caller must be the original creator and pay the minting fee.\n     */\n    function mintMeme(uint256 memeId) external onlyGalacticGRole {\n        Meme storage meme = memes[memeId];\n        require(meme.creator == msg.sender, \"Only creator can mint\");\n        require(meme.submitted, \"Meme not submitted\");\n        require(!meme.minted, \"Meme already minted\");\n\n        // Transfer minting fee in NGU tokens\n        nguToken.safeTransferFrom(msg.sender, address(this), mintingFee);\n\n        // Mint the NFT and assign its URI\n        _safeMint(msg.sender, memeId);\n        _setTokenURI(memeId, meme.memeURI);\n        meme.minted = true;\n\n        emit MemeMinted(memeId, msg.sender);\n    }\n\n    /**\n     * @dev Vote on a submitted meme by paying the vote fee.\n     * Each call increases the meme's vote count by one.\n     */\n    function voteMeme(uint256 memeId) external onlyGalacticGRole {\n        // Transfer vote fee from the voter\n        nguToken.safeTransferFrom(msg.sender, address(this), voteFee);\n        Meme storage meme = memes[memeId];\n        require(meme.submitted, \"Meme not submitted\");\n\n        // Increment vote count\n        meme.voteCount += 1;\n\n        emit MemeVoted(memeId, msg.sender, meme.voteCount);\n    }\n\n    /**\n     * @dev Admin function to distribute rewards from collected fees.\n     */\n    function distributeRewards(address[] calldata winners, uint256[] calldata rewards) external onlyOwner {\n        require(winners.length == rewards.length, \"Mismatched array lengths\");\n\n        uint256 totalReward;\n        for (uint256 i = 0; i < winners.length; i++) {\n            totalReward += rewards[i];\n        }\n        require(nguToken.balanceOf(address(this)) >= totalReward, \"Insufficient balance for rewards\");\n\n        for (uint256 i = 0; i < winners.length; i++) {\n            nguToken.safeTransfer(winners[i], rewards[i]);\n        }\n    }\n\n    /**\n     * @dev Owner can withdraw accumulated NGU tokens (fees) from the contract.\n     */\n    function withdrawFees(uint256 amount) external onlyOwner {\n        nguToken.safeTransfer(owner(), amount);\n    }\n}"},"contracts/SBT.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract SoulBoundToken is ERC721, Ownable {\n    uint256 private _tokenIdCounter;\n    mapping(address => bool) private _hasMinted;\n\n    constructor() ERC721(\"NGU Soul Bound Token\", \"NGUSBT\") Ownable(msg.sender) {\n        _tokenIdCounter = 0;\n    }\n\n    function mint(address to) public onlyOwner {\n        require(!_hasMinted[to], \"Address has already minted an SBT\");\n        _tokenIdCounter += 1;\n        _mint(to, _tokenIdCounter);\n        _hasMinted[to] = true;\n    }\n\n    function transferFrom(address /* from */, address /* to */, uint256 /* tokenId */) public pure override {\n        revert(\"SoulBoundToken: Tokens are non-transferable\");\n    }\n\n    function safeTransferFrom(address /* from */, address /* to */, uint256 /* tokenId */, bytes memory /* data */) public pure override {\n        revert(\"SoulBoundToken: Tokens are non-transferable\");\n    }\n\n    function hasSBT(address user) public view returns (bool) {\n        return _hasMinted[user];\n    }\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"5740","formattedMessage":"Warning: Unreachable code.\n   --> @openzeppelin/contracts/token/ERC721/ERC721.sol:161:9:\n    |\n161 |         ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unreachable code.","severity":"warning","sourceLocation":{"end":5210,"file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","start":5138},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2242],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":2243,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2242,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,2242],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[229],"IERC165":[3530],"IERC20":[480]},"id":230,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:1"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":230,"sourceUnit":238,"src":"133:36:1","symbolAliases":[{"foreign":{"id":150,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"141:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":230,"sourceUnit":234,"src":"170:38:1","symbolAliases":[{"foreign":{"id":152,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"178:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":155,"name":"IERC20","nameLocations":["590:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":480,"src":"590:6:1"},"id":156,"nodeType":"InheritanceSpecifier","src":"590:6:1"},{"baseName":{"id":157,"name":"IERC165","nameLocations":["598:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":3530,"src":"598:7:1"},"id":158,"nodeType":"InheritanceSpecifier","src":"598:7:1"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"210:357:1","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":229,"linearizedBaseContracts":[229,3530,480],"name":"IERC1363","nameLocation":"578:8:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"1148:370:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":168,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:1","nodeType":"FunctionDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"mutability":"mutable","name":"to","nameLocation":"1556:2:1","nodeType":"VariableDeclaration","scope":168,"src":"1548:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":163,"mutability":"mutable","name":"value","nameLocation":"1568:5:1","nodeType":"VariableDeclaration","scope":168,"src":"1560:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:1"},"returnParameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":168,"src":"1593:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":165,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:1"},"scope":229,"src":"1523:76:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":169,"nodeType":"StructuredDocumentation","src":"1605:453:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":180,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:1","nodeType":"FunctionDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"to","nameLocation":"2096:2:1","nodeType":"VariableDeclaration","scope":180,"src":"2088:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"value","nameLocation":"2108:5:1","nodeType":"VariableDeclaration","scope":180,"src":"2100:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"data","nameLocation":"2130:4:1","nodeType":"VariableDeclaration","scope":180,"src":"2115:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":174,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:1"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":180,"src":"2154:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":177,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:1"},"scope":229,"src":"2063:97:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"2166:453:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":192,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:1","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":183,"mutability":"mutable","name":"from","nameLocation":"2661:4:1","nodeType":"VariableDeclaration","scope":192,"src":"2653:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":185,"mutability":"mutable","name":"to","nameLocation":"2675:2:1","nodeType":"VariableDeclaration","scope":192,"src":"2667:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"value","nameLocation":"2687:5:1","nodeType":"VariableDeclaration","scope":192,"src":"2679:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:1"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":192,"src":"2712:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":189,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:1"},"scope":229,"src":"2624:94:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"2724:536:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":206,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:1","nodeType":"FunctionDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"from","nameLocation":"3302:4:1","nodeType":"VariableDeclaration","scope":206,"src":"3294:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"to","nameLocation":"3316:2:1","nodeType":"VariableDeclaration","scope":206,"src":"3308:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"value","nameLocation":"3328:5:1","nodeType":"VariableDeclaration","scope":206,"src":"3320:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"data","nameLocation":"3350:4:1","nodeType":"VariableDeclaration","scope":206,"src":"3335:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":200,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:1"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":206,"src":"3374:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:1"},"scope":229,"src":"3265:115:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"3386:390:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":216,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:1","nodeType":"FunctionDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"mutability":"mutable","name":"spender","nameLocation":"3813:7:1","nodeType":"VariableDeclaration","scope":216,"src":"3805:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":208,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":211,"mutability":"mutable","name":"value","nameLocation":"3830:5:1","nodeType":"VariableDeclaration","scope":216,"src":"3822:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":210,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:1"},"returnParameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":216,"src":"3855:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":213,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:1"},"scope":229,"src":"3781:80:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"3867:478:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":228,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:1","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"spender","nameLocation":"4382:7:1","nodeType":"VariableDeclaration","scope":228,"src":"4374:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"value","nameLocation":"4399:5:1","nodeType":"VariableDeclaration","scope":228,"src":"4391:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":220,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"data","nameLocation":"4421:4:1","nodeType":"VariableDeclaration","scope":228,"src":"4406:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":222,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:1"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":228,"src":"4445:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":225,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:1"},"scope":229,"src":"4350:101:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":230,"src":"568:3885:1","usedErrors":[],"usedEvents":[414,423]}],"src":"107:4347:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[3530]},"id":234,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":231,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":233,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":234,"sourceUnit":3531,"src":"132:59:2","symbolAliases":[{"foreign":{"id":232,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"140:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:86:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[480]},"id":238,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":235,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":237,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":238,"sourceUnit":481,"src":"131:49:3","symbolAliases":[{"foreign":{"id":236,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"139:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:76:3"},"id":3},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","exportedSymbols":{"IERC165":[3530],"IERC4906":[261],"IERC721":[1963]},"id":262,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":239,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:4"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":241,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":262,"sourceUnit":234,"src":"133:38:4","symbolAliases":[{"foreign":{"id":240,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"141:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","file":"./IERC721.sol","id":243,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":262,"sourceUnit":266,"src":"172:38:4","symbolAliases":[{"foreign":{"id":242,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"180:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":245,"name":"IERC165","nameLocations":["279:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":3530,"src":"279:7:4"},"id":246,"nodeType":"InheritanceSpecifier","src":"279:7:4"},{"baseName":{"id":247,"name":"IERC721","nameLocations":["288:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":1963,"src":"288:7:4"},"id":248,"nodeType":"InheritanceSpecifier","src":"288:7:4"}],"canonicalName":"IERC4906","contractDependencies":[],"contractKind":"interface","documentation":{"id":244,"nodeType":"StructuredDocumentation","src":"212:45:4","text":"@title ERC-721 Metadata Update Extension"},"fullyImplemented":false,"id":261,"linearizedBaseContracts":[261,1963,3530],"name":"IERC4906","nameLocation":"267:8:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":249,"nodeType":"StructuredDocumentation","src":"302:201:4","text":"@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."},"eventSelector":"f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7","id":253,"name":"MetadataUpdate","nameLocation":"514:14:4","nodeType":"EventDefinition","parameters":{"id":252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":251,"indexed":false,"mutability":"mutable","name":"_tokenId","nameLocation":"537:8:4","nodeType":"VariableDeclaration","scope":253,"src":"529:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":250,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"528:18:4"},"src":"508:39:4"},{"anonymous":false,"documentation":{"id":254,"nodeType":"StructuredDocumentation","src":"553:212:4","text":"@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."},"eventSelector":"6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c","id":260,"name":"BatchMetadataUpdate","nameLocation":"776:19:4","nodeType":"EventDefinition","parameters":{"id":259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":256,"indexed":false,"mutability":"mutable","name":"_fromTokenId","nameLocation":"804:12:4","nodeType":"VariableDeclaration","scope":260,"src":"796:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":255,"name":"uint256","nodeType":"ElementaryTypeName","src":"796:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":258,"indexed":false,"mutability":"mutable","name":"_toTokenId","nameLocation":"826:10:4","nodeType":"VariableDeclaration","scope":260,"src":"818:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":257,"name":"uint256","nodeType":"ElementaryTypeName","src":"818:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"795:42:4"},"src":"770:68:4"}],"scope":262,"src":"257:583:4","usedErrors":[],"usedEvents":[253,260,1862,1871,1880]}],"src":"107:734:4"},"id":4},"@openzeppelin/contracts/interfaces/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","exportedSymbols":{"IERC721":[1963]},"id":266,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":263,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../token/ERC721/IERC721.sol","id":265,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":266,"sourceUnit":1964,"src":"132:52:5","symbolAliases":[{"foreign":{"id":264,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"140:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:79:5"},"id":5},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[402],"IERC20Errors":[307],"IERC721Errors":[355]},"id":403,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":267,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":268,"nodeType":"StructuredDocumentation","src":"138:141:6","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":307,"linearizedBaseContracts":[307],"name":"IERC20Errors","nameLocation":"290:12:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":269,"nodeType":"StructuredDocumentation","src":"309:309:6","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":277,"name":"ERC20InsufficientBalance","nameLocation":"629:24:6","nodeType":"ErrorDefinition","parameters":{"id":276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"sender","nameLocation":"662:6:6","nodeType":"VariableDeclaration","scope":277,"src":"654:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":270,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":273,"mutability":"mutable","name":"balance","nameLocation":"678:7:6","nodeType":"VariableDeclaration","scope":277,"src":"670:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":272,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":275,"mutability":"mutable","name":"needed","nameLocation":"695:6:6","nodeType":"VariableDeclaration","scope":277,"src":"687:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":274,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:6"},"src":"623:80:6"},{"documentation":{"id":278,"nodeType":"StructuredDocumentation","src":"709:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":282,"name":"ERC20InvalidSender","nameLocation":"872:18:6","nodeType":"ErrorDefinition","parameters":{"id":281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":280,"mutability":"mutable","name":"sender","nameLocation":"899:6:6","nodeType":"VariableDeclaration","scope":282,"src":"891:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":279,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:6"},"src":"866:41:6"},{"documentation":{"id":283,"nodeType":"StructuredDocumentation","src":"913:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":287,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:6","nodeType":"ErrorDefinition","parameters":{"id":286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":285,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:6","nodeType":"VariableDeclaration","scope":287,"src":"1104:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":284,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:6"},"src":"1077:45:6"},{"documentation":{"id":288,"nodeType":"StructuredDocumentation","src":"1128:345:6","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":296,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:6","nodeType":"ErrorDefinition","parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"spender","nameLocation":"1519:7:6","nodeType":"VariableDeclaration","scope":296,"src":"1511:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":289,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":292,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:6","nodeType":"VariableDeclaration","scope":296,"src":"1528:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":291,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":294,"mutability":"mutable","name":"needed","nameLocation":"1555:6:6","nodeType":"VariableDeclaration","scope":296,"src":"1547:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":293,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:6"},"src":"1478:85:6"},{"documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"1569:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":301,"name":"ERC20InvalidApprover","nameLocation":"1754:20:6","nodeType":"ErrorDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"approver","nameLocation":"1783:8:6","nodeType":"VariableDeclaration","scope":301,"src":"1775:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:6"},"src":"1748:45:6"},{"documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"1799:195:6","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":306,"name":"ERC20InvalidSpender","nameLocation":"2005:19:6","nodeType":"ErrorDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"spender","nameLocation":"2033:7:6","nodeType":"VariableDeclaration","scope":306,"src":"2025:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":303,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:6"},"src":"1999:43:6"}],"scope":403,"src":"280:1764:6","usedErrors":[277,282,287,296,301,306],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":308,"nodeType":"StructuredDocumentation","src":"2046:143:6","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":355,"linearizedBaseContracts":[355],"name":"IERC721Errors","nameLocation":"2200:13:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"2220:219:6","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":313,"name":"ERC721InvalidOwner","nameLocation":"2450:18:6","nodeType":"ErrorDefinition","parameters":{"id":312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"mutability":"mutable","name":"owner","nameLocation":"2477:5:6","nodeType":"VariableDeclaration","scope":313,"src":"2469:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":310,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:6"},"src":"2444:40:6"},{"documentation":{"id":314,"nodeType":"StructuredDocumentation","src":"2490:132:6","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":318,"name":"ERC721NonexistentToken","nameLocation":"2633:22:6","nodeType":"ErrorDefinition","parameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":316,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:6","nodeType":"VariableDeclaration","scope":318,"src":"2656:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":315,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:6"},"src":"2627:46:6"},{"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"2679:289:6","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":327,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:6","nodeType":"ErrorDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"mutability":"mutable","name":"sender","nameLocation":"3008:6:6","nodeType":"VariableDeclaration","scope":327,"src":"3000:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":320,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":323,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:6","nodeType":"VariableDeclaration","scope":327,"src":"3016:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":322,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":325,"mutability":"mutable","name":"owner","nameLocation":"3041:5:6","nodeType":"VariableDeclaration","scope":327,"src":"3033:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":324,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:6"},"src":"2973:75:6"},{"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"3054:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":332,"name":"ERC721InvalidSender","nameLocation":"3217:19:6","nodeType":"ErrorDefinition","parameters":{"id":331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"mutability":"mutable","name":"sender","nameLocation":"3245:6:6","nodeType":"VariableDeclaration","scope":332,"src":"3237:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:6"},"src":"3211:42:6"},{"documentation":{"id":333,"nodeType":"StructuredDocumentation","src":"3259:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":337,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:6","nodeType":"ErrorDefinition","parameters":{"id":336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":335,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:6","nodeType":"VariableDeclaration","scope":337,"src":"3451:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":334,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:6"},"src":"3423:46:6"},{"documentation":{"id":338,"nodeType":"StructuredDocumentation","src":"3475:247:6","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":344,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:6","nodeType":"ErrorDefinition","parameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"operator","nameLocation":"3768:8:6","nodeType":"VariableDeclaration","scope":344,"src":"3760:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":342,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:6","nodeType":"VariableDeclaration","scope":344,"src":"3778:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":341,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:6"},"src":"3727:68:6"},{"documentation":{"id":345,"nodeType":"StructuredDocumentation","src":"3801:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":349,"name":"ERC721InvalidApprover","nameLocation":"3986:21:6","nodeType":"ErrorDefinition","parameters":{"id":348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":347,"mutability":"mutable","name":"approver","nameLocation":"4016:8:6","nodeType":"VariableDeclaration","scope":349,"src":"4008:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":346,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:6"},"src":"3980:46:6"},{"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"4032:197:6","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":354,"name":"ERC721InvalidOperator","nameLocation":"4240:21:6","nodeType":"ErrorDefinition","parameters":{"id":353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"mutability":"mutable","name":"operator","nameLocation":"4270:8:6","nodeType":"VariableDeclaration","scope":354,"src":"4262:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:6"},"src":"4234:46:6"}],"scope":403,"src":"2190:2092:6","usedErrors":[313,318,327,332,337,344,349,354],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"4284:145:6","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":402,"linearizedBaseContracts":[402],"name":"IERC1155Errors","nameLocation":"4440:14:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":357,"nodeType":"StructuredDocumentation","src":"4461:361:6","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":367,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:6","nodeType":"ErrorDefinition","parameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"mutability":"mutable","name":"sender","nameLocation":"4868:6:6","nodeType":"VariableDeclaration","scope":367,"src":"4860:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":361,"mutability":"mutable","name":"balance","nameLocation":"4884:7:6","nodeType":"VariableDeclaration","scope":367,"src":"4876:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":360,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":363,"mutability":"mutable","name":"needed","nameLocation":"4901:6:6","nodeType":"VariableDeclaration","scope":367,"src":"4893:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":362,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":365,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:6","nodeType":"VariableDeclaration","scope":367,"src":"4909:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":364,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:6"},"src":"4827:99:6"},{"documentation":{"id":368,"nodeType":"StructuredDocumentation","src":"4932:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":372,"name":"ERC1155InvalidSender","nameLocation":"5095:20:6","nodeType":"ErrorDefinition","parameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":370,"mutability":"mutable","name":"sender","nameLocation":"5124:6:6","nodeType":"VariableDeclaration","scope":372,"src":"5116:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":369,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:6"},"src":"5089:43:6"},{"documentation":{"id":373,"nodeType":"StructuredDocumentation","src":"5138:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":377,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:6","nodeType":"ErrorDefinition","parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":375,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:6","nodeType":"VariableDeclaration","scope":377,"src":"5331:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:6"},"src":"5302:47:6"},{"documentation":{"id":378,"nodeType":"StructuredDocumentation","src":"5355:256:6","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":384,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:6","nodeType":"ErrorDefinition","parameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":380,"mutability":"mutable","name":"operator","nameLocation":"5659:8:6","nodeType":"VariableDeclaration","scope":384,"src":"5651:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":379,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":382,"mutability":"mutable","name":"owner","nameLocation":"5677:5:6","nodeType":"VariableDeclaration","scope":384,"src":"5669:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":381,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:6"},"src":"5616:68:6"},{"documentation":{"id":385,"nodeType":"StructuredDocumentation","src":"5690:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":389,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:6","nodeType":"ErrorDefinition","parameters":{"id":388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":387,"mutability":"mutable","name":"approver","nameLocation":"5906:8:6","nodeType":"VariableDeclaration","scope":389,"src":"5898:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:6"},"src":"5869:47:6"},{"documentation":{"id":390,"nodeType":"StructuredDocumentation","src":"5922:197:6","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":394,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:6","nodeType":"ErrorDefinition","parameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":392,"mutability":"mutable","name":"operator","nameLocation":"6161:8:6","nodeType":"VariableDeclaration","scope":394,"src":"6153:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":391,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:6"},"src":"6124:47:6"},{"documentation":{"id":395,"nodeType":"StructuredDocumentation","src":"6177:280:6","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":401,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:6","nodeType":"ErrorDefinition","parameters":{"id":400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":397,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:6","nodeType":"VariableDeclaration","scope":401,"src":"6494:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":396,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":399,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:6","nodeType":"VariableDeclaration","scope":401,"src":"6513:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":398,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:6"},"src":"6462:73:6"}],"scope":403,"src":"4430:2107:6","usedErrors":[367,372,377,384,389,394,401],"usedEvents":[]}],"src":"112:6426:6"},"id":6},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[480]},"id":481,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":404,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":405,"nodeType":"StructuredDocumentation","src":"132:71:7","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":480,"linearizedBaseContracts":[480],"name":"IERC20","nameLocation":"214:6:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":406,"nodeType":"StructuredDocumentation","src":"227:158:7","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":414,"name":"Transfer","nameLocation":"396:8:7","nodeType":"EventDefinition","parameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":408,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:7","nodeType":"VariableDeclaration","scope":414,"src":"405:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":407,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":410,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:7","nodeType":"VariableDeclaration","scope":414,"src":"427:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":409,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":412,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:7","nodeType":"VariableDeclaration","scope":414,"src":"447:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":411,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:7"},"src":"390:72:7"},{"anonymous":false,"documentation":{"id":415,"nodeType":"StructuredDocumentation","src":"468:148:7","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":423,"name":"Approval","nameLocation":"627:8:7","nodeType":"EventDefinition","parameters":{"id":422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:7","nodeType":"VariableDeclaration","scope":423,"src":"636:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":416,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":419,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:7","nodeType":"VariableDeclaration","scope":423,"src":"659:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":418,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":421,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:7","nodeType":"VariableDeclaration","scope":423,"src":"684:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":420,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:7"},"src":"621:78:7"},{"documentation":{"id":424,"nodeType":"StructuredDocumentation","src":"705:65:7","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":429,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:7","nodeType":"FunctionDefinition","parameters":{"id":425,"nodeType":"ParameterList","parameters":[],"src":"795:2:7"},"returnParameters":{"id":428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":427,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":429,"src":"821:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":426,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:7"},"scope":480,"src":"775:55:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"836:71:7","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":437,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:7","nodeType":"FunctionDefinition","parameters":{"id":433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":432,"mutability":"mutable","name":"account","nameLocation":"939:7:7","nodeType":"VariableDeclaration","scope":437,"src":"931:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":431,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:7"},"returnParameters":{"id":436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":437,"src":"971:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":434,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:7"},"scope":480,"src":"912:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":438,"nodeType":"StructuredDocumentation","src":"986:213:7","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":447,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:7","nodeType":"FunctionDefinition","parameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":440,"mutability":"mutable","name":"to","nameLocation":"1230:2:7","nodeType":"VariableDeclaration","scope":447,"src":"1222:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":439,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":442,"mutability":"mutable","name":"value","nameLocation":"1242:5:7","nodeType":"VariableDeclaration","scope":447,"src":"1234:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":441,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:7"},"returnParameters":{"id":446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":447,"src":"1267:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":444,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:7"},"scope":480,"src":"1204:69:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":448,"nodeType":"StructuredDocumentation","src":"1279:264:7","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":457,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:7","nodeType":"FunctionDefinition","parameters":{"id":453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":450,"mutability":"mutable","name":"owner","nameLocation":"1575:5:7","nodeType":"VariableDeclaration","scope":457,"src":"1567:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":449,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":452,"mutability":"mutable","name":"spender","nameLocation":"1590:7:7","nodeType":"VariableDeclaration","scope":457,"src":"1582:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":451,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:7"},"returnParameters":{"id":456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":457,"src":"1622:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":454,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:7"},"scope":480,"src":"1548:83:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":458,"nodeType":"StructuredDocumentation","src":"1637:667:7","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":467,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:7","nodeType":"FunctionDefinition","parameters":{"id":463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"spender","nameLocation":"2334:7:7","nodeType":"VariableDeclaration","scope":467,"src":"2326:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":459,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":462,"mutability":"mutable","name":"value","nameLocation":"2351:5:7","nodeType":"VariableDeclaration","scope":467,"src":"2343:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":461,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:7"},"returnParameters":{"id":466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":467,"src":"2376:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":464,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:7"},"scope":480,"src":"2309:73:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":468,"nodeType":"StructuredDocumentation","src":"2388:297:7","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":479,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:7","nodeType":"FunctionDefinition","parameters":{"id":475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":470,"mutability":"mutable","name":"from","nameLocation":"2720:4:7","nodeType":"VariableDeclaration","scope":479,"src":"2712:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":469,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":472,"mutability":"mutable","name":"to","nameLocation":"2734:2:7","nodeType":"VariableDeclaration","scope":479,"src":"2726:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":471,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":474,"mutability":"mutable","name":"value","nameLocation":"2746:5:7","nodeType":"VariableDeclaration","scope":479,"src":"2738:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":473,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:7"},"returnParameters":{"id":478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":479,"src":"2771:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":476,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:7"},"scope":480,"src":"2690:87:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":481,"src":"204:2575:7","usedErrors":[],"usedEvents":[414,423]}],"src":"106:2674:7"},"id":7},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"IERC1363":[229],"IERC20":[480],"SafeERC20":[889]},"id":890,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":482,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":484,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":890,"sourceUnit":481,"src":"141:37:8","symbolAliases":[{"foreign":{"id":483,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"149:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":486,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":890,"sourceUnit":230,"src":"179:58:8","symbolAliases":[{"foreign":{"id":485,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"187:8:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":487,"nodeType":"StructuredDocumentation","src":"239:458:8","text":" @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":889,"linearizedBaseContracts":[889],"name":"SafeERC20","nameLocation":"706:9:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":488,"nodeType":"StructuredDocumentation","src":"722:65:8","text":" @dev An operation with an ERC-20 token failed."},"errorSelector":"5274afe7","id":492,"name":"SafeERC20FailedOperation","nameLocation":"798:24:8","nodeType":"ErrorDefinition","parameters":{"id":491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":490,"mutability":"mutable","name":"token","nameLocation":"831:5:8","nodeType":"VariableDeclaration","scope":492,"src":"823:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":489,"name":"address","nodeType":"ElementaryTypeName","src":"823:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"822:15:8"},"src":"792:46:8"},{"documentation":{"id":493,"nodeType":"StructuredDocumentation","src":"844:71:8","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":501,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"926:32:8","nodeType":"ErrorDefinition","parameters":{"id":500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":495,"mutability":"mutable","name":"spender","nameLocation":"967:7:8","nodeType":"VariableDeclaration","scope":501,"src":"959:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":494,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":497,"mutability":"mutable","name":"currentAllowance","nameLocation":"984:16:8","nodeType":"VariableDeclaration","scope":501,"src":"976:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":496,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":499,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1010:17:8","nodeType":"VariableDeclaration","scope":501,"src":"1002:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":498,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"958:70:8"},"src":"920:109:8"},{"body":{"id":524,"nodeType":"Block","src":"1291:88:8","statements":[{"expression":{"arguments":[{"id":513,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"1321:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":516,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"1343:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1349:8:8","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":447,"src":"1343:14:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":518,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"1360:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"1364:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":520,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1359:11:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":514,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1328:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1332:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"1328:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1328:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":512,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"1301:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$480_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1301:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":523,"nodeType":"ExpressionStatement","src":"1301:71:8"}]},"documentation":{"id":502,"nodeType":"StructuredDocumentation","src":"1035:179:8","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":525,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1228:12:8","nodeType":"FunctionDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":505,"mutability":"mutable","name":"token","nameLocation":"1248:5:8","nodeType":"VariableDeclaration","scope":525,"src":"1241:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"},"typeName":{"id":504,"nodeType":"UserDefinedTypeName","pathNode":{"id":503,"name":"IERC20","nameLocations":["1241:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":480,"src":"1241:6:8"},"referencedDeclaration":480,"src":"1241:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":507,"mutability":"mutable","name":"to","nameLocation":"1263:2:8","nodeType":"VariableDeclaration","scope":525,"src":"1255:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":506,"name":"address","nodeType":"ElementaryTypeName","src":"1255:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":509,"mutability":"mutable","name":"value","nameLocation":"1275:5:8","nodeType":"VariableDeclaration","scope":525,"src":"1267:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":508,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1240:41:8"},"returnParameters":{"id":511,"nodeType":"ParameterList","parameters":[],"src":"1291:0:8"},"scope":889,"src":"1219:160:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":551,"nodeType":"Block","src":"1708:98:8","statements":[{"expression":{"arguments":[{"id":539,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"1738:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":542,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"1760:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:12:8","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":479,"src":"1760:18:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":544,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"1781:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":545,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"1787:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"1791:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":547,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1780:17:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":540,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1745:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1749:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"1745:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1745:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":538,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"1718:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$480_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:81:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":550,"nodeType":"ExpressionStatement","src":"1718:81:8"}]},"documentation":{"id":526,"nodeType":"StructuredDocumentation","src":"1385:228:8","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":552,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1627:16:8","nodeType":"FunctionDefinition","parameters":{"id":536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":529,"mutability":"mutable","name":"token","nameLocation":"1651:5:8","nodeType":"VariableDeclaration","scope":552,"src":"1644:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"},"typeName":{"id":528,"nodeType":"UserDefinedTypeName","pathNode":{"id":527,"name":"IERC20","nameLocations":["1644:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":480,"src":"1644:6:8"},"referencedDeclaration":480,"src":"1644:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":531,"mutability":"mutable","name":"from","nameLocation":"1666:4:8","nodeType":"VariableDeclaration","scope":552,"src":"1658:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":530,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":533,"mutability":"mutable","name":"to","nameLocation":"1680:2:8","nodeType":"VariableDeclaration","scope":552,"src":"1672:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":532,"name":"address","nodeType":"ElementaryTypeName","src":"1672:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":535,"mutability":"mutable","name":"value","nameLocation":"1692:5:8","nodeType":"VariableDeclaration","scope":552,"src":"1684:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":534,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1643:55:8"},"returnParameters":{"id":537,"nodeType":"ParameterList","parameters":[],"src":"1708:0:8"},"scope":889,"src":"1618:188:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":582,"nodeType":"Block","src":"2548:139:8","statements":[{"assignments":[564],"declarations":[{"constant":false,"id":564,"mutability":"mutable","name":"oldAllowance","nameLocation":"2566:12:8","nodeType":"VariableDeclaration","scope":582,"src":"2558:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":563,"name":"uint256","nodeType":"ElementaryTypeName","src":"2558:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":573,"initialValue":{"arguments":[{"arguments":[{"id":569,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2605:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$889","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$889","typeString":"library SafeERC20"}],"id":568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2597:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"2597:7:8","typeDescriptions":{}}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2597:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":571,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"2612:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":565,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"2581:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2587:9:8","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":457,"src":"2581:15:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2581:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2558:62:8"},{"expression":{"arguments":[{"id":575,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"2643:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}},{"id":576,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"2650:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":577,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"2659:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"2674:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2659:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":574,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"2630:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$480_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2630:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":581,"nodeType":"ExpressionStatement","src":"2630:50:8"}]},"documentation":{"id":553,"nodeType":"StructuredDocumentation","src":"1812:645:8","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":583,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2471:21:8","nodeType":"FunctionDefinition","parameters":{"id":561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":556,"mutability":"mutable","name":"token","nameLocation":"2500:5:8","nodeType":"VariableDeclaration","scope":583,"src":"2493:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"},"typeName":{"id":555,"nodeType":"UserDefinedTypeName","pathNode":{"id":554,"name":"IERC20","nameLocations":["2493:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":480,"src":"2493:6:8"},"referencedDeclaration":480,"src":"2493:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":558,"mutability":"mutable","name":"spender","nameLocation":"2515:7:8","nodeType":"VariableDeclaration","scope":583,"src":"2507:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"2507:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":560,"mutability":"mutable","name":"value","nameLocation":"2532:5:8","nodeType":"VariableDeclaration","scope":583,"src":"2524:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":559,"name":"uint256","nodeType":"ElementaryTypeName","src":"2524:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2492:46:8"},"returnParameters":{"id":562,"nodeType":"ParameterList","parameters":[],"src":"2548:0:8"},"scope":889,"src":"2462:225:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":625,"nodeType":"Block","src":"3453:370:8","statements":[{"id":624,"nodeType":"UncheckedBlock","src":"3463:354:8","statements":[{"assignments":[595],"declarations":[{"constant":false,"id":595,"mutability":"mutable","name":"currentAllowance","nameLocation":"3495:16:8","nodeType":"VariableDeclaration","scope":624,"src":"3487:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":594,"name":"uint256","nodeType":"ElementaryTypeName","src":"3487:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":604,"initialValue":{"arguments":[{"arguments":[{"id":600,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3538:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$889","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$889","typeString":"library SafeERC20"}],"id":599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3530:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":598,"name":"address","nodeType":"ElementaryTypeName","src":"3530:7:8","typeDescriptions":{}}},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3530:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":602,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"3545:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":596,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"3514:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3520:9:8","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":457,"src":"3514:15:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3514:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3487:66:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":605,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"3571:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":606,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"3590:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3571:36:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":615,"nodeType":"IfStatement","src":"3567:160:8","trueBody":{"id":614,"nodeType":"Block","src":"3609:118:8","statements":[{"errorCall":{"arguments":[{"id":609,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"3667:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":610,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"3676:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":611,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"3694:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":608,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"3634:32:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3634:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":613,"nodeType":"RevertStatement","src":"3627:85:8"}]}},{"expression":{"arguments":[{"id":617,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"3753:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}},{"id":618,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"3760:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":619,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"3769:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":620,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"3788:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3769:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":616,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"3740:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$480_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3740:66:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":623,"nodeType":"ExpressionStatement","src":"3740:66:8"}]}]},"documentation":{"id":584,"nodeType":"StructuredDocumentation","src":"2693:657:8","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":626,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3364:21:8","nodeType":"FunctionDefinition","parameters":{"id":592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"mutability":"mutable","name":"token","nameLocation":"3393:5:8","nodeType":"VariableDeclaration","scope":626,"src":"3386:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"},"typeName":{"id":586,"nodeType":"UserDefinedTypeName","pathNode":{"id":585,"name":"IERC20","nameLocations":["3386:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":480,"src":"3386:6:8"},"referencedDeclaration":480,"src":"3386:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"spender","nameLocation":"3408:7:8","nodeType":"VariableDeclaration","scope":626,"src":"3400:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":588,"name":"address","nodeType":"ElementaryTypeName","src":"3400:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":591,"mutability":"mutable","name":"requestedDecrease","nameLocation":"3425:17:8","nodeType":"VariableDeclaration","scope":626,"src":"3417:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":590,"name":"uint256","nodeType":"ElementaryTypeName","src":"3417:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3385:58:8"},"returnParameters":{"id":593,"nodeType":"ParameterList","parameters":[],"src":"3453:0:8"},"scope":889,"src":"3355:468:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":672,"nodeType":"Block","src":"4477:303:8","statements":[{"assignments":[638],"declarations":[{"constant":false,"id":638,"mutability":"mutable","name":"approvalCall","nameLocation":"4500:12:8","nodeType":"VariableDeclaration","scope":672,"src":"4487:25:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":637,"name":"bytes","nodeType":"ElementaryTypeName","src":"4487:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":647,"initialValue":{"arguments":[{"expression":{"id":641,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"4530:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4536:7:8","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":467,"src":"4530:13:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":643,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"4546:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"4555:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":645,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4545:16:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":639,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4515:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4519:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"4515:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4487:75:8"},{"condition":{"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4577:45:8","subExpression":{"arguments":[{"id":649,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"4602:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}},{"id":650,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"4609:12:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":648,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"4578:23:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$480_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4578:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":671,"nodeType":"IfStatement","src":"4573:201:8","trueBody":{"id":670,"nodeType":"Block","src":"4624:150:8","statements":[{"expression":{"arguments":[{"id":654,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"4658:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":657,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"4680:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4686:7:8","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":467,"src":"4680:13:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":659,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"4696:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4705:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":661,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4695:12:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":655,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4665:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4669:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"4665:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4665:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":653,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"4638:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$480_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4638:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":664,"nodeType":"ExpressionStatement","src":"4638:71:8"},{"expression":{"arguments":[{"id":666,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"4743:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}},{"id":667,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"4750:12:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":665,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"4723:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$480_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4723:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":669,"nodeType":"ExpressionStatement","src":"4723:40:8"}]}}]},"documentation":{"id":627,"nodeType":"StructuredDocumentation","src":"3829:566:8","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."},"id":673,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"4409:12:8","nodeType":"FunctionDefinition","parameters":{"id":635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":630,"mutability":"mutable","name":"token","nameLocation":"4429:5:8","nodeType":"VariableDeclaration","scope":673,"src":"4422:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"},"typeName":{"id":629,"nodeType":"UserDefinedTypeName","pathNode":{"id":628,"name":"IERC20","nameLocations":["4422:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":480,"src":"4422:6:8"},"referencedDeclaration":480,"src":"4422:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":632,"mutability":"mutable","name":"spender","nameLocation":"4444:7:8","nodeType":"VariableDeclaration","scope":673,"src":"4436:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":631,"name":"address","nodeType":"ElementaryTypeName","src":"4436:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":634,"mutability":"mutable","name":"value","nameLocation":"4461:5:8","nodeType":"VariableDeclaration","scope":673,"src":"4453:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":633,"name":"uint256","nodeType":"ElementaryTypeName","src":"4453:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4421:46:8"},"returnParameters":{"id":636,"nodeType":"ParameterList","parameters":[],"src":"4477:0:8"},"scope":889,"src":"4400:380:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":715,"nodeType":"Block","src":"5227:219:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":686,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"5241:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5244:4:8","memberName":"code","nodeType":"MemberAccess","src":"5241:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5249:6:8","memberName":"length","nodeType":"MemberAccess","src":"5241:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5259:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5241:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5327:39:8","subExpression":{"arguments":[{"id":700,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"5350:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"5354:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":702,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"5361:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":698,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"5328:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5334:15:8","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":180,"src":"5328:21:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5328:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":713,"nodeType":"IfStatement","src":"5323:117:8","trueBody":{"id":712,"nodeType":"Block","src":"5368:72:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":708,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"5422:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5414:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":706,"name":"address","nodeType":"ElementaryTypeName","src":"5414:7:8","typeDescriptions":{}}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5414:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":705,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"5389:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":711,"nodeType":"RevertStatement","src":"5382:47:8"}]}},"id":714,"nodeType":"IfStatement","src":"5237:203:8","trueBody":{"id":697,"nodeType":"Block","src":"5262:55:8","statements":[{"expression":{"arguments":[{"id":692,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"5289:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":693,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"5296:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"5300:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":691,"name":"safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"5276:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$480_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5276:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":696,"nodeType":"ExpressionStatement","src":"5276:30:8"}]}}]},"documentation":{"id":674,"nodeType":"StructuredDocumentation","src":"4786:333:8","text":" @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":716,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCallRelaxed","nameLocation":"5133:22:8","nodeType":"FunctionDefinition","parameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":677,"mutability":"mutable","name":"token","nameLocation":"5165:5:8","nodeType":"VariableDeclaration","scope":716,"src":"5156:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":676,"nodeType":"UserDefinedTypeName","pathNode":{"id":675,"name":"IERC1363","nameLocations":["5156:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"5156:8:8"},"referencedDeclaration":229,"src":"5156:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":679,"mutability":"mutable","name":"to","nameLocation":"5180:2:8","nodeType":"VariableDeclaration","scope":716,"src":"5172:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":678,"name":"address","nodeType":"ElementaryTypeName","src":"5172:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":681,"mutability":"mutable","name":"value","nameLocation":"5192:5:8","nodeType":"VariableDeclaration","scope":716,"src":"5184:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":680,"name":"uint256","nodeType":"ElementaryTypeName","src":"5184:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":683,"mutability":"mutable","name":"data","nameLocation":"5212:4:8","nodeType":"VariableDeclaration","scope":716,"src":"5199:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":682,"name":"bytes","nodeType":"ElementaryTypeName","src":"5199:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5155:62:8"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[],"src":"5227:0:8"},"scope":889,"src":"5124:322:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":762,"nodeType":"Block","src":"5965:239:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":731,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"5979:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5982:4:8","memberName":"code","nodeType":"MemberAccess","src":"5979:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5987:6:8","memberName":"length","nodeType":"MemberAccess","src":"5979:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5997:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5979:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6075:49:8","subExpression":{"arguments":[{"id":746,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"6102:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":747,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"6108:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"6112:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":749,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"6119:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":744,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"6076:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6082:19:8","memberName":"transferFromAndCall","nodeType":"MemberAccess","referencedDeclaration":206,"src":"6076:25:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) external returns (bool)"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6076:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":760,"nodeType":"IfStatement","src":"6071:127:8","trueBody":{"id":759,"nodeType":"Block","src":"6126:72:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":755,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"6180:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6172:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":753,"name":"address","nodeType":"ElementaryTypeName","src":"6172:7:8","typeDescriptions":{}}},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6172:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":752,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"6147:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6147:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":758,"nodeType":"RevertStatement","src":"6140:47:8"}]}},"id":761,"nodeType":"IfStatement","src":"5975:223:8","trueBody":{"id":743,"nodeType":"Block","src":"6000:65:8","statements":[{"expression":{"arguments":[{"id":737,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"6031:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":738,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"6038:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":739,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"6044:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"6048:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":736,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"6014:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$480_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6014:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":742,"nodeType":"ExpressionStatement","src":"6014:40:8"}]}}]},"documentation":{"id":717,"nodeType":"StructuredDocumentation","src":"5452:341:8","text":" @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":763,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCallRelaxed","nameLocation":"5807:26:8","nodeType":"FunctionDefinition","parameters":{"id":729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":720,"mutability":"mutable","name":"token","nameLocation":"5852:5:8","nodeType":"VariableDeclaration","scope":763,"src":"5843:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":719,"nodeType":"UserDefinedTypeName","pathNode":{"id":718,"name":"IERC1363","nameLocations":["5843:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"5843:8:8"},"referencedDeclaration":229,"src":"5843:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":722,"mutability":"mutable","name":"from","nameLocation":"5875:4:8","nodeType":"VariableDeclaration","scope":763,"src":"5867:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":721,"name":"address","nodeType":"ElementaryTypeName","src":"5867:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":724,"mutability":"mutable","name":"to","nameLocation":"5897:2:8","nodeType":"VariableDeclaration","scope":763,"src":"5889:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"5889:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":726,"mutability":"mutable","name":"value","nameLocation":"5917:5:8","nodeType":"VariableDeclaration","scope":763,"src":"5909:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":725,"name":"uint256","nodeType":"ElementaryTypeName","src":"5909:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":728,"mutability":"mutable","name":"data","nameLocation":"5945:4:8","nodeType":"VariableDeclaration","scope":763,"src":"5932:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":727,"name":"bytes","nodeType":"ElementaryTypeName","src":"5932:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5833:122:8"},"returnParameters":{"id":730,"nodeType":"ParameterList","parameters":[],"src":"5965:0:8"},"scope":889,"src":"5798:406:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":805,"nodeType":"Block","src":"6971:218:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":776,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"6985:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6988:4:8","memberName":"code","nodeType":"MemberAccess","src":"6985:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6993:6:8","memberName":"length","nodeType":"MemberAccess","src":"6985:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7003:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6985:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7071:38:8","subExpression":{"arguments":[{"id":790,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"7093:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"7097:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":792,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"7104:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":788,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"7072:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7078:14:8","memberName":"approveAndCall","nodeType":"MemberAccess","referencedDeclaration":228,"src":"7072:20:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7072:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":803,"nodeType":"IfStatement","src":"7067:116:8","trueBody":{"id":802,"nodeType":"Block","src":"7111:72:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":798,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"7165:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7157:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":796,"name":"address","nodeType":"ElementaryTypeName","src":"7157:7:8","typeDescriptions":{}}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7157:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":795,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"7132:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7132:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":801,"nodeType":"RevertStatement","src":"7125:47:8"}]}},"id":804,"nodeType":"IfStatement","src":"6981:202:8","trueBody":{"id":787,"nodeType":"Block","src":"7006:55:8","statements":[{"expression":{"arguments":[{"id":782,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"7033:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":783,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"7040:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"7044:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":781,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"7020:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$480_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7020:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":786,"nodeType":"ExpressionStatement","src":"7020:30:8"}]}}]},"documentation":{"id":764,"nodeType":"StructuredDocumentation","src":"6210:654:8","text":" @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."},"id":806,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCallRelaxed","nameLocation":"6878:21:8","nodeType":"FunctionDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"mutability":"mutable","name":"token","nameLocation":"6909:5:8","nodeType":"VariableDeclaration","scope":806,"src":"6900:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":766,"nodeType":"UserDefinedTypeName","pathNode":{"id":765,"name":"IERC1363","nameLocations":["6900:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"6900:8:8"},"referencedDeclaration":229,"src":"6900:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":769,"mutability":"mutable","name":"to","nameLocation":"6924:2:8","nodeType":"VariableDeclaration","scope":806,"src":"6916:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":768,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":771,"mutability":"mutable","name":"value","nameLocation":"6936:5:8","nodeType":"VariableDeclaration","scope":806,"src":"6928:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":770,"name":"uint256","nodeType":"ElementaryTypeName","src":"6928:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":773,"mutability":"mutable","name":"data","nameLocation":"6956:4:8","nodeType":"VariableDeclaration","scope":806,"src":"6943:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":772,"name":"bytes","nodeType":"ElementaryTypeName","src":"6943:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6899:62:8"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[],"src":"6971:0:8"},"scope":889,"src":"6869:320:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":846,"nodeType":"Block","src":"7756:650:8","statements":[{"assignments":[816],"declarations":[{"constant":false,"id":816,"mutability":"mutable","name":"returnSize","nameLocation":"7774:10:8","nodeType":"VariableDeclaration","scope":846,"src":"7766:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":815,"name":"uint256","nodeType":"ElementaryTypeName","src":"7766:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":817,"nodeType":"VariableDeclarationStatement","src":"7766:18:8"},{"assignments":[819],"declarations":[{"constant":false,"id":819,"mutability":"mutable","name":"returnValue","nameLocation":"7802:11:8","nodeType":"VariableDeclaration","scope":846,"src":"7794:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":818,"name":"uint256","nodeType":"ElementaryTypeName","src":"7794:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":820,"nodeType":"VariableDeclarationStatement","src":"7794:19:8"},{"AST":{"nodeType":"YulBlock","src":"7848:396:8","statements":[{"nodeType":"YulVariableDeclaration","src":"7862:75:8","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"7882:3:8"},"nodeType":"YulFunctionCall","src":"7882:5:8"},{"name":"token","nodeType":"YulIdentifier","src":"7889:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"7896:1:8","type":"","value":"0"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7903:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"7909:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7899:3:8"},"nodeType":"YulFunctionCall","src":"7899:15:8"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7922:4:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7916:5:8"},"nodeType":"YulFunctionCall","src":"7916:11:8"},{"kind":"number","nodeType":"YulLiteral","src":"7929:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7932:4:8","type":"","value":"0x20"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"7877:4:8"},"nodeType":"YulFunctionCall","src":"7877:60:8"},"variables":[{"name":"success","nodeType":"YulTypedName","src":"7866:7:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"7998:157:8","statements":[{"nodeType":"YulVariableDeclaration","src":"8016:22:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8033:4:8","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8027:5:8"},"nodeType":"YulFunctionCall","src":"8027:11:8"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"8020:3:8","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8070:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"8075:1:8","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8078:14:8"},"nodeType":"YulFunctionCall","src":"8078:16:8"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"8055:14:8"},"nodeType":"YulFunctionCall","src":"8055:40:8"},"nodeType":"YulExpressionStatement","src":"8055:40:8"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8119:3:8"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8124:14:8"},"nodeType":"YulFunctionCall","src":"8124:16:8"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8112:6:8"},"nodeType":"YulFunctionCall","src":"8112:29:8"},"nodeType":"YulExpressionStatement","src":"8112:29:8"}]},"condition":{"arguments":[{"name":"success","nodeType":"YulIdentifier","src":"7989:7:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7982:6:8"},"nodeType":"YulFunctionCall","src":"7982:15:8"},"nodeType":"YulIf","src":"7979:176:8"},{"nodeType":"YulAssignment","src":"8168:30:8","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8182:14:8"},"nodeType":"YulFunctionCall","src":"8182:16:8"},"variableNames":[{"name":"returnSize","nodeType":"YulIdentifier","src":"8168:10:8"}]},{"nodeType":"YulAssignment","src":"8211:23:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8232:1:8","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8226:5:8"},"nodeType":"YulFunctionCall","src":"8226:8:8"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"8211:11:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":812,"isOffset":false,"isSlot":false,"src":"7903:4:8","valueSize":1},{"declaration":812,"isOffset":false,"isSlot":false,"src":"7922:4:8","valueSize":1},{"declaration":816,"isOffset":false,"isSlot":false,"src":"8168:10:8","valueSize":1},{"declaration":819,"isOffset":false,"isSlot":false,"src":"8211:11:8","valueSize":1},{"declaration":810,"isOffset":false,"isSlot":false,"src":"7889:5:8","valueSize":1}],"flags":["memory-safe"],"id":821,"nodeType":"InlineAssembly","src":"7823:421:8"},{"condition":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":822,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"8258:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8272:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8258:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":833,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"8310:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8325:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8310:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8258:68:8","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":827,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"8284:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}],"id":826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8276:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":825,"name":"address","nodeType":"ElementaryTypeName","src":"8276:7:8","typeDescriptions":{}}},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8276:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8291:4:8","memberName":"code","nodeType":"MemberAccess","src":"8276:19:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8296:6:8","memberName":"length","nodeType":"MemberAccess","src":"8276:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8306:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8276:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":845,"nodeType":"IfStatement","src":"8254:146:8","trueBody":{"id":844,"nodeType":"Block","src":"8328:72:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":840,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"8382:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}],"id":839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8374:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":838,"name":"address","nodeType":"ElementaryTypeName","src":"8374:7:8","typeDescriptions":{}}},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":837,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"8349:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8349:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":843,"nodeType":"RevertStatement","src":"8342:47:8"}]}}]},"documentation":{"id":807,"nodeType":"StructuredDocumentation","src":"7195:486:8","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."},"id":847,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"7695:19:8","nodeType":"FunctionDefinition","parameters":{"id":813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":810,"mutability":"mutable","name":"token","nameLocation":"7722:5:8","nodeType":"VariableDeclaration","scope":847,"src":"7715:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"},"typeName":{"id":809,"nodeType":"UserDefinedTypeName","pathNode":{"id":808,"name":"IERC20","nameLocations":["7715:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":480,"src":"7715:6:8"},"referencedDeclaration":480,"src":"7715:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":812,"mutability":"mutable","name":"data","nameLocation":"7742:4:8","nodeType":"VariableDeclaration","scope":847,"src":"7729:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":811,"name":"bytes","nodeType":"ElementaryTypeName","src":"7729:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7714:33:8"},"returnParameters":{"id":814,"nodeType":"ParameterList","parameters":[],"src":"7756:0:8"},"scope":889,"src":"7686:720:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":887,"nodeType":"Block","src":"8997:391:8","statements":[{"assignments":[859],"declarations":[{"constant":false,"id":859,"mutability":"mutable","name":"success","nameLocation":"9012:7:8","nodeType":"VariableDeclaration","scope":887,"src":"9007:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":858,"name":"bool","nodeType":"ElementaryTypeName","src":"9007:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":860,"nodeType":"VariableDeclarationStatement","src":"9007:12:8"},{"assignments":[862],"declarations":[{"constant":false,"id":862,"mutability":"mutable","name":"returnSize","nameLocation":"9037:10:8","nodeType":"VariableDeclaration","scope":887,"src":"9029:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":861,"name":"uint256","nodeType":"ElementaryTypeName","src":"9029:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":863,"nodeType":"VariableDeclarationStatement","src":"9029:18:8"},{"assignments":[865],"declarations":[{"constant":false,"id":865,"mutability":"mutable","name":"returnValue","nameLocation":"9065:11:8","nodeType":"VariableDeclaration","scope":887,"src":"9057:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":864,"name":"uint256","nodeType":"ElementaryTypeName","src":"9057:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":866,"nodeType":"VariableDeclarationStatement","src":"9057:19:8"},{"AST":{"nodeType":"YulBlock","src":"9111:174:8","statements":[{"nodeType":"YulAssignment","src":"9125:71:8","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"9141:3:8"},"nodeType":"YulFunctionCall","src":"9141:5:8"},{"name":"token","nodeType":"YulIdentifier","src":"9148:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"9155:1:8","type":"","value":"0"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9162:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"9168:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9158:3:8"},"nodeType":"YulFunctionCall","src":"9158:15:8"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9181:4:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9175:5:8"},"nodeType":"YulFunctionCall","src":"9175:11:8"},{"kind":"number","nodeType":"YulLiteral","src":"9188:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9191:4:8","type":"","value":"0x20"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"9136:4:8"},"nodeType":"YulFunctionCall","src":"9136:60:8"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"9125:7:8"}]},{"nodeType":"YulAssignment","src":"9209:30:8","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"9223:14:8"},"nodeType":"YulFunctionCall","src":"9223:16:8"},"variableNames":[{"name":"returnSize","nodeType":"YulIdentifier","src":"9209:10:8"}]},{"nodeType":"YulAssignment","src":"9252:23:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9273:1:8","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9267:5:8"},"nodeType":"YulFunctionCall","src":"9267:8:8"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"9252:11:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":853,"isOffset":false,"isSlot":false,"src":"9162:4:8","valueSize":1},{"declaration":853,"isOffset":false,"isSlot":false,"src":"9181:4:8","valueSize":1},{"declaration":862,"isOffset":false,"isSlot":false,"src":"9209:10:8","valueSize":1},{"declaration":865,"isOffset":false,"isSlot":false,"src":"9252:11:8","valueSize":1},{"declaration":859,"isOffset":false,"isSlot":false,"src":"9125:7:8","valueSize":1},{"declaration":851,"isOffset":false,"isSlot":false,"src":"9148:5:8","valueSize":1}],"flags":["memory-safe"],"id":867,"nodeType":"InlineAssembly","src":"9086:199:8"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":868,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"9301:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":869,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"9313:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9327:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9313:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":880,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"9364:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9379:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9364:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9313:67:8","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":874,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"9339:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}],"id":873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9331:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":872,"name":"address","nodeType":"ElementaryTypeName","src":"9331:7:8","typeDescriptions":{}}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9331:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9346:4:8","memberName":"code","nodeType":"MemberAccess","src":"9331:19:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9351:6:8","memberName":"length","nodeType":"MemberAccess","src":"9331:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9360:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9331:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":884,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9312:69:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9301:80:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":857,"id":886,"nodeType":"Return","src":"9294:87:8"}]},"documentation":{"id":848,"nodeType":"StructuredDocumentation","src":"8412:491:8","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."},"id":888,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"8917:23:8","nodeType":"FunctionDefinition","parameters":{"id":854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"token","nameLocation":"8948:5:8","nodeType":"VariableDeclaration","scope":888,"src":"8941:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"},"typeName":{"id":850,"nodeType":"UserDefinedTypeName","pathNode":{"id":849,"name":"IERC20","nameLocations":["8941:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":480,"src":"8941:6:8"},"referencedDeclaration":480,"src":"8941:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":853,"mutability":"mutable","name":"data","nameLocation":"8968:4:8","nodeType":"VariableDeclaration","scope":888,"src":"8955:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":852,"name":"bytes","nodeType":"ElementaryTypeName","src":"8955:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8940:33:8"},"returnParameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":888,"src":"8991:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":855,"name":"bool","nodeType":"ElementaryTypeName","src":"8991:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8990:6:8"},"scope":889,"src":"8908:480:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":890,"src":"698:8692:8","usedErrors":[492,501],"usedEvents":[]}],"src":"115:9276:8"},"id":8},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[2242],"ERC165":[3518],"ERC721":[1846],"ERC721Utils":[2212],"IERC165":[3530],"IERC721":[1963],"IERC721Errors":[355],"IERC721Metadata":[2135],"Strings":[3494]},"id":1847,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":891,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":893,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1847,"sourceUnit":1964,"src":"133:38:9","symbolAliases":[{"foreign":{"id":892,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"141:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":895,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1847,"sourceUnit":2136,"src":"172:65:9","symbolAliases":[{"foreign":{"id":894,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"180:15:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":897,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1847,"sourceUnit":2213,"src":"238:52:9","symbolAliases":[{"foreign":{"id":896,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"246:11:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":899,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1847,"sourceUnit":2243,"src":"291:48:9","symbolAliases":[{"foreign":{"id":898,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"299:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":901,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1847,"sourceUnit":3495,"src":"340:48:9","symbolAliases":[{"foreign":{"id":900,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"348:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":904,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1847,"sourceUnit":3519,"src":"389:69:9","symbolAliases":[{"foreign":{"id":902,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"397:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":903,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"406:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":906,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1847,"sourceUnit":403,"src":"459:66:9","symbolAliases":[{"foreign":{"id":905,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"467:13:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":908,"name":"Context","nameLocations":["803:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":2242,"src":"803:7:9"},"id":909,"nodeType":"InheritanceSpecifier","src":"803:7:9"},{"baseName":{"id":910,"name":"ERC165","nameLocations":["812:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":3518,"src":"812:6:9"},"id":911,"nodeType":"InheritanceSpecifier","src":"812:6:9"},{"baseName":{"id":912,"name":"IERC721","nameLocations":["820:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1963,"src":"820:7:9"},"id":913,"nodeType":"InheritanceSpecifier","src":"820:7:9"},{"baseName":{"id":914,"name":"IERC721Metadata","nameLocations":["829:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":2135,"src":"829:15:9"},"id":915,"nodeType":"InheritanceSpecifier","src":"829:15:9"},{"baseName":{"id":916,"name":"IERC721Errors","nameLocations":["846:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":355,"src":"846:13:9"},"id":917,"nodeType":"InheritanceSpecifier","src":"846:13:9"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":907,"nodeType":"StructuredDocumentation","src":"527:247:9","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1846,"linearizedBaseContracts":[1846,355,2135,1963,3518,3530,2242],"name":"ERC721","nameLocation":"793:6:9","nodeType":"ContractDefinition","nodes":[{"global":false,"id":920,"libraryName":{"id":918,"name":"Strings","nameLocations":["872:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":3494,"src":"872:7:9"},"nodeType":"UsingForDirective","src":"866:26:9","typeName":{"id":919,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":922,"mutability":"mutable","name":"_name","nameLocation":"931:5:9","nodeType":"VariableDeclaration","scope":1846,"src":"916:20:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":921,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":924,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:9","nodeType":"VariableDeclaration","scope":1846,"src":"963:22:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":923,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":928,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:9","nodeType":"VariableDeclaration","scope":1846,"src":"992:51:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":927,"keyName":"tokenId","keyNameLocation":"1008:7:9","keyType":{"id":925,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":926,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":932,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:9","nodeType":"VariableDeclaration","scope":1846,"src":"1050:51:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":931,"keyName":"owner","keyNameLocation":"1066:5:9","keyType":{"id":929,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":930,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":936,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:9","nodeType":"VariableDeclaration","scope":1846,"src":"1108:59:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":935,"keyName":"tokenId","keyNameLocation":"1124:7:9","keyType":{"id":933,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":934,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":942,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:9","nodeType":"VariableDeclaration","scope":1846,"src":"1174:86:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":941,"keyName":"owner","keyNameLocation":"1190:5:9","keyType":{"id":937,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":940,"keyName":"operator","keyNameLocation":"1215:8:9","keyType":{"id":938,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":939,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":958,"nodeType":"Block","src":"1436:57:9","statements":[{"expression":{"id":952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":950,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"1446:5:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":951,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"1454:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":953,"nodeType":"ExpressionStatement","src":"1446:13:9"},{"expression":{"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":954,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"1469:7:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":955,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"1479:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":957,"nodeType":"ExpressionStatement","src":"1469:17:9"}]},"documentation":{"id":943,"nodeType":"StructuredDocumentation","src":"1267:108:9","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":959,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":945,"mutability":"mutable","name":"name_","nameLocation":"1406:5:9","nodeType":"VariableDeclaration","scope":959,"src":"1392:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":944,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":947,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:9","nodeType":"VariableDeclaration","scope":959,"src":"1413:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":946,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:9"},"returnParameters":{"id":949,"nodeType":"ParameterList","parameters":[],"src":"1436:0:9"},"scope":1846,"src":"1380:113:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3517,3529],"body":{"id":989,"nodeType":"Block","src":"1668:192:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":970,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"1697:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":972,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"1717:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1963_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1963_$","typeString":"type(contract IERC721)"}],"id":971,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1712:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1712:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1963","typeString":"type(contract IERC721)"}},"id":974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1726:11:9","memberName":"interfaceId","nodeType":"MemberAccess","src":"1712:25:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1697:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":976,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"1753:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":978,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"1773:15:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2135_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2135_$","typeString":"type(contract IERC721Metadata)"}],"id":977,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1768:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1768:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$2135","typeString":"type(contract IERC721Metadata)"}},"id":980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1790:11:9","memberName":"interfaceId","nodeType":"MemberAccess","src":"1768:33:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1753:48:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:104:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":985,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"1841:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":983,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1817:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1846_$","typeString":"type(contract super ERC721)"}},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1823:17:9","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3517,"src":"1817:23:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1817:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:156:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":969,"id":988,"nodeType":"Return","src":"1678:175:9"}]},"documentation":{"id":960,"nodeType":"StructuredDocumentation","src":"1499:56:9","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":990,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1569:17:9","nodeType":"FunctionDefinition","overrides":{"id":966,"nodeType":"OverrideSpecifier","overrides":[{"id":964,"name":"ERC165","nameLocations":["1636:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":3518,"src":"1636:6:9"},{"id":965,"name":"IERC165","nameLocations":["1644:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":3530,"src":"1644:7:9"}],"src":"1627:25:9"},"parameters":{"id":963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":962,"mutability":"mutable","name":"interfaceId","nameLocation":"1594:11:9","nodeType":"VariableDeclaration","scope":990,"src":"1587:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":961,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1587:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1586:20:9"},"returnParameters":{"id":969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":990,"src":"1662:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":967,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:9"},"scope":1846,"src":"1560:300:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1888],"body":{"id":1017,"nodeType":"Block","src":"1991:136:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":998,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"2005:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2022:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2014:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:9","typeDescriptions":{}}},"id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2014:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2005:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1012,"nodeType":"IfStatement","src":"2001:87:9","trueBody":{"id":1011,"nodeType":"Block","src":"2026:62:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2074:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2066:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1005,"name":"address","nodeType":"ElementaryTypeName","src":"2066:7:9","typeDescriptions":{}}},"id":1008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2066:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1004,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"2047:18:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2047:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1010,"nodeType":"RevertStatement","src":"2040:37:9"}]}},{"expression":{"baseExpression":{"id":1013,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"2104:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1015,"indexExpression":{"id":1014,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"2114:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2104:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":997,"id":1016,"nodeType":"Return","src":"2097:23:9"}]},"documentation":{"id":991,"nodeType":"StructuredDocumentation","src":"1866:48:9","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":1018,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1928:9:9","nodeType":"FunctionDefinition","parameters":{"id":994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":993,"mutability":"mutable","name":"owner","nameLocation":"1946:5:9","nodeType":"VariableDeclaration","scope":1018,"src":"1938:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":992,"name":"address","nodeType":"ElementaryTypeName","src":"1938:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1937:15:9"},"returnParameters":{"id":997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1018,"src":"1982:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":995,"name":"uint256","nodeType":"ElementaryTypeName","src":"1982:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1981:9:9"},"scope":1846,"src":"1919:208:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1896],"body":{"id":1030,"nodeType":"Block","src":"2256:46:9","statements":[{"expression":{"arguments":[{"id":1027,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"2287:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1026,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"2273:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1025,"id":1029,"nodeType":"Return","src":"2266:29:9"}]},"documentation":{"id":1019,"nodeType":"StructuredDocumentation","src":"2133:46:9","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":1031,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2193:7:9","nodeType":"FunctionDefinition","parameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"tokenId","nameLocation":"2209:7:9","nodeType":"VariableDeclaration","scope":1031,"src":"2201:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1020,"name":"uint256","nodeType":"ElementaryTypeName","src":"2201:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2200:17:9"},"returnParameters":{"id":1025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1031,"src":"2247:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1023,"name":"address","nodeType":"ElementaryTypeName","src":"2247:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2246:9:9"},"scope":1846,"src":"2184:118:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2120],"body":{"id":1039,"nodeType":"Block","src":"2424:29:9","statements":[{"expression":{"id":1037,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"2441:5:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1036,"id":1038,"nodeType":"Return","src":"2434:12:9"}]},"documentation":{"id":1032,"nodeType":"StructuredDocumentation","src":"2308:51:9","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":1040,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2373:4:9","nodeType":"FunctionDefinition","parameters":{"id":1033,"nodeType":"ParameterList","parameters":[],"src":"2377:2:9"},"returnParameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1035,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1040,"src":"2409:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1034,"name":"string","nodeType":"ElementaryTypeName","src":"2409:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2408:15:9"},"scope":1846,"src":"2364:89:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2126],"body":{"id":1048,"nodeType":"Block","src":"2579:31:9","statements":[{"expression":{"id":1046,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"2596:7:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1045,"id":1047,"nodeType":"Return","src":"2589:14:9"}]},"documentation":{"id":1041,"nodeType":"StructuredDocumentation","src":"2459:53:9","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":1049,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2526:6:9","nodeType":"FunctionDefinition","parameters":{"id":1042,"nodeType":"ParameterList","parameters":[],"src":"2532:2:9"},"returnParameters":{"id":1045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1049,"src":"2564:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1043,"name":"string","nodeType":"ElementaryTypeName","src":"2564:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2563:15:9"},"scope":1846,"src":"2517:93:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2134],"body":{"id":1084,"nodeType":"Block","src":"2755:176:9","statements":[{"expression":{"arguments":[{"id":1058,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"2779:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1057,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"2765:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2765:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1060,"nodeType":"ExpressionStatement","src":"2765:22:9"},{"assignments":[1062],"declarations":[{"constant":false,"id":1062,"mutability":"mutable","name":"baseURI","nameLocation":"2812:7:9","nodeType":"VariableDeclaration","scope":1084,"src":"2798:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1061,"name":"string","nodeType":"ElementaryTypeName","src":"2798:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1065,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1063,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"2822:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2822:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2798:34:9"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1068,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"2855:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2849:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1066,"name":"bytes","nodeType":"ElementaryTypeName","src":"2849:5:9","typeDescriptions":{}}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2849:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:9","memberName":"length","nodeType":"MemberAccess","src":"2849:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2873:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2849:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2922:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2849:75:9","trueExpression":{"arguments":[{"id":1076,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"2891:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1077,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"2900:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2908:8:9","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2372,"src":"2900:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2900:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2877:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1073,"name":"string","nodeType":"ElementaryTypeName","src":"2877:6:9","typeDescriptions":{}}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2884:6:9","memberName":"concat","nodeType":"MemberAccess","src":"2877:13:9","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2877:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1056,"id":1083,"nodeType":"Return","src":"2842:82:9"}]},"documentation":{"id":1050,"nodeType":"StructuredDocumentation","src":"2616:55:9","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1085,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2685:8:9","nodeType":"FunctionDefinition","parameters":{"id":1053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1052,"mutability":"mutable","name":"tokenId","nameLocation":"2702:7:9","nodeType":"VariableDeclaration","scope":1085,"src":"2694:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1051,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2693:17:9"},"returnParameters":{"id":1056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1085,"src":"2740:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1054,"name":"string","nodeType":"ElementaryTypeName","src":"2740:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2739:15:9"},"scope":1846,"src":"2676:255:9","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1093,"nodeType":"Block","src":"3239:26:9","statements":[{"expression":{"hexValue":"","id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3256:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1090,"id":1092,"nodeType":"Return","src":"3249:9:9"}]},"documentation":{"id":1086,"nodeType":"StructuredDocumentation","src":"2937:231:9","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":1094,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3182:8:9","nodeType":"FunctionDefinition","parameters":{"id":1087,"nodeType":"ParameterList","parameters":[],"src":"3190:2:9"},"returnParameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1094,"src":"3224:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1088,"name":"string","nodeType":"ElementaryTypeName","src":"3224:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3223:15:9"},"scope":1846,"src":"3173:92:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1936],"body":{"id":1109,"nodeType":"Block","src":"3383:52:9","statements":[{"expression":{"arguments":[{"id":1103,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"3402:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1104,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"3406:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1105,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"3415:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3415:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1102,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1713,1779],"referencedDeclaration":1713,"src":"3393:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3393:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1108,"nodeType":"ExpressionStatement","src":"3393:35:9"}]},"documentation":{"id":1095,"nodeType":"StructuredDocumentation","src":"3271:46:9","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":1110,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3331:7:9","nodeType":"FunctionDefinition","parameters":{"id":1100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1097,"mutability":"mutable","name":"to","nameLocation":"3347:2:9","nodeType":"VariableDeclaration","scope":1110,"src":"3339:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1096,"name":"address","nodeType":"ElementaryTypeName","src":"3339:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1099,"mutability":"mutable","name":"tokenId","nameLocation":"3359:7:9","nodeType":"VariableDeclaration","scope":1110,"src":"3351:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1098,"name":"uint256","nodeType":"ElementaryTypeName","src":"3351:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3338:29:9"},"returnParameters":{"id":1101,"nodeType":"ParameterList","parameters":[],"src":"3383:0:9"},"scope":1846,"src":"3322:113:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1952],"body":{"id":1126,"nodeType":"Block","src":"3572:78:9","statements":[{"expression":{"arguments":[{"id":1119,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"3596:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1118,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"3582:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1121,"nodeType":"ExpressionStatement","src":"3582:22:9"},{"expression":{"arguments":[{"id":1123,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"3635:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1122,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"3622:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3622:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1117,"id":1125,"nodeType":"Return","src":"3615:28:9"}]},"documentation":{"id":1111,"nodeType":"StructuredDocumentation","src":"3441:50:9","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":1127,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3505:11:9","nodeType":"FunctionDefinition","parameters":{"id":1114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1113,"mutability":"mutable","name":"tokenId","nameLocation":"3525:7:9","nodeType":"VariableDeclaration","scope":1127,"src":"3517:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1112,"name":"uint256","nodeType":"ElementaryTypeName","src":"3517:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3516:17:9"},"returnParameters":{"id":1117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1127,"src":"3563:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1115,"name":"address","nodeType":"ElementaryTypeName","src":"3563:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3562:9:9"},"scope":1846,"src":"3496:154:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1944],"body":{"id":1142,"nodeType":"Block","src":"3792:69:9","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1136,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"3821:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1138,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"3835:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1139,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"3845:8:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1135,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"3802:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3802:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1141,"nodeType":"ExpressionStatement","src":"3802:52:9"}]},"documentation":{"id":1128,"nodeType":"StructuredDocumentation","src":"3656:56:9","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":1143,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3726:17:9","nodeType":"FunctionDefinition","parameters":{"id":1133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1130,"mutability":"mutable","name":"operator","nameLocation":"3752:8:9","nodeType":"VariableDeclaration","scope":1143,"src":"3744:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1129,"name":"address","nodeType":"ElementaryTypeName","src":"3744:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1132,"mutability":"mutable","name":"approved","nameLocation":"3767:8:9","nodeType":"VariableDeclaration","scope":1143,"src":"3762:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1131,"name":"bool","nodeType":"ElementaryTypeName","src":"3762:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3743:33:9"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[],"src":"3792:0:9"},"scope":1846,"src":"3717:144:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1962],"body":{"id":1159,"nodeType":"Block","src":"4021:59:9","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1153,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"4038:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1155,"indexExpression":{"id":1154,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"4057:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1157,"indexExpression":{"id":1156,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"4064:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:35:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1152,"id":1158,"nodeType":"Return","src":"4031:42:9"}]},"documentation":{"id":1144,"nodeType":"StructuredDocumentation","src":"3867:55:9","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":1160,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3936:16:9","nodeType":"FunctionDefinition","parameters":{"id":1149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1146,"mutability":"mutable","name":"owner","nameLocation":"3961:5:9","nodeType":"VariableDeclaration","scope":1160,"src":"3953:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1145,"name":"address","nodeType":"ElementaryTypeName","src":"3953:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1148,"mutability":"mutable","name":"operator","nameLocation":"3976:8:9","nodeType":"VariableDeclaration","scope":1160,"src":"3968:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1147,"name":"address","nodeType":"ElementaryTypeName","src":"3968:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3952:33:9"},"returnParameters":{"id":1152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1160,"src":"4015:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1150,"name":"bool","nodeType":"ElementaryTypeName","src":"4015:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4014:6:9"},"scope":1846,"src":"3927:153:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1928],"body":{"id":1205,"nodeType":"Block","src":"4222:498:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1170,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"4236:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4250:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4242:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1171,"name":"address","nodeType":"ElementaryTypeName","src":"4242:7:9","typeDescriptions":{}}},"id":1174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4242:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4236:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1184,"nodeType":"IfStatement","src":"4232:87:9","trueBody":{"id":1183,"nodeType":"Block","src":"4254:65:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4305:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4297:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1177,"name":"address","nodeType":"ElementaryTypeName","src":"4297:7:9","typeDescriptions":{}}},"id":1180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1176,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4275:21:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4275:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1182,"nodeType":"RevertStatement","src":"4268:40:9"}]}},{"assignments":[1186],"declarations":[{"constant":false,"id":1186,"mutability":"mutable","name":"previousOwner","nameLocation":"4545:13:9","nodeType":"VariableDeclaration","scope":1205,"src":"4537:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"4537:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1193,"initialValue":{"arguments":[{"id":1188,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"4569:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1189,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"4573:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1190,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"4582:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4582:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1187,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"4561:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4537:58:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1194,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"4609:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1195,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"4626:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4609:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1204,"nodeType":"IfStatement","src":"4605:109:9","trueBody":{"id":1203,"nodeType":"Block","src":"4632:82:9","statements":[{"errorCall":{"arguments":[{"id":1198,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"4674:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1199,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"4680:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1200,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"4689:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1197,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"4653:20:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4653:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1202,"nodeType":"RevertStatement","src":"4646:57:9"}]}}]},"documentation":{"id":1161,"nodeType":"StructuredDocumentation","src":"4086:51:9","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":1206,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4151:12:9","nodeType":"FunctionDefinition","parameters":{"id":1168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1163,"mutability":"mutable","name":"from","nameLocation":"4172:4:9","nodeType":"VariableDeclaration","scope":1206,"src":"4164:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1162,"name":"address","nodeType":"ElementaryTypeName","src":"4164:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1165,"mutability":"mutable","name":"to","nameLocation":"4186:2:9","nodeType":"VariableDeclaration","scope":1206,"src":"4178:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1164,"name":"address","nodeType":"ElementaryTypeName","src":"4178:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1167,"mutability":"mutable","name":"tokenId","nameLocation":"4198:7:9","nodeType":"VariableDeclaration","scope":1206,"src":"4190:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1166,"name":"uint256","nodeType":"ElementaryTypeName","src":"4190:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4163:43:9"},"returnParameters":{"id":1169,"nodeType":"ParameterList","parameters":[],"src":"4222:0:9"},"scope":1846,"src":"4142:578:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1918],"body":{"id":1223,"nodeType":"Block","src":"4862:56:9","statements":[{"expression":{"arguments":[{"id":1217,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"4889:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1218,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"4895:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1219,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"4899:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4908:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1216,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1224,1254],"referencedDeclaration":1254,"src":"4872:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4872:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1222,"nodeType":"ExpressionStatement","src":"4872:39:9"}]},"documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"4726:55:9","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":1224,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4795:16:9","nodeType":"FunctionDefinition","parameters":{"id":1214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1209,"mutability":"mutable","name":"from","nameLocation":"4820:4:9","nodeType":"VariableDeclaration","scope":1224,"src":"4812:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1208,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1211,"mutability":"mutable","name":"to","nameLocation":"4834:2:9","nodeType":"VariableDeclaration","scope":1224,"src":"4826:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1210,"name":"address","nodeType":"ElementaryTypeName","src":"4826:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1213,"mutability":"mutable","name":"tokenId","nameLocation":"4846:7:9","nodeType":"VariableDeclaration","scope":1224,"src":"4838:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1212,"name":"uint256","nodeType":"ElementaryTypeName","src":"4838:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4811:43:9"},"returnParameters":{"id":1215,"nodeType":"ParameterList","parameters":[],"src":"4862:0:9"},"scope":1846,"src":"4786:132:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1908],"body":{"id":1253,"nodeType":"Block","src":"5087:130:9","statements":[{"expression":{"arguments":[{"id":1237,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"5110:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1238,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"5116:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1239,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"5120:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1236,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"5097:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5097:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1241,"nodeType":"ExpressionStatement","src":"5097:31:9"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1245,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"5172:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5172:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1247,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"5186:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1248,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"5192:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1249,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"5196:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1250,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"5205:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1242,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"5138:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2212_$","typeString":"type(library ERC721Utils)"}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5150:21:9","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2211,"src":"5138:33:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5138:72:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1252,"nodeType":"ExpressionStatement","src":"5138:72:9"}]},"documentation":{"id":1225,"nodeType":"StructuredDocumentation","src":"4924:55:9","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":1254,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4993:16:9","nodeType":"FunctionDefinition","parameters":{"id":1234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1227,"mutability":"mutable","name":"from","nameLocation":"5018:4:9","nodeType":"VariableDeclaration","scope":1254,"src":"5010:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"5010:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1229,"mutability":"mutable","name":"to","nameLocation":"5032:2:9","nodeType":"VariableDeclaration","scope":1254,"src":"5024:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1228,"name":"address","nodeType":"ElementaryTypeName","src":"5024:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1231,"mutability":"mutable","name":"tokenId","nameLocation":"5044:7:9","nodeType":"VariableDeclaration","scope":1254,"src":"5036:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1230,"name":"uint256","nodeType":"ElementaryTypeName","src":"5036:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1233,"mutability":"mutable","name":"data","nameLocation":"5066:4:9","nodeType":"VariableDeclaration","scope":1254,"src":"5053:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1232,"name":"bytes","nodeType":"ElementaryTypeName","src":"5053:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5009:62:9"},"returnParameters":{"id":1235,"nodeType":"ParameterList","parameters":[],"src":"5087:0:9"},"scope":1846,"src":"4984:233:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1266,"nodeType":"Block","src":"5807:40:9","statements":[{"expression":{"baseExpression":{"id":1262,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"5824:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1264,"indexExpression":{"id":1263,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"5832:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5824:16:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1261,"id":1265,"nodeType":"Return","src":"5817:23:9"}]},"documentation":{"id":1255,"nodeType":"StructuredDocumentation","src":"5223:504:9","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":1267,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5741:8:9","nodeType":"FunctionDefinition","parameters":{"id":1258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1257,"mutability":"mutable","name":"tokenId","nameLocation":"5758:7:9","nodeType":"VariableDeclaration","scope":1267,"src":"5750:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1256,"name":"uint256","nodeType":"ElementaryTypeName","src":"5750:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5749:17:9"},"returnParameters":{"id":1261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1267,"src":"5798:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1259,"name":"address","nodeType":"ElementaryTypeName","src":"5798:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5797:9:9"},"scope":1846,"src":"5732:115:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1279,"nodeType":"Block","src":"6042:48:9","statements":[{"expression":{"baseExpression":{"id":1275,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"6059:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1277,"indexExpression":{"id":1276,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"6075:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6059:24:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1274,"id":1278,"nodeType":"Return","src":"6052:31:9"}]},"documentation":{"id":1268,"nodeType":"StructuredDocumentation","src":"5853:105:9","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":1280,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5972:12:9","nodeType":"FunctionDefinition","parameters":{"id":1271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1270,"mutability":"mutable","name":"tokenId","nameLocation":"5993:7:9","nodeType":"VariableDeclaration","scope":1280,"src":"5985:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1269,"name":"uint256","nodeType":"ElementaryTypeName","src":"5985:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5984:17:9"},"returnParameters":{"id":1274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1280,"src":"6033:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1272,"name":"address","nodeType":"ElementaryTypeName","src":"6033:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6032:9:9"},"scope":1846,"src":"5963:127:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1315,"nodeType":"Block","src":"6510:163:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1292,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"6539:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6558:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6550:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1293,"name":"address","nodeType":"ElementaryTypeName","src":"6550:7:9","typeDescriptions":{}}},"id":1296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6550:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6539:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1298,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"6577:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1299,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"6586:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6577:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1302,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"6614:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1303,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"6621:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1301,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"6597:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6597:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:52:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1307,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"6646:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1306,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"6633:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6633:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1309,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"6658:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6633:32:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:88:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1312,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6576:90:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6539:127:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1291,"id":1314,"nodeType":"Return","src":"6520:146:9"}]},"documentation":{"id":1281,"nodeType":"StructuredDocumentation","src":"6096:300:9","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1316,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6410:13:9","nodeType":"FunctionDefinition","parameters":{"id":1288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1283,"mutability":"mutable","name":"owner","nameLocation":"6432:5:9","nodeType":"VariableDeclaration","scope":1316,"src":"6424:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1282,"name":"address","nodeType":"ElementaryTypeName","src":"6424:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1285,"mutability":"mutable","name":"spender","nameLocation":"6447:7:9","nodeType":"VariableDeclaration","scope":1316,"src":"6439:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1284,"name":"address","nodeType":"ElementaryTypeName","src":"6439:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1287,"mutability":"mutable","name":"tokenId","nameLocation":"6464:7:9","nodeType":"VariableDeclaration","scope":1316,"src":"6456:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1286,"name":"uint256","nodeType":"ElementaryTypeName","src":"6456:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6423:49:9"},"returnParameters":{"id":1291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1316,"src":"6504:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1289,"name":"bool","nodeType":"ElementaryTypeName","src":"6504:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6503:6:9"},"scope":1846,"src":"6401:272:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1352,"nodeType":"Block","src":"7202:271:9","statements":[{"condition":{"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7216:39:9","subExpression":{"arguments":[{"id":1327,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"7231:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1328,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"7238:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1329,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"7247:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1326,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"7217:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7217:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1351,"nodeType":"IfStatement","src":"7212:255:9","trueBody":{"id":1350,"nodeType":"Block","src":"7257:210:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1332,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"7275:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7292:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7284:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1333,"name":"address","nodeType":"ElementaryTypeName","src":"7284:7:9","typeDescriptions":{}}},"id":1336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7284:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7275:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1348,"nodeType":"Block","src":"7373:84:9","statements":[{"errorCall":{"arguments":[{"id":1344,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"7425:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1345,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"7434:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1343,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"7398:26:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7398:44:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1347,"nodeType":"RevertStatement","src":"7391:51:9"}]},"id":1349,"nodeType":"IfStatement","src":"7271:186:9","trueBody":{"id":1342,"nodeType":"Block","src":"7296:71:9","statements":[{"errorCall":{"arguments":[{"id":1339,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"7344:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1338,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"7321:22:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7321:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1341,"nodeType":"RevertStatement","src":"7314:38:9"}]}}]}}]},"documentation":{"id":1317,"nodeType":"StructuredDocumentation","src":"6679:421:9","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1353,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"7114:16:9","nodeType":"FunctionDefinition","parameters":{"id":1324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1319,"mutability":"mutable","name":"owner","nameLocation":"7139:5:9","nodeType":"VariableDeclaration","scope":1353,"src":"7131:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1318,"name":"address","nodeType":"ElementaryTypeName","src":"7131:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1321,"mutability":"mutable","name":"spender","nameLocation":"7154:7:9","nodeType":"VariableDeclaration","scope":1353,"src":"7146:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1320,"name":"address","nodeType":"ElementaryTypeName","src":"7146:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1323,"mutability":"mutable","name":"tokenId","nameLocation":"7171:7:9","nodeType":"VariableDeclaration","scope":1353,"src":"7163:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1322,"name":"uint256","nodeType":"ElementaryTypeName","src":"7163:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7130:49:9"},"returnParameters":{"id":1325,"nodeType":"ParameterList","parameters":[],"src":"7202:0:9"},"scope":1846,"src":"7105:368:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1368,"nodeType":"Block","src":"8190:78:9","statements":[{"id":1367,"nodeType":"UncheckedBlock","src":"8200:62:9","statements":[{"expression":{"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1361,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"8224:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1363,"indexExpression":{"id":1362,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"8234:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8224:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"8246:5:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"8224:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1366,"nodeType":"ExpressionStatement","src":"8224:27:9"}]}]},"documentation":{"id":1354,"nodeType":"StructuredDocumentation","src":"7479:631:9","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":1369,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"8124:16:9","nodeType":"FunctionDefinition","parameters":{"id":1359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1356,"mutability":"mutable","name":"account","nameLocation":"8149:7:9","nodeType":"VariableDeclaration","scope":1369,"src":"8141:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1355,"name":"address","nodeType":"ElementaryTypeName","src":"8141:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1358,"mutability":"mutable","name":"value","nameLocation":"8166:5:9","nodeType":"VariableDeclaration","scope":1369,"src":"8158:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1357,"name":"uint128","nodeType":"ElementaryTypeName","src":"8158:7:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"8140:32:9"},"returnParameters":{"id":1360,"nodeType":"ParameterList","parameters":[],"src":"8190:0:9"},"scope":1846,"src":"8115:153:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1458,"nodeType":"Block","src":"8956:700:9","statements":[{"assignments":[1382],"declarations":[{"constant":false,"id":1382,"mutability":"mutable","name":"from","nameLocation":"8974:4:9","nodeType":"VariableDeclaration","scope":1458,"src":"8966:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1381,"name":"address","nodeType":"ElementaryTypeName","src":"8966:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1386,"initialValue":{"arguments":[{"id":1384,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"8990:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1383,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"8981:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8981:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8966:32:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1387,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"9058:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9074:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9066:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1388,"name":"address","nodeType":"ElementaryTypeName","src":"9066:7:9","typeDescriptions":{}}},"id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9066:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9058:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1400,"nodeType":"IfStatement","src":"9054:86:9","trueBody":{"id":1399,"nodeType":"Block","src":"9078:62:9","statements":[{"expression":{"arguments":[{"id":1394,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"9109:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1395,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"9115:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1396,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"9121:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1393,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"9092:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9092:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1398,"nodeType":"ExpressionStatement","src":"9092:37:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1401,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"9184:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9200:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9192:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1402,"name":"address","nodeType":"ElementaryTypeName","src":"9192:7:9","typeDescriptions":{}}},"id":1405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9192:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9184:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1428,"nodeType":"IfStatement","src":"9180:256:9","trueBody":{"id":1427,"nodeType":"Block","src":"9204:232:9","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9317:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9309:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1408,"name":"address","nodeType":"ElementaryTypeName","src":"9309:7:9","typeDescriptions":{}}},"id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9309:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1412,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"9321:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9338:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9330:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1413,"name":"address","nodeType":"ElementaryTypeName","src":"9330:7:9","typeDescriptions":{}}},"id":1416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9330:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":1417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9342:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1407,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1713,1779],"referencedDeclaration":1779,"src":"9300:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9300:48:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1419,"nodeType":"ExpressionStatement","src":"9300:48:9"},{"id":1426,"nodeType":"UncheckedBlock","src":"9363:63:9","statements":[{"expression":{"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1420,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"9391:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1422,"indexExpression":{"id":1421,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"9401:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9391:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9410:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9391:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1425,"nodeType":"ExpressionStatement","src":"9391:20:9"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1429,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"9450:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9464:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9456:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1430,"name":"address","nodeType":"ElementaryTypeName","src":"9456:7:9","typeDescriptions":{}}},"id":1433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9456:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9450:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1443,"nodeType":"IfStatement","src":"9446:107:9","trueBody":{"id":1442,"nodeType":"Block","src":"9468:85:9","statements":[{"id":1441,"nodeType":"UncheckedBlock","src":"9482:61:9","statements":[{"expression":{"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1435,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"9510:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1437,"indexExpression":{"id":1436,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"9520:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9510:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9527:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9510:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1440,"nodeType":"ExpressionStatement","src":"9510:18:9"}]}]}},{"expression":{"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1444,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"9563:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1446,"indexExpression":{"id":1445,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"9571:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9563:16:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1447,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"9582:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9563:21:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1449,"nodeType":"ExpressionStatement","src":"9563:21:9"},{"eventCall":{"arguments":[{"id":1451,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"9609:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1452,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"9615:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1453,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"9619:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1450,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"9600:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9600:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1455,"nodeType":"EmitStatement","src":"9595:32:9"},{"expression":{"id":1456,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"9645:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1380,"id":1457,"nodeType":"Return","src":"9638:11:9"}]},"documentation":{"id":1370,"nodeType":"StructuredDocumentation","src":"8274:582:9","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":1459,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8870:7:9","nodeType":"FunctionDefinition","parameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"mutability":"mutable","name":"to","nameLocation":"8886:2:9","nodeType":"VariableDeclaration","scope":1459,"src":"8878:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1371,"name":"address","nodeType":"ElementaryTypeName","src":"8878:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1374,"mutability":"mutable","name":"tokenId","nameLocation":"8898:7:9","nodeType":"VariableDeclaration","scope":1459,"src":"8890:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1373,"name":"uint256","nodeType":"ElementaryTypeName","src":"8890:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1376,"mutability":"mutable","name":"auth","nameLocation":"8915:4:9","nodeType":"VariableDeclaration","scope":1459,"src":"8907:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1375,"name":"address","nodeType":"ElementaryTypeName","src":"8907:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8877:43:9"},"returnParameters":{"id":1380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1459,"src":"8947:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1378,"name":"address","nodeType":"ElementaryTypeName","src":"8947:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8946:9:9"},"scope":1846,"src":"8861:795:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1508,"nodeType":"Block","src":"10031:274:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1467,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"10045:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10059:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10051:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1468,"name":"address","nodeType":"ElementaryTypeName","src":"10051:7:9","typeDescriptions":{}}},"id":1471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10051:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10045:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1481,"nodeType":"IfStatement","src":"10041:87:9","trueBody":{"id":1480,"nodeType":"Block","src":"10063:65:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10114:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10106:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1474,"name":"address","nodeType":"ElementaryTypeName","src":"10106:7:9","typeDescriptions":{}}},"id":1477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1473,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"10084:21:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10084:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1479,"nodeType":"RevertStatement","src":"10077:40:9"}]}},{"assignments":[1483],"declarations":[{"constant":false,"id":1483,"mutability":"mutable","name":"previousOwner","nameLocation":"10145:13:9","nodeType":"VariableDeclaration","scope":1508,"src":"10137:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1482,"name":"address","nodeType":"ElementaryTypeName","src":"10137:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1492,"initialValue":{"arguments":[{"id":1485,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"10169:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1486,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"10173:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10190:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10182:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1487,"name":"address","nodeType":"ElementaryTypeName","src":"10182:7:9","typeDescriptions":{}}},"id":1490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10182:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1484,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"10161:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10161:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10137:56:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1493,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"10207:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10232:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10224:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1494,"name":"address","nodeType":"ElementaryTypeName","src":"10224:7:9","typeDescriptions":{}}},"id":1497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10224:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10207:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1507,"nodeType":"IfStatement","src":"10203:96:9","trueBody":{"id":1506,"nodeType":"Block","src":"10236:63:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10277:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1500,"name":"address","nodeType":"ElementaryTypeName","src":"10277:7:9","typeDescriptions":{}}},"id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10277:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1499,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"10257:19:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10257:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1505,"nodeType":"RevertStatement","src":"10250:38:9"}]}}]},"documentation":{"id":1460,"nodeType":"StructuredDocumentation","src":"9662:311:9","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":1509,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9987:5:9","nodeType":"FunctionDefinition","parameters":{"id":1465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1462,"mutability":"mutable","name":"to","nameLocation":"10001:2:9","nodeType":"VariableDeclaration","scope":1509,"src":"9993:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1461,"name":"address","nodeType":"ElementaryTypeName","src":"9993:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1464,"mutability":"mutable","name":"tokenId","nameLocation":"10013:7:9","nodeType":"VariableDeclaration","scope":1509,"src":"10005:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1463,"name":"uint256","nodeType":"ElementaryTypeName","src":"10005:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9992:29:9"},"returnParameters":{"id":1466,"nodeType":"ParameterList","parameters":[],"src":"10031:0:9"},"scope":1846,"src":"9978:327:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1523,"nodeType":"Block","src":"10713:43:9","statements":[{"expression":{"arguments":[{"id":1518,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"10733:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1519,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"10737:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10746:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1517,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1524,1554],"referencedDeclaration":1554,"src":"10723:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10723:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1522,"nodeType":"ExpressionStatement","src":"10723:26:9"}]},"documentation":{"id":1510,"nodeType":"StructuredDocumentation","src":"10311:340:9","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1524,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10665:9:9","nodeType":"FunctionDefinition","parameters":{"id":1515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1512,"mutability":"mutable","name":"to","nameLocation":"10683:2:9","nodeType":"VariableDeclaration","scope":1524,"src":"10675:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1511,"name":"address","nodeType":"ElementaryTypeName","src":"10675:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1514,"mutability":"mutable","name":"tokenId","nameLocation":"10695:7:9","nodeType":"VariableDeclaration","scope":1524,"src":"10687:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1513,"name":"uint256","nodeType":"ElementaryTypeName","src":"10687:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10674:29:9"},"returnParameters":{"id":1516,"nodeType":"ParameterList","parameters":[],"src":"10713:0:9"},"scope":1846,"src":"10656:100:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1553,"nodeType":"Block","src":"11061:123:9","statements":[{"expression":{"arguments":[{"id":1535,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"11077:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1536,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"11081:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1534,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"11071:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11071:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1538,"nodeType":"ExpressionStatement","src":"11071:18:9"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1542,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"11133:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11133:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11155:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11147:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1544,"name":"address","nodeType":"ElementaryTypeName","src":"11147:7:9","typeDescriptions":{}}},"id":1547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11147:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1548,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"11159:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1549,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"11163:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1550,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"11172:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1539,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"11099:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2212_$","typeString":"type(library ERC721Utils)"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11111:21:9","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2211,"src":"11099:33:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11099:78:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1552,"nodeType":"ExpressionStatement","src":"11099:78:9"}]},"documentation":{"id":1525,"nodeType":"StructuredDocumentation","src":"10762:210:9","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1554,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10986:9:9","nodeType":"FunctionDefinition","parameters":{"id":1532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"mutability":"mutable","name":"to","nameLocation":"11004:2:9","nodeType":"VariableDeclaration","scope":1554,"src":"10996:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1526,"name":"address","nodeType":"ElementaryTypeName","src":"10996:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1529,"mutability":"mutable","name":"tokenId","nameLocation":"11016:7:9","nodeType":"VariableDeclaration","scope":1554,"src":"11008:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1528,"name":"uint256","nodeType":"ElementaryTypeName","src":"11008:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1531,"mutability":"mutable","name":"data","nameLocation":"11038:4:9","nodeType":"VariableDeclaration","scope":1554,"src":"11025:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1530,"name":"bytes","nodeType":"ElementaryTypeName","src":"11025:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10995:48:9"},"returnParameters":{"id":1533,"nodeType":"ParameterList","parameters":[],"src":"11061:0:9"},"scope":1846,"src":"10977:207:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1586,"nodeType":"Block","src":"11551:186:9","statements":[{"assignments":[1561],"declarations":[{"constant":false,"id":1561,"mutability":"mutable","name":"previousOwner","nameLocation":"11569:13:9","nodeType":"VariableDeclaration","scope":1586,"src":"11561:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1560,"name":"address","nodeType":"ElementaryTypeName","src":"11561:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1573,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":1565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11601:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11593:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1563,"name":"address","nodeType":"ElementaryTypeName","src":"11593:7:9","typeDescriptions":{}}},"id":1566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11593:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1567,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"11605:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11622:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11614:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1568,"name":"address","nodeType":"ElementaryTypeName","src":"11614:7:9","typeDescriptions":{}}},"id":1571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11614:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1562,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"11585:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11585:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11561:64:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1574,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"11639:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11664:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11656:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1575,"name":"address","nodeType":"ElementaryTypeName","src":"11656:7:9","typeDescriptions":{}}},"id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11656:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11639:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1585,"nodeType":"IfStatement","src":"11635:96:9","trueBody":{"id":1584,"nodeType":"Block","src":"11668:63:9","statements":[{"errorCall":{"arguments":[{"id":1581,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"11712:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1580,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"11689:22:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11689:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1583,"nodeType":"RevertStatement","src":"11682:38:9"}]}}]},"documentation":{"id":1555,"nodeType":"StructuredDocumentation","src":"11190:315:9","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1587,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11519:5:9","nodeType":"FunctionDefinition","parameters":{"id":1558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1557,"mutability":"mutable","name":"tokenId","nameLocation":"11533:7:9","nodeType":"VariableDeclaration","scope":1587,"src":"11525:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1556,"name":"uint256","nodeType":"ElementaryTypeName","src":"11525:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11524:17:9"},"returnParameters":{"id":1559,"nodeType":"ParameterList","parameters":[],"src":"11551:0:9"},"scope":1846,"src":"11510:227:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1646,"nodeType":"Block","src":"12132:389:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1597,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"12146:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12160:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12152:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1598,"name":"address","nodeType":"ElementaryTypeName","src":"12152:7:9","typeDescriptions":{}}},"id":1601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12152:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12146:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1611,"nodeType":"IfStatement","src":"12142:87:9","trueBody":{"id":1610,"nodeType":"Block","src":"12164:65:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12215:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12207:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1604,"name":"address","nodeType":"ElementaryTypeName","src":"12207:7:9","typeDescriptions":{}}},"id":1607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12207:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1603,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"12185:21:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12185:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1609,"nodeType":"RevertStatement","src":"12178:40:9"}]}},{"assignments":[1613],"declarations":[{"constant":false,"id":1613,"mutability":"mutable","name":"previousOwner","nameLocation":"12246:13:9","nodeType":"VariableDeclaration","scope":1646,"src":"12238:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1612,"name":"address","nodeType":"ElementaryTypeName","src":"12238:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1622,"initialValue":{"arguments":[{"id":1615,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"12270:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1616,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"12274:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12291:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12283:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1617,"name":"address","nodeType":"ElementaryTypeName","src":"12283:7:9","typeDescriptions":{}}},"id":1620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1614,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"12262:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12262:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12238:56:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1623,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"12308:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12333:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12325:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1624,"name":"address","nodeType":"ElementaryTypeName","src":"12325:7:9","typeDescriptions":{}}},"id":1627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12325:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12308:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1634,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"12410:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1635,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"12427:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12410:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1644,"nodeType":"IfStatement","src":"12406:109:9","trueBody":{"id":1643,"nodeType":"Block","src":"12433:82:9","statements":[{"errorCall":{"arguments":[{"id":1638,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"12475:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1639,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"12481:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1640,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"12490:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1637,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"12454:20:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12454:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1642,"nodeType":"RevertStatement","src":"12447:57:9"}]}},"id":1645,"nodeType":"IfStatement","src":"12304:211:9","trueBody":{"id":1633,"nodeType":"Block","src":"12337:63:9","statements":[{"errorCall":{"arguments":[{"id":1630,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"12381:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1629,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"12358:22:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12358:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1632,"nodeType":"RevertStatement","src":"12351:38:9"}]}}]},"documentation":{"id":1588,"nodeType":"StructuredDocumentation","src":"11743:313:9","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1647,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"12070:9:9","nodeType":"FunctionDefinition","parameters":{"id":1595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1590,"mutability":"mutable","name":"from","nameLocation":"12088:4:9","nodeType":"VariableDeclaration","scope":1647,"src":"12080:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1589,"name":"address","nodeType":"ElementaryTypeName","src":"12080:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1592,"mutability":"mutable","name":"to","nameLocation":"12102:2:9","nodeType":"VariableDeclaration","scope":1647,"src":"12094:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1591,"name":"address","nodeType":"ElementaryTypeName","src":"12094:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1594,"mutability":"mutable","name":"tokenId","nameLocation":"12114:7:9","nodeType":"VariableDeclaration","scope":1647,"src":"12106:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1593,"name":"uint256","nodeType":"ElementaryTypeName","src":"12106:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12079:43:9"},"returnParameters":{"id":1596,"nodeType":"ParameterList","parameters":[],"src":"12132:0:9"},"scope":1846,"src":"12061:460:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1664,"nodeType":"Block","src":"13530:53:9","statements":[{"expression":{"arguments":[{"id":1658,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"13554:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1659,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"13560:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1660,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"13564:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13573:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1657,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[1665,1695],"referencedDeclaration":1695,"src":"13540:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13540:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1663,"nodeType":"ExpressionStatement","src":"13540:36:9"}]},"documentation":{"id":1648,"nodeType":"StructuredDocumentation","src":"12527:923:9","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1665,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13464:13:9","nodeType":"FunctionDefinition","parameters":{"id":1655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1650,"mutability":"mutable","name":"from","nameLocation":"13486:4:9","nodeType":"VariableDeclaration","scope":1665,"src":"13478:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1649,"name":"address","nodeType":"ElementaryTypeName","src":"13478:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1652,"mutability":"mutable","name":"to","nameLocation":"13500:2:9","nodeType":"VariableDeclaration","scope":1665,"src":"13492:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1651,"name":"address","nodeType":"ElementaryTypeName","src":"13492:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1654,"mutability":"mutable","name":"tokenId","nameLocation":"13512:7:9","nodeType":"VariableDeclaration","scope":1665,"src":"13504:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1653,"name":"uint256","nodeType":"ElementaryTypeName","src":"13504:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13477:43:9"},"returnParameters":{"id":1656,"nodeType":"ParameterList","parameters":[],"src":"13530:0:9"},"scope":1846,"src":"13455:128:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1694,"nodeType":"Block","src":"13922:127:9","statements":[{"expression":{"arguments":[{"id":1678,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"13942:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1679,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"13948:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1680,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"13952:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1677,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"13932:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13932:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1682,"nodeType":"ExpressionStatement","src":"13932:28:9"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1686,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"14004:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14004:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1688,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"14018:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1689,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"14024:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1690,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"14028:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1691,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"14037:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1683,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"13970:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2212_$","typeString":"type(library ERC721Utils)"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13982:21:9","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2211,"src":"13970:33:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13970:72:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1693,"nodeType":"ExpressionStatement","src":"13970:72:9"}]},"documentation":{"id":1666,"nodeType":"StructuredDocumentation","src":"13589:226:9","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1695,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13829:13:9","nodeType":"FunctionDefinition","parameters":{"id":1675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1668,"mutability":"mutable","name":"from","nameLocation":"13851:4:9","nodeType":"VariableDeclaration","scope":1695,"src":"13843:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1667,"name":"address","nodeType":"ElementaryTypeName","src":"13843:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1670,"mutability":"mutable","name":"to","nameLocation":"13865:2:9","nodeType":"VariableDeclaration","scope":1695,"src":"13857:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1669,"name":"address","nodeType":"ElementaryTypeName","src":"13857:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1672,"mutability":"mutable","name":"tokenId","nameLocation":"13877:7:9","nodeType":"VariableDeclaration","scope":1695,"src":"13869:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1671,"name":"uint256","nodeType":"ElementaryTypeName","src":"13869:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1674,"mutability":"mutable","name":"data","nameLocation":"13899:4:9","nodeType":"VariableDeclaration","scope":1695,"src":"13886:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1673,"name":"bytes","nodeType":"ElementaryTypeName","src":"13886:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13842:62:9"},"returnParameters":{"id":1676,"nodeType":"ParameterList","parameters":[],"src":"13922:0:9"},"scope":1846,"src":"13820:229:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1712,"nodeType":"Block","src":"14562:50:9","statements":[{"expression":{"arguments":[{"id":1706,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"14581:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1707,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"14585:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1708,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"14594:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":1709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14600:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1705,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1713,1779],"referencedDeclaration":1779,"src":"14572:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14572:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1711,"nodeType":"ExpressionStatement","src":"14572:33:9"}]},"documentation":{"id":1696,"nodeType":"StructuredDocumentation","src":"14055:432:9","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1713,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14501:8:9","nodeType":"FunctionDefinition","parameters":{"id":1703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1698,"mutability":"mutable","name":"to","nameLocation":"14518:2:9","nodeType":"VariableDeclaration","scope":1713,"src":"14510:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1697,"name":"address","nodeType":"ElementaryTypeName","src":"14510:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1700,"mutability":"mutable","name":"tokenId","nameLocation":"14530:7:9","nodeType":"VariableDeclaration","scope":1713,"src":"14522:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1699,"name":"uint256","nodeType":"ElementaryTypeName","src":"14522:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1702,"mutability":"mutable","name":"auth","nameLocation":"14547:4:9","nodeType":"VariableDeclaration","scope":1713,"src":"14539:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1701,"name":"address","nodeType":"ElementaryTypeName","src":"14539:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14509:43:9"},"returnParameters":{"id":1704,"nodeType":"ParameterList","parameters":[],"src":"14562:0:9"},"scope":1846,"src":"14492:120:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1778,"nodeType":"Block","src":"14888:568:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1725,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"14954:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1726,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"14967:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14983:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14975:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1727,"name":"address","nodeType":"ElementaryTypeName","src":"14975:7:9","typeDescriptions":{}}},"id":1730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14975:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14967:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14954:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1771,"nodeType":"IfStatement","src":"14950:460:9","trueBody":{"id":1770,"nodeType":"Block","src":"14987:423:9","statements":[{"assignments":[1734],"declarations":[{"constant":false,"id":1734,"mutability":"mutable","name":"owner","nameLocation":"15009:5:9","nodeType":"VariableDeclaration","scope":1770,"src":"15001:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1733,"name":"address","nodeType":"ElementaryTypeName","src":"15001:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1738,"initialValue":{"arguments":[{"id":1736,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"15031:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1735,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"15017:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15017:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15001:38:9"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1739,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"15167:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15183:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15175:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1740,"name":"address","nodeType":"ElementaryTypeName","src":"15175:7:9","typeDescriptions":{}}},"id":1743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15175:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15167:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1745,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"15189:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1746,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"15198:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15189:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:35:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15206:30:9","subExpression":{"arguments":[{"id":1750,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"15224:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1751,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"15231:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1749,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"15207:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15207:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:69:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1760,"nodeType":"IfStatement","src":"15163:142:9","trueBody":{"id":1759,"nodeType":"Block","src":"15238:67:9","statements":[{"errorCall":{"arguments":[{"id":1756,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"15285:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1755,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"15263:21:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15263:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1758,"nodeType":"RevertStatement","src":"15256:34:9"}]}},{"condition":{"id":1761,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"15323:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1769,"nodeType":"IfStatement","src":"15319:81:9","trueBody":{"id":1768,"nodeType":"Block","src":"15334:66:9","statements":[{"eventCall":{"arguments":[{"id":1763,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"15366:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1764,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"15373:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1765,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"15377:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1762,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"15357:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15357:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1767,"nodeType":"EmitStatement","src":"15352:33:9"}]}}]}},{"expression":{"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1772,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"15420:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1774,"indexExpression":{"id":1773,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"15436:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15420:24:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1775,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"15447:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15420:29:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1777,"nodeType":"ExpressionStatement","src":"15420:29:9"}]},"documentation":{"id":1714,"nodeType":"StructuredDocumentation","src":"14618:171:9","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":1779,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14803:8:9","nodeType":"FunctionDefinition","parameters":{"id":1723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1716,"mutability":"mutable","name":"to","nameLocation":"14820:2:9","nodeType":"VariableDeclaration","scope":1779,"src":"14812:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1715,"name":"address","nodeType":"ElementaryTypeName","src":"14812:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1718,"mutability":"mutable","name":"tokenId","nameLocation":"14832:7:9","nodeType":"VariableDeclaration","scope":1779,"src":"14824:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1717,"name":"uint256","nodeType":"ElementaryTypeName","src":"14824:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1720,"mutability":"mutable","name":"auth","nameLocation":"14849:4:9","nodeType":"VariableDeclaration","scope":1779,"src":"14841:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1719,"name":"address","nodeType":"ElementaryTypeName","src":"14841:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1722,"mutability":"mutable","name":"emitEvent","nameLocation":"14860:9:9","nodeType":"VariableDeclaration","scope":1779,"src":"14855:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1721,"name":"bool","nodeType":"ElementaryTypeName","src":"14855:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14811:59:9"},"returnParameters":{"id":1724,"nodeType":"ParameterList","parameters":[],"src":"14888:0:9"},"scope":1846,"src":"14794:662:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1815,"nodeType":"Block","src":"15758:219:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1789,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"15772:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15792:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15784:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1790,"name":"address","nodeType":"ElementaryTypeName","src":"15784:7:9","typeDescriptions":{}}},"id":1793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15784:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15772:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1800,"nodeType":"IfStatement","src":"15768:91:9","trueBody":{"id":1799,"nodeType":"Block","src":"15796:63:9","statements":[{"errorCall":{"arguments":[{"id":1796,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"15839:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1795,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"15817:21:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15817:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1798,"nodeType":"RevertStatement","src":"15810:38:9"}]}},{"expression":{"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1801,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"15868:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1804,"indexExpression":{"id":1802,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"15887:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15868:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1805,"indexExpression":{"id":1803,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"15894:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15868:35:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1806,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"15906:8:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15868:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1808,"nodeType":"ExpressionStatement","src":"15868:46:9"},{"eventCall":{"arguments":[{"id":1810,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"15944:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1811,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"15951:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1812,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"15961:8:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1809,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"15929:14:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15929:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1814,"nodeType":"EmitStatement","src":"15924:46:9"}]},"documentation":{"id":1780,"nodeType":"StructuredDocumentation","src":"15462:198:9","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":1816,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15674:18:9","nodeType":"FunctionDefinition","parameters":{"id":1787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1782,"mutability":"mutable","name":"owner","nameLocation":"15701:5:9","nodeType":"VariableDeclaration","scope":1816,"src":"15693:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1781,"name":"address","nodeType":"ElementaryTypeName","src":"15693:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1784,"mutability":"mutable","name":"operator","nameLocation":"15716:8:9","nodeType":"VariableDeclaration","scope":1816,"src":"15708:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1783,"name":"address","nodeType":"ElementaryTypeName","src":"15708:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1786,"mutability":"mutable","name":"approved","nameLocation":"15731:8:9","nodeType":"VariableDeclaration","scope":1816,"src":"15726:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1785,"name":"bool","nodeType":"ElementaryTypeName","src":"15726:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15692:48:9"},"returnParameters":{"id":1788,"nodeType":"ParameterList","parameters":[],"src":"15758:0:9"},"scope":1846,"src":"15665:312:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1844,"nodeType":"Block","src":"16284:169:9","statements":[{"assignments":[1825],"declarations":[{"constant":false,"id":1825,"mutability":"mutable","name":"owner","nameLocation":"16302:5:9","nodeType":"VariableDeclaration","scope":1844,"src":"16294:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1824,"name":"address","nodeType":"ElementaryTypeName","src":"16294:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1829,"initialValue":{"arguments":[{"id":1827,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"16319:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1826,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"16310:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16310:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16294:33:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1830,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"16341:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16358:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16350:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1831,"name":"address","nodeType":"ElementaryTypeName","src":"16350:7:9","typeDescriptions":{}}},"id":1834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16350:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16341:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1841,"nodeType":"IfStatement","src":"16337:88:9","trueBody":{"id":1840,"nodeType":"Block","src":"16362:63:9","statements":[{"errorCall":{"arguments":[{"id":1837,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"16406:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1836,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"16383:22:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16383:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1839,"nodeType":"RevertStatement","src":"16376:38:9"}]}},{"expression":{"id":1842,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"16441:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1823,"id":1843,"nodeType":"Return","src":"16434:12:9"}]},"documentation":{"id":1817,"nodeType":"StructuredDocumentation","src":"15983:224:9","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":1845,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"16221:13:9","nodeType":"FunctionDefinition","parameters":{"id":1820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1819,"mutability":"mutable","name":"tokenId","nameLocation":"16243:7:9","nodeType":"VariableDeclaration","scope":1845,"src":"16235:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1818,"name":"uint256","nodeType":"ElementaryTypeName","src":"16235:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16234:17:9"},"returnParameters":{"id":1823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1845,"src":"16275:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1821,"name":"address","nodeType":"ElementaryTypeName","src":"16275:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16274:9:9"},"scope":1846,"src":"16212:241:9","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1847,"src":"775:15680:9","usedErrors":[313,318,327,332,337,344,349,354],"usedEvents":[1862,1871,1880]}],"src":"107:16349:9"},"id":9},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[3530],"IERC721":[1963]},"id":1964,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1848,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1850,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1964,"sourceUnit":3531,"src":"134:62:10","symbolAliases":[{"foreign":{"id":1849,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"142:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1852,"name":"IERC165","nameLocations":["288:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":3530,"src":"288:7:10"},"id":1853,"nodeType":"InheritanceSpecifier","src":"288:7:10"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1851,"nodeType":"StructuredDocumentation","src":"198:68:10","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":1963,"linearizedBaseContracts":[1963,3530],"name":"IERC721","nameLocation":"277:7:10","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1854,"nodeType":"StructuredDocumentation","src":"302:88:10","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1862,"name":"Transfer","nameLocation":"401:8:10","nodeType":"EventDefinition","parameters":{"id":1861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1856,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:10","nodeType":"VariableDeclaration","scope":1862,"src":"410:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1855,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1858,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:10","nodeType":"VariableDeclaration","scope":1862,"src":"432:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1857,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1860,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:10","nodeType":"VariableDeclaration","scope":1862,"src":"452:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1859,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:10"},"src":"395:82:10"},{"anonymous":false,"documentation":{"id":1863,"nodeType":"StructuredDocumentation","src":"483:94:10","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1871,"name":"Approval","nameLocation":"588:8:10","nodeType":"EventDefinition","parameters":{"id":1870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1865,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:10","nodeType":"VariableDeclaration","scope":1871,"src":"597:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1864,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1867,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:10","nodeType":"VariableDeclaration","scope":1871,"src":"620:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1866,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1869,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:10","nodeType":"VariableDeclaration","scope":1871,"src":"646:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1868,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:10"},"src":"582:89:10"},{"anonymous":false,"documentation":{"id":1872,"nodeType":"StructuredDocumentation","src":"677:117:10","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1880,"name":"ApprovalForAll","nameLocation":"805:14:10","nodeType":"EventDefinition","parameters":{"id":1879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1874,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:10","nodeType":"VariableDeclaration","scope":1880,"src":"820:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1873,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1876,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:10","nodeType":"VariableDeclaration","scope":1880,"src":"843:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1875,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1878,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:10","nodeType":"VariableDeclaration","scope":1880,"src":"869:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1877,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:10"},"src":"799:85:10"},{"documentation":{"id":1881,"nodeType":"StructuredDocumentation","src":"890:76:10","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1888,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:10","nodeType":"FunctionDefinition","parameters":{"id":1884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1883,"mutability":"mutable","name":"owner","nameLocation":"998:5:10","nodeType":"VariableDeclaration","scope":1888,"src":"990:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1882,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:10"},"returnParameters":{"id":1887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1886,"mutability":"mutable","name":"balance","nameLocation":"1036:7:10","nodeType":"VariableDeclaration","scope":1888,"src":"1028:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1885,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:10"},"scope":1963,"src":"971:74:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1889,"nodeType":"StructuredDocumentation","src":"1051:131:10","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1896,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:10","nodeType":"FunctionDefinition","parameters":{"id":1892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1891,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:10","nodeType":"VariableDeclaration","scope":1896,"src":"1204:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1890,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:10"},"returnParameters":{"id":1895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1894,"mutability":"mutable","name":"owner","nameLocation":"1252:5:10","nodeType":"VariableDeclaration","scope":1896,"src":"1244:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1893,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:10"},"scope":1963,"src":"1187:72:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1897,"nodeType":"StructuredDocumentation","src":"1265:565:10","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1908,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:10","nodeType":"FunctionDefinition","parameters":{"id":1906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1899,"mutability":"mutable","name":"from","nameLocation":"1869:4:10","nodeType":"VariableDeclaration","scope":1908,"src":"1861:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1898,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1901,"mutability":"mutable","name":"to","nameLocation":"1883:2:10","nodeType":"VariableDeclaration","scope":1908,"src":"1875:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1900,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1903,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:10","nodeType":"VariableDeclaration","scope":1908,"src":"1887:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1902,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1905,"mutability":"mutable","name":"data","nameLocation":"1919:4:10","nodeType":"VariableDeclaration","scope":1908,"src":"1904:19:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1904,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:10"},"returnParameters":{"id":1907,"nodeType":"ParameterList","parameters":[],"src":"1933:0:10"},"scope":1963,"src":"1835:99:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1909,"nodeType":"StructuredDocumentation","src":"1940:706:10","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1918,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:10","nodeType":"FunctionDefinition","parameters":{"id":1916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1911,"mutability":"mutable","name":"from","nameLocation":"2685:4:10","nodeType":"VariableDeclaration","scope":1918,"src":"2677:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1910,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1913,"mutability":"mutable","name":"to","nameLocation":"2699:2:10","nodeType":"VariableDeclaration","scope":1918,"src":"2691:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1912,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1915,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:10","nodeType":"VariableDeclaration","scope":1918,"src":"2703:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1914,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:10"},"returnParameters":{"id":1917,"nodeType":"ParameterList","parameters":[],"src":"2728:0:10"},"scope":1963,"src":"2651:78:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1919,"nodeType":"StructuredDocumentation","src":"2735:733:10","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1928,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:10","nodeType":"FunctionDefinition","parameters":{"id":1926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1921,"mutability":"mutable","name":"from","nameLocation":"3503:4:10","nodeType":"VariableDeclaration","scope":1928,"src":"3495:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1920,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1923,"mutability":"mutable","name":"to","nameLocation":"3517:2:10","nodeType":"VariableDeclaration","scope":1928,"src":"3509:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1922,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1925,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:10","nodeType":"VariableDeclaration","scope":1928,"src":"3521:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1924,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:10"},"returnParameters":{"id":1927,"nodeType":"ParameterList","parameters":[],"src":"3546:0:10"},"scope":1963,"src":"3473:74:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1929,"nodeType":"StructuredDocumentation","src":"3553:452:10","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1936,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:10","nodeType":"FunctionDefinition","parameters":{"id":1934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1931,"mutability":"mutable","name":"to","nameLocation":"4035:2:10","nodeType":"VariableDeclaration","scope":1936,"src":"4027:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1930,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1933,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:10","nodeType":"VariableDeclaration","scope":1936,"src":"4039:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1932,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:10"},"returnParameters":{"id":1935,"nodeType":"ParameterList","parameters":[],"src":"4064:0:10"},"scope":1963,"src":"4010:55:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1937,"nodeType":"StructuredDocumentation","src":"4071:315:10","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1944,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:10","nodeType":"FunctionDefinition","parameters":{"id":1942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1939,"mutability":"mutable","name":"operator","nameLocation":"4426:8:10","nodeType":"VariableDeclaration","scope":1944,"src":"4418:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1938,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1941,"mutability":"mutable","name":"approved","nameLocation":"4441:8:10","nodeType":"VariableDeclaration","scope":1944,"src":"4436:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1940,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:10"},"returnParameters":{"id":1943,"nodeType":"ParameterList","parameters":[],"src":"4459:0:10"},"scope":1963,"src":"4391:69:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1945,"nodeType":"StructuredDocumentation","src":"4466:139:10","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1952,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:10","nodeType":"FunctionDefinition","parameters":{"id":1948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1947,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:10","nodeType":"VariableDeclaration","scope":1952,"src":"4631:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1946,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:10"},"returnParameters":{"id":1951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1950,"mutability":"mutable","name":"operator","nameLocation":"4679:8:10","nodeType":"VariableDeclaration","scope":1952,"src":"4671:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1949,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:10"},"scope":1963,"src":"4610:79:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1953,"nodeType":"StructuredDocumentation","src":"4695:138:10","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1962,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:10","nodeType":"FunctionDefinition","parameters":{"id":1958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1955,"mutability":"mutable","name":"owner","nameLocation":"4872:5:10","nodeType":"VariableDeclaration","scope":1962,"src":"4864:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1954,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1957,"mutability":"mutable","name":"operator","nameLocation":"4887:8:10","nodeType":"VariableDeclaration","scope":1962,"src":"4879:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1956,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:10"},"returnParameters":{"id":1961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1960,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1962,"src":"4920:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1959,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:10"},"scope":1963,"src":"4838:88:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1964,"src":"267:4661:10","usedErrors":[],"usedEvents":[1862,1871,1880]}],"src":"108:4821:10"},"id":10},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1981]},"id":1982,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1965,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1966,"nodeType":"StructuredDocumentation","src":"142:154:11","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":1981,"linearizedBaseContracts":[1981],"name":"IERC721Receiver","nameLocation":"307:15:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1967,"nodeType":"StructuredDocumentation","src":"329:500:11","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1980,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:11","nodeType":"FunctionDefinition","parameters":{"id":1976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1969,"mutability":"mutable","name":"operator","nameLocation":"877:8:11","nodeType":"VariableDeclaration","scope":1980,"src":"869:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1968,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1971,"mutability":"mutable","name":"from","nameLocation":"903:4:11","nodeType":"VariableDeclaration","scope":1980,"src":"895:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1970,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1973,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:11","nodeType":"VariableDeclaration","scope":1980,"src":"917:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1972,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1975,"mutability":"mutable","name":"data","nameLocation":"957:4:11","nodeType":"VariableDeclaration","scope":1980,"src":"942:19:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1974,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:11"},"returnParameters":{"id":1979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1978,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1980,"src":"986:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1977,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:11"},"scope":1981,"src":"834:160:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1982,"src":"297:699:11","usedErrors":[],"usedEvents":[]}],"src":"116:881:11"},"id":11},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"ERC721":[1846],"ERC721URIStorage":[2107],"IERC165":[3530],"IERC4906":[261],"Strings":[3494]},"id":2108,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1983,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":1985,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2108,"sourceUnit":1847,"src":"154:37:12","symbolAliases":[{"foreign":{"id":1984,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"162:6:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../../utils/Strings.sol","id":1987,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2108,"sourceUnit":3495,"src":"192:51:12","symbolAliases":[{"foreign":{"id":1986,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"200:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","file":"../../../interfaces/IERC4906.sol","id":1989,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2108,"sourceUnit":262,"src":"244:58:12","symbolAliases":[{"foreign":{"id":1988,"name":"IERC4906","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"252:8:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"../../../interfaces/IERC165.sol","id":1991,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2108,"sourceUnit":234,"src":"303:56:12","symbolAliases":[{"foreign":{"id":1990,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"311:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1993,"name":"IERC4906","nameLocations":["470:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":261,"src":"470:8:12"},"id":1994,"nodeType":"InheritanceSpecifier","src":"470:8:12"},{"baseName":{"id":1995,"name":"ERC721","nameLocations":["480:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1846,"src":"480:6:12"},"id":1996,"nodeType":"InheritanceSpecifier","src":"480:6:12"}],"canonicalName":"ERC721URIStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":1992,"nodeType":"StructuredDocumentation","src":"361:70:12","text":" @dev ERC-721 token with storage based token URI management."},"fullyImplemented":true,"id":2107,"linearizedBaseContracts":[2107,1846,355,2135,261,1963,3518,3530,2242],"name":"ERC721URIStorage","nameLocation":"450:16:12","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1999,"libraryName":{"id":1997,"name":"Strings","nameLocations":["499:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":3494,"src":"499:7:12"},"nodeType":"UsingForDirective","src":"493:26:12","typeName":{"id":1998,"name":"uint256","nodeType":"ElementaryTypeName","src":"511:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"id":2005,"mutability":"constant","name":"ERC4906_INTERFACE_ID","nameLocation":"731:20:12","nodeType":"VariableDeclaration","scope":2107,"src":"707:65:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2000,"name":"bytes4","nodeType":"ElementaryTypeName","src":"707:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"arguments":[{"hexValue":"30783439303634393036","id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"761:10:12","typeDescriptions":{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"},"value":"0x49064906"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"}],"id":2002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"754:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":2001,"name":"bytes4","nodeType":"ElementaryTypeName","src":"754:6:12","typeDescriptions":{}}},"id":2004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"754:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"private"},{"constant":false,"id":2009,"mutability":"mutable","name":"_tokenURIs","nameLocation":"861:10:12","nodeType":"VariableDeclaration","scope":2107,"src":"818:53:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":2008,"keyName":"tokenId","keyNameLocation":"834:7:12","keyType":{"id":2006,"name":"uint256","nodeType":"ElementaryTypeName","src":"826:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"818:34:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2007,"name":"string","nodeType":"ElementaryTypeName","src":"845:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[990,3529],"body":{"id":2029,"nodeType":"Block","src":"1046:99:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2020,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"1063:11:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2021,"name":"ERC4906_INTERFACE_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"1078:20:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1063:35:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2025,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"1126:11:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2023,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1102:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$2107_$","typeString":"type(contract super ERC721URIStorage)"}},"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1108:17:12","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":990,"src":"1102:23:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1102:36:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1063:75:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2019,"id":2028,"nodeType":"Return","src":"1056:82:12"}]},"documentation":{"id":2010,"nodeType":"StructuredDocumentation","src":"878:55:12","text":" @dev See {IERC165-supportsInterface}"},"functionSelector":"01ffc9a7","id":2030,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"947:17:12","nodeType":"FunctionDefinition","overrides":{"id":2016,"nodeType":"OverrideSpecifier","overrides":[{"id":2014,"name":"ERC721","nameLocations":["1014:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1846,"src":"1014:6:12"},{"id":2015,"name":"IERC165","nameLocations":["1022:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":3530,"src":"1022:7:12"}],"src":"1005:25:12"},"parameters":{"id":2013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2012,"mutability":"mutable","name":"interfaceId","nameLocation":"972:11:12","nodeType":"VariableDeclaration","scope":2030,"src":"965:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2011,"name":"bytes4","nodeType":"ElementaryTypeName","src":"965:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"964:20:12"},"returnParameters":{"id":2019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2030,"src":"1040:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2017,"name":"bool","nodeType":"ElementaryTypeName","src":"1040:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1039:6:12"},"scope":2107,"src":"938:207:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1085],"body":{"id":2086,"nodeType":"Block","src":"1299:505:12","statements":[{"expression":{"arguments":[{"id":2040,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"1323:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2039,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"1309:13:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1309:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2042,"nodeType":"ExpressionStatement","src":"1309:22:12"},{"assignments":[2044],"declarations":[{"constant":false,"id":2044,"mutability":"mutable","name":"_tokenURI","nameLocation":"1356:9:12","nodeType":"VariableDeclaration","scope":2086,"src":"1342:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2043,"name":"string","nodeType":"ElementaryTypeName","src":"1342:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2048,"initialValue":{"baseExpression":{"id":2045,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"1368:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2047,"indexExpression":{"id":2046,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"1379:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1368:19:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1342:45:12"},{"assignments":[2050],"declarations":[{"constant":false,"id":2050,"mutability":"mutable","name":"base","nameLocation":"1411:4:12","nodeType":"VariableDeclaration","scope":2086,"src":"1397:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2049,"name":"string","nodeType":"ElementaryTypeName","src":"1397:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2053,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2051,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"1418:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1418:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1397:31:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2056,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"1507:4:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1501:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2054,"name":"bytes","nodeType":"ElementaryTypeName","src":"1501:5:12","typeDescriptions":{}}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1501:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1513:6:12","memberName":"length","nodeType":"MemberAccess","src":"1501:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1523:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1501:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2064,"nodeType":"IfStatement","src":"1497:70:12","trueBody":{"id":2063,"nodeType":"Block","src":"1526:41:12","statements":[{"expression":{"id":2061,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"1547:9:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2038,"id":2062,"nodeType":"Return","src":"1540:16:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2067,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"1672:9:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1666:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2065,"name":"bytes","nodeType":"ElementaryTypeName","src":"1666:5:12","typeDescriptions":{}}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1666:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1683:6:12","memberName":"length","nodeType":"MemberAccess","src":"1666:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1692:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1666:27:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2080,"nodeType":"IfStatement","src":"1662:95:12","trueBody":{"id":2079,"nodeType":"Block","src":"1695:62:12","statements":[{"expression":{"arguments":[{"id":2075,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"1730:4:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2076,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"1736:9:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1716:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2072,"name":"string","nodeType":"ElementaryTypeName","src":"1716:6:12","typeDescriptions":{}}},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1723:6:12","memberName":"concat","nodeType":"MemberAccess","src":"1716:13:12","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1716:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2038,"id":2078,"nodeType":"Return","src":"1709:37:12"}]}},{"expression":{"arguments":[{"id":2083,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"1789:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2081,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1774:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$2107_$","typeString":"type(contract super ERC721URIStorage)"}},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1780:8:12","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":1085,"src":"1774:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1774:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2038,"id":2085,"nodeType":"Return","src":"1767:30:12"}]},"documentation":{"id":2031,"nodeType":"StructuredDocumentation","src":"1151:55:12","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":2087,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"1220:8:12","nodeType":"FunctionDefinition","overrides":{"id":2035,"nodeType":"OverrideSpecifier","overrides":[],"src":"1266:8:12"},"parameters":{"id":2034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2033,"mutability":"mutable","name":"tokenId","nameLocation":"1237:7:12","nodeType":"VariableDeclaration","scope":2087,"src":"1229:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2032,"name":"uint256","nodeType":"ElementaryTypeName","src":"1229:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1228:17:12"},"returnParameters":{"id":2038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2087,"src":"1284:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2036,"name":"string","nodeType":"ElementaryTypeName","src":"1284:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1283:15:12"},"scope":2107,"src":"1211:593:12","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2105,"nodeType":"Block","src":"2004:86:12","statements":[{"expression":{"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2095,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"2014:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2097,"indexExpression":{"id":2096,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"2025:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2014:19:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2098,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"2036:9:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2014:31:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2100,"nodeType":"ExpressionStatement","src":"2014:31:12"},{"eventCall":{"arguments":[{"id":2102,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"2075:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2101,"name":"MetadataUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"2060:14:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2060:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2104,"nodeType":"EmitStatement","src":"2055:28:12"}]},"documentation":{"id":2088,"nodeType":"StructuredDocumentation","src":"1810:108:12","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."},"id":2106,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1932:12:12","nodeType":"FunctionDefinition","parameters":{"id":2093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2090,"mutability":"mutable","name":"tokenId","nameLocation":"1953:7:12","nodeType":"VariableDeclaration","scope":2106,"src":"1945:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2089,"name":"uint256","nodeType":"ElementaryTypeName","src":"1945:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2092,"mutability":"mutable","name":"_tokenURI","nameLocation":"1976:9:12","nodeType":"VariableDeclaration","scope":2106,"src":"1962:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2091,"name":"string","nodeType":"ElementaryTypeName","src":"1962:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1944:42:12"},"returnParameters":{"id":2094,"nodeType":"ParameterList","parameters":[],"src":"2004:0:12"},"scope":2107,"src":"1923:167:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2108,"src":"432:1660:12","usedErrors":[313,318,327,332,337,344,349,354],"usedEvents":[253,260,1862,1871,1880]}],"src":"128:1965:12"},"id":12},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[1963],"IERC721Metadata":[2135]},"id":2136,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2109,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"127:24:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":2111,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2136,"sourceUnit":1964,"src":"153:39:13","symbolAliases":[{"foreign":{"id":2110,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"161:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2113,"name":"IERC721","nameLocations":["357:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":1963,"src":"357:7:13"},"id":2114,"nodeType":"InheritanceSpecifier","src":"357:7:13"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2112,"nodeType":"StructuredDocumentation","src":"194:133:13","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2135,"linearizedBaseContracts":[2135,1963,3530],"name":"IERC721Metadata","nameLocation":"338:15:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2115,"nodeType":"StructuredDocumentation","src":"371:58:13","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":2120,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:13","nodeType":"FunctionDefinition","parameters":{"id":2116,"nodeType":"ParameterList","parameters":[],"src":"447:2:13"},"returnParameters":{"id":2119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2120,"src":"473:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2117,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:13"},"scope":2135,"src":"434:54:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2121,"nodeType":"StructuredDocumentation","src":"494:60:13","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":2126,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:13","nodeType":"FunctionDefinition","parameters":{"id":2122,"nodeType":"ParameterList","parameters":[],"src":"574:2:13"},"returnParameters":{"id":2125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2126,"src":"600:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2123,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:13"},"scope":2135,"src":"559:56:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2127,"nodeType":"StructuredDocumentation","src":"621:90:13","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":2134,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:13","nodeType":"FunctionDefinition","parameters":{"id":2130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2129,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:13","nodeType":"VariableDeclaration","scope":2134,"src":"734:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2128,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:13"},"returnParameters":{"id":2133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2134,"src":"774:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2131,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:13"},"scope":2135,"src":"716:73:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2136,"src":"328:463:13","usedErrors":[],"usedEvents":[1862,1871,1880]}],"src":"127:665:13"},"id":13},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[2212],"IERC721Errors":[355],"IERC721Receiver":[1981]},"id":2213,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2137,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":2139,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2213,"sourceUnit":1982,"src":"144:55:14","symbolAliases":[{"foreign":{"id":2138,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"152:15:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":2141,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2213,"sourceUnit":403,"src":"200:69:14","symbolAliases":[{"foreign":{"id":2140,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"208:13:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":2142,"nodeType":"StructuredDocumentation","src":"271:159:14","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":2212,"linearizedBaseContracts":[2212],"name":"ERC721Utils","nameLocation":"439:11:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2210,"nodeType":"Block","src":"1151:758:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2156,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"1165:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1168:4:14","memberName":"code","nodeType":"MemberAccess","src":"1165:7:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1173:6:14","memberName":"length","nodeType":"MemberAccess","src":"1165:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1182:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1165:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2209,"nodeType":"IfStatement","src":"1161:742:14","trueBody":{"id":2208,"nodeType":"Block","src":"1185:718:14","statements":[{"clauses":[{"block":{"id":2186,"nodeType":"Block","src":"1295:214:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2173,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"1317:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":2174,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"1327:15:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1981_$","typeString":"type(contract IERC721Receiver)"}},"id":2175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1343:16:14","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"1327:32:14","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":2176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1360:8:14","memberName":"selector","nodeType":"MemberAccess","src":"1327:41:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1317:51:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2185,"nodeType":"IfStatement","src":"1313:182:14","trueBody":{"id":2184,"nodeType":"Block","src":"1370:125:14","statements":[{"errorCall":{"arguments":[{"id":2181,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"1473:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2178,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"1437:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$355_$","typeString":"type(contract IERC721Errors)"}},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1451:21:14","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":337,"src":"1437:35:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1437:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2183,"nodeType":"RevertStatement","src":"1430:46:14"}]}}]},"errorName":"","id":2187,"nodeType":"TryCatchClause","parameters":{"id":2172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2171,"mutability":"mutable","name":"retval","nameLocation":"1287:6:14","nodeType":"VariableDeclaration","scope":2187,"src":"1280:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2170,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1280:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1279:15:14"},"src":"1271:238:14"},{"block":{"id":2205,"nodeType":"Block","src":"1538:355:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2191,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"1560:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1567:6:14","memberName":"length","nodeType":"MemberAccess","src":"1560:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1577:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1560:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2203,"nodeType":"Block","src":"1728:151:14","statements":[{"AST":{"nodeType":"YulBlock","src":"1775:86:14","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1812:2:14","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"1816:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1808:3:14"},"nodeType":"YulFunctionCall","src":"1808:15:14"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1831:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1825:5:14"},"nodeType":"YulFunctionCall","src":"1825:13:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1801:6:14"},"nodeType":"YulFunctionCall","src":"1801:38:14"},"nodeType":"YulExpressionStatement","src":"1801:38:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":2189,"isOffset":false,"isSlot":false,"src":"1816:6:14","valueSize":1},{"declaration":2189,"isOffset":false,"isSlot":false,"src":"1831:6:14","valueSize":1}],"flags":["memory-safe"],"id":2202,"nodeType":"InlineAssembly","src":"1750:111:14"}]},"id":2204,"nodeType":"IfStatement","src":"1556:323:14","trueBody":{"id":2201,"nodeType":"Block","src":"1580:142:14","statements":[{"errorCall":{"arguments":[{"id":2198,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"1700:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2195,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"1664:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$355_$","typeString":"type(contract IERC721Errors)"}},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1678:21:14","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":337,"src":"1664:35:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2200,"nodeType":"RevertStatement","src":"1657:46:14"}]}}]},"errorName":"","id":2206,"nodeType":"TryCatchClause","parameters":{"id":2190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2189,"mutability":"mutable","name":"reason","nameLocation":"1530:6:14","nodeType":"VariableDeclaration","scope":2206,"src":"1517:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2188,"name":"bytes","nodeType":"ElementaryTypeName","src":"1517:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1516:21:14"},"src":"1510:383:14"}],"externalCall":{"arguments":[{"id":2165,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"1240:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2166,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"1250:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2167,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"1256:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2168,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"1265:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2162,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"1219:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2161,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"1203:15:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1981_$","typeString":"type(contract IERC721Receiver)"}},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1203:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1981","typeString":"contract IERC721Receiver"}},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1223:16:14","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"1203:36:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1203:67:14","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2207,"nodeType":"TryStatement","src":"1199:694:14"}]}}]},"documentation":{"id":2143,"nodeType":"StructuredDocumentation","src":"457:523:14","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":2211,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"994:21:14","nodeType":"FunctionDefinition","parameters":{"id":2154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2145,"mutability":"mutable","name":"operator","nameLocation":"1033:8:14","nodeType":"VariableDeclaration","scope":2211,"src":"1025:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2144,"name":"address","nodeType":"ElementaryTypeName","src":"1025:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2147,"mutability":"mutable","name":"from","nameLocation":"1059:4:14","nodeType":"VariableDeclaration","scope":2211,"src":"1051:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2146,"name":"address","nodeType":"ElementaryTypeName","src":"1051:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2149,"mutability":"mutable","name":"to","nameLocation":"1081:2:14","nodeType":"VariableDeclaration","scope":2211,"src":"1073:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2148,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2151,"mutability":"mutable","name":"tokenId","nameLocation":"1101:7:14","nodeType":"VariableDeclaration","scope":2211,"src":"1093:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2150,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2153,"mutability":"mutable","name":"data","nameLocation":"1131:4:14","nodeType":"VariableDeclaration","scope":2211,"src":"1118:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2152,"name":"bytes","nodeType":"ElementaryTypeName","src":"1118:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1015:126:14"},"returnParameters":{"id":2155,"nodeType":"ParameterList","parameters":[],"src":"1151:0:14"},"scope":2212,"src":"985:924:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2213,"src":"431:1480:14","usedErrors":[],"usedEvents":[]}],"src":"118:1794:14"},"id":14},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2242]},"id":2243,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2214,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:15"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2215,"nodeType":"StructuredDocumentation","src":"127:496:15","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2242,"linearizedBaseContracts":[2242],"name":"Context","nameLocation":"642:7:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":2223,"nodeType":"Block","src":"718:34:15","statements":[{"expression":{"expression":{"id":2220,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:15","memberName":"sender","nodeType":"MemberAccess","src":"735:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2219,"id":2222,"nodeType":"Return","src":"728:17:15"}]},"id":2224,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:15","nodeType":"FunctionDefinition","parameters":{"id":2216,"nodeType":"ParameterList","parameters":[],"src":"675:2:15"},"returnParameters":{"id":2219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2224,"src":"709:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2217,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:15"},"scope":2242,"src":"656:96:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2232,"nodeType":"Block","src":"825:32:15","statements":[{"expression":{"expression":{"id":2229,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:15","memberName":"data","nodeType":"MemberAccess","src":"842:8:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2228,"id":2231,"nodeType":"Return","src":"835:15:15"}]},"id":2233,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:15","nodeType":"FunctionDefinition","parameters":{"id":2225,"nodeType":"ParameterList","parameters":[],"src":"775:2:15"},"returnParameters":{"id":2228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2233,"src":"809:14:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2226,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:15"},"scope":2242,"src":"758:99:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2240,"nodeType":"Block","src":"935:25:15","statements":[{"expression":{"hexValue":"30","id":2238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2237,"id":2239,"nodeType":"Return","src":"945:8:15"}]},"id":2241,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:15","nodeType":"FunctionDefinition","parameters":{"id":2234,"nodeType":"ParameterList","parameters":[],"src":"892:2:15"},"returnParameters":{"id":2237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2241,"src":"926:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2235,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:15"},"scope":2242,"src":"863:97:15","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2243,"src":"624:338:15","usedErrors":[],"usedEvents":[]}],"src":"101:862:15"},"id":15},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[2294]},"id":2295,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2244,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":2245,"nodeType":"StructuredDocumentation","src":"125:489:16","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":2294,"linearizedBaseContracts":[2294],"name":"Panic","nameLocation":"665:5:16","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2246,"nodeType":"StructuredDocumentation","src":"677:36:16","text":"@dev generic / unspecified error"},"id":2249,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:16","nodeType":"VariableDeclaration","scope":2294,"src":"718:40:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2247,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":2248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":2250,"nodeType":"StructuredDocumentation","src":"764:37:16","text":"@dev used by the assert() builtin"},"id":2253,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:16","nodeType":"VariableDeclaration","scope":2294,"src":"806:39:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2251,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":2252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":2254,"nodeType":"StructuredDocumentation","src":"851:41:16","text":"@dev arithmetic underflow or overflow"},"id":2257,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:16","nodeType":"VariableDeclaration","scope":2294,"src":"897:47:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2255,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":2256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:16","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":2258,"nodeType":"StructuredDocumentation","src":"950:35:16","text":"@dev division or modulo by zero"},"id":2261,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:16","nodeType":"VariableDeclaration","scope":2294,"src":"990:49:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2259,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":2260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:16","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":2262,"nodeType":"StructuredDocumentation","src":"1045:30:16","text":"@dev enum conversion error"},"id":2265,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:16","nodeType":"VariableDeclaration","scope":2294,"src":"1080:54:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2263,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":2264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:16","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":2266,"nodeType":"StructuredDocumentation","src":"1140:36:16","text":"@dev invalid encoding in storage"},"id":2269,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:16","nodeType":"VariableDeclaration","scope":2294,"src":"1181:55:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2267,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":2268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:16","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":2270,"nodeType":"StructuredDocumentation","src":"1242:24:16","text":"@dev empty array pop"},"id":2273,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:16","nodeType":"VariableDeclaration","scope":2294,"src":"1271:48:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2271,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":2272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:16","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":2274,"nodeType":"StructuredDocumentation","src":"1325:35:16","text":"@dev array out of bounds access"},"id":2277,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:16","nodeType":"VariableDeclaration","scope":2294,"src":"1365:52:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2275,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":2276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:16","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":2278,"nodeType":"StructuredDocumentation","src":"1423:65:16","text":"@dev resource error (too large allocation or too large array)"},"id":2281,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:16","nodeType":"VariableDeclaration","scope":2294,"src":"1493:47:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2279,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":2280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:16","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":2282,"nodeType":"StructuredDocumentation","src":"1546:42:16","text":"@dev calling invalid internal function"},"id":2285,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:16","nodeType":"VariableDeclaration","scope":2294,"src":"1593:58:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2283,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":2284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:16","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":2292,"nodeType":"Block","src":"1819:151:16","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:16","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:16"},"nodeType":"YulFunctionCall","src":"1868:24:16"},"nodeType":"YulExpressionStatement","src":"1868:24:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:16","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:16"},"nodeType":"YulFunctionCall","src":"1905:18:16"},"nodeType":"YulExpressionStatement","src":"1905:18:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:16","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:16"},"nodeType":"YulFunctionCall","src":"1936:18:16"},"nodeType":"YulExpressionStatement","src":"1936:18:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":2288,"isOffset":false,"isSlot":false,"src":"1918:4:16","valueSize":1}],"flags":["memory-safe"],"id":2291,"nodeType":"InlineAssembly","src":"1829:135:16"}]},"documentation":{"id":2286,"nodeType":"StructuredDocumentation","src":"1658:113:16","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":2293,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:16","nodeType":"FunctionDefinition","parameters":{"id":2289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2288,"mutability":"mutable","name":"code","nameLocation":"1799:4:16","nodeType":"VariableDeclaration","scope":2293,"src":"1791:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2287,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:16"},"returnParameters":{"id":2290,"nodeType":"ParameterList","parameters":[],"src":"1819:0:16"},"scope":2294,"src":"1776:194:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2295,"src":"657:1315:16","usedErrors":[],"usedEvents":[]}],"src":"99:1874:16"},"id":16},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5136],"SafeCast":[6901],"SignedMath":[7045],"Strings":[3494]},"id":3495,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2296,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2298,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3495,"sourceUnit":5137,"src":"127:37:17","symbolAliases":[{"foreign":{"id":2297,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5136,"src":"135:4:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":2300,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3495,"sourceUnit":6902,"src":"165:45:17","symbolAliases":[{"foreign":{"id":2299,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"173:8:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2302,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3495,"sourceUnit":7046,"src":"211:49:17","symbolAliases":[{"foreign":{"id":2301,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7045,"src":"219:10:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2303,"nodeType":"StructuredDocumentation","src":"262:34:17","text":" @dev String operations."},"fullyImplemented":true,"id":3494,"linearizedBaseContracts":[3494],"name":"Strings","nameLocation":"305:7:17","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2305,"libraryName":{"id":2304,"name":"SafeCast","nameLocations":["325:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":6901,"src":"325:8:17"},"nodeType":"UsingForDirective","src":"319:21:17"},{"constant":true,"id":2308,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:17","nodeType":"VariableDeclaration","scope":3494,"src":"346:56:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2306,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:17","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2311,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:17","nodeType":"VariableDeclaration","scope":3494,"src":"408:42:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2309,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:17","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":2312,"nodeType":"StructuredDocumentation","src":"457:81:17","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2318,"name":"StringsInsufficientHexLength","nameLocation":"549:28:17","nodeType":"ErrorDefinition","parameters":{"id":2317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2314,"mutability":"mutable","name":"value","nameLocation":"586:5:17","nodeType":"VariableDeclaration","scope":2318,"src":"578:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2313,"name":"uint256","nodeType":"ElementaryTypeName","src":"578:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2316,"mutability":"mutable","name":"length","nameLocation":"601:6:17","nodeType":"VariableDeclaration","scope":2318,"src":"593:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2315,"name":"uint256","nodeType":"ElementaryTypeName","src":"593:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"577:31:17"},"src":"543:66:17"},{"documentation":{"id":2319,"nodeType":"StructuredDocumentation","src":"615:108:17","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":2321,"name":"StringsInvalidChar","nameLocation":"734:18:17","nodeType":"ErrorDefinition","parameters":{"id":2320,"nodeType":"ParameterList","parameters":[],"src":"752:2:17"},"src":"728:27:17"},{"documentation":{"id":2322,"nodeType":"StructuredDocumentation","src":"761:84:17","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":2324,"name":"StringsInvalidAddressFormat","nameLocation":"856:27:17","nodeType":"ErrorDefinition","parameters":{"id":2323,"nodeType":"ParameterList","parameters":[],"src":"883:2:17"},"src":"850:36:17"},{"body":{"id":2371,"nodeType":"Block","src":"1058:561:17","statements":[{"id":2370,"nodeType":"UncheckedBlock","src":"1068:545:17","statements":[{"assignments":[2333],"declarations":[{"constant":false,"id":2333,"mutability":"mutable","name":"length","nameLocation":"1100:6:17","nodeType":"VariableDeclaration","scope":2370,"src":"1092:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2332,"name":"uint256","nodeType":"ElementaryTypeName","src":"1092:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2340,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"1120:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2334,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5136,"src":"1109:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5136_$","typeString":"type(library Math)"}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1114:5:17","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4908,"src":"1109:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1109:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1129:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1109:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1092:38:17"},{"assignments":[2342],"declarations":[{"constant":false,"id":2342,"mutability":"mutable","name":"buffer","nameLocation":"1158:6:17","nodeType":"VariableDeclaration","scope":2370,"src":"1144:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2341,"name":"string","nodeType":"ElementaryTypeName","src":"1144:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2347,"initialValue":{"arguments":[{"id":2345,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"1178:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1167:10:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2343,"name":"string","nodeType":"ElementaryTypeName","src":"1171:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1167:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1144:41:17"},{"assignments":[2349],"declarations":[{"constant":false,"id":2349,"mutability":"mutable","name":"ptr","nameLocation":"1207:3:17","nodeType":"VariableDeclaration","scope":2370,"src":"1199:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2348,"name":"uint256","nodeType":"ElementaryTypeName","src":"1199:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2350,"nodeType":"VariableDeclarationStatement","src":"1199:11:17"},{"AST":{"nodeType":"YulBlock","src":"1249:67:17","statements":[{"nodeType":"YulAssignment","src":"1267:35:17","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1278:6:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1290:2:17","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"1294:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1286:3:17"},"nodeType":"YulFunctionCall","src":"1286:15:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1274:3:17"},"nodeType":"YulFunctionCall","src":"1274:28:17"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1267:3:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2342,"isOffset":false,"isSlot":false,"src":"1278:6:17","valueSize":1},{"declaration":2333,"isOffset":false,"isSlot":false,"src":"1294:6:17","valueSize":1},{"declaration":2349,"isOffset":false,"isSlot":false,"src":"1267:3:17","valueSize":1}],"flags":["memory-safe"],"id":2351,"nodeType":"InlineAssembly","src":"1224:92:17"},{"body":{"id":2366,"nodeType":"Block","src":"1342:234:17","statements":[{"expression":{"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1360:5:17","subExpression":{"id":2353,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"1360:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2355,"nodeType":"ExpressionStatement","src":"1360:5:17"},{"AST":{"nodeType":"YulBlock","src":"1408:86:17","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1438:3:17"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1452:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1459:2:17","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1448:3:17"},"nodeType":"YulFunctionCall","src":"1448:14:17"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1464:10:17"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1443:4:17"},"nodeType":"YulFunctionCall","src":"1443:32:17"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1430:7:17"},"nodeType":"YulFunctionCall","src":"1430:46:17"},"nodeType":"YulExpressionStatement","src":"1430:46:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":2308,"isOffset":false,"isSlot":false,"src":"1464:10:17","valueSize":1},{"declaration":2349,"isOffset":false,"isSlot":false,"src":"1438:3:17","valueSize":1},{"declaration":2327,"isOffset":false,"isSlot":false,"src":"1452:5:17","valueSize":1}],"flags":["memory-safe"],"id":2356,"nodeType":"InlineAssembly","src":"1383:111:17"},{"expression":{"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"1511:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1520:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1511:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2360,"nodeType":"ExpressionStatement","src":"1511:11:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"1544:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1553:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1544:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2365,"nodeType":"IfStatement","src":"1540:21:17","trueBody":{"id":2364,"nodeType":"Break","src":"1556:5:17"}}]},"condition":{"hexValue":"74727565","id":2352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1336:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2367,"nodeType":"WhileStatement","src":"1329:247:17"},{"expression":{"id":2368,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"1596:6:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2331,"id":2369,"nodeType":"Return","src":"1589:13:17"}]}]},"documentation":{"id":2325,"nodeType":"StructuredDocumentation","src":"892:90:17","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2372,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"996:8:17","nodeType":"FunctionDefinition","parameters":{"id":2328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2327,"mutability":"mutable","name":"value","nameLocation":"1013:5:17","nodeType":"VariableDeclaration","scope":2372,"src":"1005:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2326,"name":"uint256","nodeType":"ElementaryTypeName","src":"1005:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1004:15:17"},"returnParameters":{"id":2331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2372,"src":"1043:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2329,"name":"string","nodeType":"ElementaryTypeName","src":"1043:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1042:15:17"},"scope":3494,"src":"987:632:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2397,"nodeType":"Block","src":"1795:92:17","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"1826:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1834:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1826:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1844:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1826:20:17","trueExpression":{"hexValue":"2d","id":2386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1838:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"1872:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2390,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7045,"src":"1857:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7045_$","typeString":"type(library SignedMath)"}},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1868:3:17","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7044,"src":"1857:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1857:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2389,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2372,"src":"1848:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1848:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1812:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2380,"name":"string","nodeType":"ElementaryTypeName","src":"1812:6:17","typeDescriptions":{}}},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1819:6:17","memberName":"concat","nodeType":"MemberAccess","src":"1812:13:17","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1812:68:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2379,"id":2396,"nodeType":"Return","src":"1805:75:17"}]},"documentation":{"id":2373,"nodeType":"StructuredDocumentation","src":"1625:89:17","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2398,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1728:14:17","nodeType":"FunctionDefinition","parameters":{"id":2376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2375,"mutability":"mutable","name":"value","nameLocation":"1750:5:17","nodeType":"VariableDeclaration","scope":2398,"src":"1743:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2374,"name":"int256","nodeType":"ElementaryTypeName","src":"1743:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1742:14:17"},"returnParameters":{"id":2379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2398,"src":"1780:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2377,"name":"string","nodeType":"ElementaryTypeName","src":"1780:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1779:15:17"},"scope":3494,"src":"1719:168:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2417,"nodeType":"Block","src":"2066:100:17","statements":[{"id":2416,"nodeType":"UncheckedBlock","src":"2076:84:17","statements":[{"expression":{"arguments":[{"id":2407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"2119:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"2138:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2408,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5136,"src":"2126:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5136_$","typeString":"type(library Math)"}},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2131:6:17","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5079,"src":"2126:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2126:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2147:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2126:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2406,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2418,2501,2521],"referencedDeclaration":2501,"src":"2107:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2107:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2405,"id":2415,"nodeType":"Return","src":"2100:49:17"}]}]},"documentation":{"id":2399,"nodeType":"StructuredDocumentation","src":"1893:94:17","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2418,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2001:11:17","nodeType":"FunctionDefinition","parameters":{"id":2402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2401,"mutability":"mutable","name":"value","nameLocation":"2021:5:17","nodeType":"VariableDeclaration","scope":2418,"src":"2013:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2400,"name":"uint256","nodeType":"ElementaryTypeName","src":"2013:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2012:15:17"},"returnParameters":{"id":2405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2418,"src":"2051:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2403,"name":"string","nodeType":"ElementaryTypeName","src":"2051:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2050:15:17"},"scope":3494,"src":"1992:174:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2500,"nodeType":"Block","src":"2379:435:17","statements":[{"assignments":[2429],"declarations":[{"constant":false,"id":2429,"mutability":"mutable","name":"localValue","nameLocation":"2397:10:17","nodeType":"VariableDeclaration","scope":2500,"src":"2389:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2428,"name":"uint256","nodeType":"ElementaryTypeName","src":"2389:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2431,"initialValue":{"id":2430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"2410:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2389:26:17"},{"assignments":[2433],"declarations":[{"constant":false,"id":2433,"mutability":"mutable","name":"buffer","nameLocation":"2438:6:17","nodeType":"VariableDeclaration","scope":2500,"src":"2425:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2432,"name":"bytes","nodeType":"ElementaryTypeName","src":"2425:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2442,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2457:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2437,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"2461:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2457:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2457:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2447:9:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2434,"name":"bytes","nodeType":"ElementaryTypeName","src":"2451:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2425:47:17"},{"expression":{"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2443,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"2482:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2445,"indexExpression":{"hexValue":"30","id":2444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2489:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2482:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2494:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2482:15:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2448,"nodeType":"ExpressionStatement","src":"2482:15:17"},{"expression":{"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2449,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"2507:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2451,"indexExpression":{"hexValue":"31","id":2450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2514:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2507:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2519:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2507:15:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2454,"nodeType":"ExpressionStatement","src":"2507:15:17"},{"body":{"id":2483,"nodeType":"Block","src":"2577:95:17","statements":[{"expression":{"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2469,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"2591:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2471,"indexExpression":{"id":2470,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"2598:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2591:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2472,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"2603:10:17","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2476,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2473,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"2614:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2627:3:17","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2614:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2603:28:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2591:40:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2478,"nodeType":"ExpressionStatement","src":"2591:40:17"},{"expression":{"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2479,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"2645:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2660:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2645:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2482,"nodeType":"ExpressionStatement","src":"2645:16:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2463,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"2565:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2569:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2565:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2484,"initializationExpression":{"assignments":[2456],"declarations":[{"constant":false,"id":2456,"mutability":"mutable","name":"i","nameLocation":"2545:1:17","nodeType":"VariableDeclaration","scope":2484,"src":"2537:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2455,"name":"uint256","nodeType":"ElementaryTypeName","src":"2537:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2462,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2549:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2458,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"2553:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2549:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2562:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2549:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2537:26:17"},"loopExpression":{"expression":{"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2572:3:17","subExpression":{"id":2466,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"2574:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2468,"nodeType":"ExpressionStatement","src":"2572:3:17"},"nodeType":"ForStatement","src":"2532:140:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2485,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"2685:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2699:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2685:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2494,"nodeType":"IfStatement","src":"2681:96:17","trueBody":{"id":2493,"nodeType":"Block","src":"2702:75:17","statements":[{"errorCall":{"arguments":[{"id":2489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"2752:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2490,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"2759:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2488,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"2723:28:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2492,"nodeType":"RevertStatement","src":"2716:50:17"}]}},{"expression":{"arguments":[{"id":2497,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"2800:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2793:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2495,"name":"string","nodeType":"ElementaryTypeName","src":"2793:6:17","typeDescriptions":{}}},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2793:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2427,"id":2499,"nodeType":"Return","src":"2786:21:17"}]},"documentation":{"id":2419,"nodeType":"StructuredDocumentation","src":"2172:112:17","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2501,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2298:11:17","nodeType":"FunctionDefinition","parameters":{"id":2424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2421,"mutability":"mutable","name":"value","nameLocation":"2318:5:17","nodeType":"VariableDeclaration","scope":2501,"src":"2310:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2420,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2423,"mutability":"mutable","name":"length","nameLocation":"2333:6:17","nodeType":"VariableDeclaration","scope":2501,"src":"2325:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2422,"name":"uint256","nodeType":"ElementaryTypeName","src":"2325:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2309:31:17"},"returnParameters":{"id":2427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2501,"src":"2364:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2425,"name":"string","nodeType":"ElementaryTypeName","src":"2364:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2363:15:17"},"scope":3494,"src":"2289:525:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2520,"nodeType":"Block","src":"3046:75:17","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2514,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"3091:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3083:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2512,"name":"uint160","nodeType":"ElementaryTypeName","src":"3083:7:17","typeDescriptions":{}}},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3075:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2510,"name":"uint256","nodeType":"ElementaryTypeName","src":"3075:7:17","typeDescriptions":{}}},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2517,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"3099:14:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2509,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2418,2501,2521],"referencedDeclaration":2501,"src":"3063:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3063:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2508,"id":2519,"nodeType":"Return","src":"3056:58:17"}]},"documentation":{"id":2502,"nodeType":"StructuredDocumentation","src":"2820:148:17","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2521,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2982:11:17","nodeType":"FunctionDefinition","parameters":{"id":2505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2504,"mutability":"mutable","name":"addr","nameLocation":"3002:4:17","nodeType":"VariableDeclaration","scope":2521,"src":"2994:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2503,"name":"address","nodeType":"ElementaryTypeName","src":"2994:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2993:14:17"},"returnParameters":{"id":2508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2521,"src":"3031:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2506,"name":"string","nodeType":"ElementaryTypeName","src":"3031:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3030:15:17"},"scope":3494,"src":"2973:148:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2585,"nodeType":"Block","src":"3378:642:17","statements":[{"assignments":[2530],"declarations":[{"constant":false,"id":2530,"mutability":"mutable","name":"buffer","nameLocation":"3401:6:17","nodeType":"VariableDeclaration","scope":2585,"src":"3388:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2529,"name":"bytes","nodeType":"ElementaryTypeName","src":"3388:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2537,"initialValue":{"arguments":[{"arguments":[{"id":2534,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"3428:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2533,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2418,2501,2521],"referencedDeclaration":2521,"src":"3416:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3410:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2531,"name":"bytes","nodeType":"ElementaryTypeName","src":"3410:5:17","typeDescriptions":{}}},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3410:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3388:46:17"},{"assignments":[2539],"declarations":[{"constant":false,"id":2539,"mutability":"mutable","name":"hashValue","nameLocation":"3527:9:17","nodeType":"VariableDeclaration","scope":2585,"src":"3519:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2538,"name":"uint256","nodeType":"ElementaryTypeName","src":"3519:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2540,"nodeType":"VariableDeclarationStatement","src":"3519:17:17"},{"AST":{"nodeType":"YulBlock","src":"3571:78:17","statements":[{"nodeType":"YulAssignment","src":"3585:54:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3602:2:17","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3620:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3628:4:17","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3616:3:17"},"nodeType":"YulFunctionCall","src":"3616:17:17"},{"kind":"number","nodeType":"YulLiteral","src":"3635:2:17","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3606:9:17"},"nodeType":"YulFunctionCall","src":"3606:32:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3598:3:17"},"nodeType":"YulFunctionCall","src":"3598:41:17"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3585:9:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2530,"isOffset":false,"isSlot":false,"src":"3620:6:17","valueSize":1},{"declaration":2539,"isOffset":false,"isSlot":false,"src":"3585:9:17","valueSize":1}],"flags":["memory-safe"],"id":2541,"nodeType":"InlineAssembly","src":"3546:103:17"},{"body":{"id":2578,"nodeType":"Block","src":"3692:291:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2552,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"3798:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3810:3:17","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3798:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3816:1:17","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3798:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2559,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"3827:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2561,"indexExpression":{"id":2560,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"3834:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3827:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3821:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2557,"name":"uint8","nodeType":"ElementaryTypeName","src":"3821:5:17","typeDescriptions":{}}},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3840:2:17","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3821:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3798:44:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2573,"nodeType":"IfStatement","src":"3794:150:17","trueBody":{"id":2572,"nodeType":"Block","src":"3844:100:17","statements":[{"expression":{"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2566,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"3912:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2568,"indexExpression":{"id":2567,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"3919:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3912:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3925:4:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3912:17:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2571,"nodeType":"ExpressionStatement","src":"3912:17:17"}]}},{"expression":{"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2574,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"3957:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3971:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3957:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2577,"nodeType":"ExpressionStatement","src":"3957:15:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2546,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"3680:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3684:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3680:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2579,"initializationExpression":{"assignments":[2543],"declarations":[{"constant":false,"id":2543,"mutability":"mutable","name":"i","nameLocation":"3672:1:17","nodeType":"VariableDeclaration","scope":2579,"src":"3664:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2542,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2545,"initialValue":{"hexValue":"3431","id":2544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3676:2:17","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3664:14:17"},"loopExpression":{"expression":{"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3687:3:17","subExpression":{"id":2549,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"3689:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2551,"nodeType":"ExpressionStatement","src":"3687:3:17"},"nodeType":"ForStatement","src":"3659:324:17"},{"expression":{"arguments":[{"id":2582,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"4006:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3999:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2580,"name":"string","nodeType":"ElementaryTypeName","src":"3999:6:17","typeDescriptions":{}}},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3999:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2528,"id":2584,"nodeType":"Return","src":"3992:21:17"}]},"documentation":{"id":2522,"nodeType":"StructuredDocumentation","src":"3127:165:17","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2586,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3306:19:17","nodeType":"FunctionDefinition","parameters":{"id":2525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2524,"mutability":"mutable","name":"addr","nameLocation":"3334:4:17","nodeType":"VariableDeclaration","scope":2586,"src":"3326:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2523,"name":"address","nodeType":"ElementaryTypeName","src":"3326:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3325:14:17"},"returnParameters":{"id":2528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2586,"src":"3363:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2526,"name":"string","nodeType":"ElementaryTypeName","src":"3363:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3362:15:17"},"scope":3494,"src":"3297:723:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2622,"nodeType":"Block","src":"4175:104:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2598,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"4198:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2596,"name":"bytes","nodeType":"ElementaryTypeName","src":"4192:5:17","typeDescriptions":{}}},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4201:6:17","memberName":"length","nodeType":"MemberAccess","src":"4192:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2603,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"4217:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4211:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2601,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:17","typeDescriptions":{}}},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4211:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4220:6:17","memberName":"length","nodeType":"MemberAccess","src":"4211:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4192:34:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2610,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"4246:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4240:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2608,"name":"bytes","nodeType":"ElementaryTypeName","src":"4240:5:17","typeDescriptions":{}}},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4240:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2607,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4230:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4230:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2616,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"4269:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2614,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:17","typeDescriptions":{}}},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2613,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4253:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4253:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4230:42:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4192:80:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2595,"id":2621,"nodeType":"Return","src":"4185:87:17"}]},"documentation":{"id":2587,"nodeType":"StructuredDocumentation","src":"4026:66:17","text":" @dev Returns true if the two strings are equal."},"id":2623,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4106:5:17","nodeType":"FunctionDefinition","parameters":{"id":2592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2589,"mutability":"mutable","name":"a","nameLocation":"4126:1:17","nodeType":"VariableDeclaration","scope":2623,"src":"4112:15:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2588,"name":"string","nodeType":"ElementaryTypeName","src":"4112:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2591,"mutability":"mutable","name":"b","nameLocation":"4143:1:17","nodeType":"VariableDeclaration","scope":2623,"src":"4129:15:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2590,"name":"string","nodeType":"ElementaryTypeName","src":"4129:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4111:34:17"},"returnParameters":{"id":2595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2623,"src":"4169:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2593,"name":"bool","nodeType":"ElementaryTypeName","src":"4169:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4168:6:17"},"scope":3494,"src":"4097:182:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2641,"nodeType":"Block","src":"4576:64:17","statements":[{"expression":{"arguments":[{"id":2632,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"4603:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4610:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2636,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"4619:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4613:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2634,"name":"bytes","nodeType":"ElementaryTypeName","src":"4613:5:17","typeDescriptions":{}}},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4613:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4626:6:17","memberName":"length","nodeType":"MemberAccess","src":"4613:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2631,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[2642,2673],"referencedDeclaration":2673,"src":"4593:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4593:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2630,"id":2640,"nodeType":"Return","src":"4586:47:17"}]},"documentation":{"id":2624,"nodeType":"StructuredDocumentation","src":"4285:214:17","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2642,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4513:9:17","nodeType":"FunctionDefinition","parameters":{"id":2627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2626,"mutability":"mutable","name":"input","nameLocation":"4537:5:17","nodeType":"VariableDeclaration","scope":2642,"src":"4523:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2625,"name":"string","nodeType":"ElementaryTypeName","src":"4523:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4522:21:17"},"returnParameters":{"id":2630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2642,"src":"4567:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2628,"name":"uint256","nodeType":"ElementaryTypeName","src":"4567:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4566:9:17"},"scope":3494,"src":"4504:136:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2672,"nodeType":"Block","src":"5038:153:17","statements":[{"assignments":[2655,2657],"declarations":[{"constant":false,"id":2655,"mutability":"mutable","name":"success","nameLocation":"5054:7:17","nodeType":"VariableDeclaration","scope":2672,"src":"5049:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2654,"name":"bool","nodeType":"ElementaryTypeName","src":"5049:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2657,"mutability":"mutable","name":"value","nameLocation":"5071:5:17","nodeType":"VariableDeclaration","scope":2672,"src":"5063:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2656,"name":"uint256","nodeType":"ElementaryTypeName","src":"5063:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2663,"initialValue":{"arguments":[{"id":2659,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"5093:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2660,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2647,"src":"5100:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2661,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"5107:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2658,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2694,2731],"referencedDeclaration":2731,"src":"5080:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5080:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5048:63:17"},{"condition":{"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5125:8:17","subExpression":{"id":2664,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"5126:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2669,"nodeType":"IfStatement","src":"5121:41:17","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2666,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"5142:18:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2668,"nodeType":"RevertStatement","src":"5135:27:17"}},{"expression":{"id":2670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"5179:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2653,"id":2671,"nodeType":"Return","src":"5172:12:17"}]},"documentation":{"id":2643,"nodeType":"StructuredDocumentation","src":"4646:287:17","text":" @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2673,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4947:9:17","nodeType":"FunctionDefinition","parameters":{"id":2650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2645,"mutability":"mutable","name":"input","nameLocation":"4971:5:17","nodeType":"VariableDeclaration","scope":2673,"src":"4957:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2644,"name":"string","nodeType":"ElementaryTypeName","src":"4957:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2647,"mutability":"mutable","name":"begin","nameLocation":"4986:5:17","nodeType":"VariableDeclaration","scope":2673,"src":"4978:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2646,"name":"uint256","nodeType":"ElementaryTypeName","src":"4978:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2649,"mutability":"mutable","name":"end","nameLocation":"5001:3:17","nodeType":"VariableDeclaration","scope":2673,"src":"4993:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2648,"name":"uint256","nodeType":"ElementaryTypeName","src":"4993:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4956:49:17"},"returnParameters":{"id":2653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2673,"src":"5029:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2651,"name":"uint256","nodeType":"ElementaryTypeName","src":"5029:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5028:9:17"},"scope":3494,"src":"4938:253:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2693,"nodeType":"Block","src":"5512:83:17","statements":[{"expression":{"arguments":[{"id":2684,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"5558:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5565:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2688,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"5574:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5568:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2686,"name":"bytes","nodeType":"ElementaryTypeName","src":"5568:5:17","typeDescriptions":{}}},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5568:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5581:6:17","memberName":"length","nodeType":"MemberAccess","src":"5568:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2683,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"5529:28:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:59:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2682,"id":2692,"nodeType":"Return","src":"5522:66:17"}]},"documentation":{"id":2674,"nodeType":"StructuredDocumentation","src":"5197:215:17","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2694,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5426:12:17","nodeType":"FunctionDefinition","parameters":{"id":2677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2676,"mutability":"mutable","name":"input","nameLocation":"5453:5:17","nodeType":"VariableDeclaration","scope":2694,"src":"5439:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2675,"name":"string","nodeType":"ElementaryTypeName","src":"5439:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5438:21:17"},"returnParameters":{"id":2682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2679,"mutability":"mutable","name":"success","nameLocation":"5488:7:17","nodeType":"VariableDeclaration","scope":2694,"src":"5483:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2678,"name":"bool","nodeType":"ElementaryTypeName","src":"5483:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2681,"mutability":"mutable","name":"value","nameLocation":"5505:5:17","nodeType":"VariableDeclaration","scope":2694,"src":"5497:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2680,"name":"uint256","nodeType":"ElementaryTypeName","src":"5497:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5482:29:17"},"scope":3494,"src":"5417:178:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2730,"nodeType":"Block","src":"5997:144:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2708,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"6011:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2711,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"6023:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6017:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2709,"name":"bytes","nodeType":"ElementaryTypeName","src":"6017:5:17","typeDescriptions":{}}},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6017:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6030:6:17","memberName":"length","nodeType":"MemberAccess","src":"6017:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6011:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2715,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"6040:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2716,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"6048:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6040:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6011:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2723,"nodeType":"IfStatement","src":"6007:63:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6061:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6068:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2721,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6060:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2707,"id":2722,"nodeType":"Return","src":"6053:17:17"}},{"expression":{"arguments":[{"id":2725,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"6116:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2726,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"6123:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2727,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"6130:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2724,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"6087:28:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6087:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2707,"id":2729,"nodeType":"Return","src":"6080:54:17"}]},"documentation":{"id":2695,"nodeType":"StructuredDocumentation","src":"5601:238:17","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2731,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5853:12:17","nodeType":"FunctionDefinition","parameters":{"id":2702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2697,"mutability":"mutable","name":"input","nameLocation":"5889:5:17","nodeType":"VariableDeclaration","scope":2731,"src":"5875:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2696,"name":"string","nodeType":"ElementaryTypeName","src":"5875:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2699,"mutability":"mutable","name":"begin","nameLocation":"5912:5:17","nodeType":"VariableDeclaration","scope":2731,"src":"5904:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2698,"name":"uint256","nodeType":"ElementaryTypeName","src":"5904:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2701,"mutability":"mutable","name":"end","nameLocation":"5935:3:17","nodeType":"VariableDeclaration","scope":2731,"src":"5927:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2700,"name":"uint256","nodeType":"ElementaryTypeName","src":"5927:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5865:79:17"},"returnParameters":{"id":2707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2704,"mutability":"mutable","name":"success","nameLocation":"5973:7:17","nodeType":"VariableDeclaration","scope":2731,"src":"5968:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2703,"name":"bool","nodeType":"ElementaryTypeName","src":"5968:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2706,"mutability":"mutable","name":"value","nameLocation":"5990:5:17","nodeType":"VariableDeclaration","scope":2731,"src":"5982:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2705,"name":"uint256","nodeType":"ElementaryTypeName","src":"5982:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5967:29:17"},"scope":3494,"src":"5844:297:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2800,"nodeType":"Block","src":"6521:347:17","statements":[{"assignments":[2746],"declarations":[{"constant":false,"id":2746,"mutability":"mutable","name":"buffer","nameLocation":"6544:6:17","nodeType":"VariableDeclaration","scope":2800,"src":"6531:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2745,"name":"bytes","nodeType":"ElementaryTypeName","src":"6531:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2751,"initialValue":{"arguments":[{"id":2749,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"6559:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6553:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2747,"name":"bytes","nodeType":"ElementaryTypeName","src":"6553:5:17","typeDescriptions":{}}},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6553:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6531:34:17"},{"assignments":[2753],"declarations":[{"constant":false,"id":2753,"mutability":"mutable","name":"result","nameLocation":"6584:6:17","nodeType":"VariableDeclaration","scope":2800,"src":"6576:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2752,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2755,"initialValue":{"hexValue":"30","id":2754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6593:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6576:18:17"},{"body":{"id":2794,"nodeType":"Block","src":"6642:189:17","statements":[{"assignments":[2767],"declarations":[{"constant":false,"id":2767,"mutability":"mutable","name":"chr","nameLocation":"6662:3:17","nodeType":"VariableDeclaration","scope":2794,"src":"6656:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2766,"name":"uint8","nodeType":"ElementaryTypeName","src":"6656:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2777,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2772,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"6711:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2773,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"6719:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2771,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"6688:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6688:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6681:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2769,"name":"bytes1","nodeType":"ElementaryTypeName","src":"6681:6:17","typeDescriptions":{}}},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6681:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2768,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"6668:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6668:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"6656:67:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2778,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"6741:3:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6747:1:17","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"6741:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2785,"nodeType":"IfStatement","src":"6737:30:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6758:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6765:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2783,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6757:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2744,"id":2784,"nodeType":"Return","src":"6750:17:17"}},{"expression":{"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2786,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"6781:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6791:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"6781:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2789,"nodeType":"ExpressionStatement","src":"6781:12:17"},{"expression":{"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2790,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"6807:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2791,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"6817:3:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6807:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2793,"nodeType":"ExpressionStatement","src":"6807:13:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2760,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"6628:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2761,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"6632:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6628:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2795,"initializationExpression":{"assignments":[2757],"declarations":[{"constant":false,"id":2757,"mutability":"mutable","name":"i","nameLocation":"6617:1:17","nodeType":"VariableDeclaration","scope":2795,"src":"6609:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2756,"name":"uint256","nodeType":"ElementaryTypeName","src":"6609:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2759,"initialValue":{"id":2758,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"6621:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6609:17:17"},"loopExpression":{"expression":{"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6637:3:17","subExpression":{"id":2763,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"6639:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2765,"nodeType":"ExpressionStatement","src":"6637:3:17"},"nodeType":"ForStatement","src":"6604:227:17"},{"expression":{"components":[{"hexValue":"74727565","id":2796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6848:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2797,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"6854:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2798,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6847:14:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2744,"id":2799,"nodeType":"Return","src":"6840:21:17"}]},"documentation":{"id":2732,"nodeType":"StructuredDocumentation","src":"6147:201:17","text":" @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2801,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6362:28:17","nodeType":"FunctionDefinition","parameters":{"id":2739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2734,"mutability":"mutable","name":"input","nameLocation":"6414:5:17","nodeType":"VariableDeclaration","scope":2801,"src":"6400:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2733,"name":"string","nodeType":"ElementaryTypeName","src":"6400:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2736,"mutability":"mutable","name":"begin","nameLocation":"6437:5:17","nodeType":"VariableDeclaration","scope":2801,"src":"6429:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2735,"name":"uint256","nodeType":"ElementaryTypeName","src":"6429:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2738,"mutability":"mutable","name":"end","nameLocation":"6460:3:17","nodeType":"VariableDeclaration","scope":2801,"src":"6452:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2737,"name":"uint256","nodeType":"ElementaryTypeName","src":"6452:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6390:79:17"},"returnParameters":{"id":2744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2741,"mutability":"mutable","name":"success","nameLocation":"6497:7:17","nodeType":"VariableDeclaration","scope":2801,"src":"6492:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2740,"name":"bool","nodeType":"ElementaryTypeName","src":"6492:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2743,"mutability":"mutable","name":"value","nameLocation":"6514:5:17","nodeType":"VariableDeclaration","scope":2801,"src":"6506:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2742,"name":"uint256","nodeType":"ElementaryTypeName","src":"6506:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6491:29:17"},"scope":3494,"src":"6353:515:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2819,"nodeType":"Block","src":"7165:63:17","statements":[{"expression":{"arguments":[{"id":2810,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"7191:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7198:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2814,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"7207:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7201:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2812,"name":"bytes","nodeType":"ElementaryTypeName","src":"7201:5:17","typeDescriptions":{}}},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7201:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7214:6:17","memberName":"length","nodeType":"MemberAccess","src":"7201:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2809,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2820,2851],"referencedDeclaration":2851,"src":"7182:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7182:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2808,"id":2818,"nodeType":"Return","src":"7175:46:17"}]},"documentation":{"id":2802,"nodeType":"StructuredDocumentation","src":"6874:216:17","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2820,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7104:8:17","nodeType":"FunctionDefinition","parameters":{"id":2805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2804,"mutability":"mutable","name":"input","nameLocation":"7127:5:17","nodeType":"VariableDeclaration","scope":2820,"src":"7113:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2803,"name":"string","nodeType":"ElementaryTypeName","src":"7113:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7112:21:17"},"returnParameters":{"id":2808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2820,"src":"7157:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2806,"name":"int256","nodeType":"ElementaryTypeName","src":"7157:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7156:8:17"},"scope":3494,"src":"7095:133:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2850,"nodeType":"Block","src":"7633:151:17","statements":[{"assignments":[2833,2835],"declarations":[{"constant":false,"id":2833,"mutability":"mutable","name":"success","nameLocation":"7649:7:17","nodeType":"VariableDeclaration","scope":2850,"src":"7644:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2832,"name":"bool","nodeType":"ElementaryTypeName","src":"7644:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2835,"mutability":"mutable","name":"value","nameLocation":"7665:5:17","nodeType":"VariableDeclaration","scope":2850,"src":"7658:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2834,"name":"int256","nodeType":"ElementaryTypeName","src":"7658:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2841,"initialValue":{"arguments":[{"id":2837,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"7686:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2838,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"7693:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2839,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"7700:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2836,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2872,2914],"referencedDeclaration":2914,"src":"7674:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7674:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7643:61:17"},{"condition":{"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7718:8:17","subExpression":{"id":2842,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"7719:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2847,"nodeType":"IfStatement","src":"7714:41:17","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2844,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"7735:18:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7735:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2846,"nodeType":"RevertStatement","src":"7728:27:17"}},{"expression":{"id":2848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"7772:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2831,"id":2849,"nodeType":"Return","src":"7765:12:17"}]},"documentation":{"id":2821,"nodeType":"StructuredDocumentation","src":"7234:296:17","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2851,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7544:8:17","nodeType":"FunctionDefinition","parameters":{"id":2828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2823,"mutability":"mutable","name":"input","nameLocation":"7567:5:17","nodeType":"VariableDeclaration","scope":2851,"src":"7553:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2822,"name":"string","nodeType":"ElementaryTypeName","src":"7553:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2825,"mutability":"mutable","name":"begin","nameLocation":"7582:5:17","nodeType":"VariableDeclaration","scope":2851,"src":"7574:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2824,"name":"uint256","nodeType":"ElementaryTypeName","src":"7574:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2827,"mutability":"mutable","name":"end","nameLocation":"7597:3:17","nodeType":"VariableDeclaration","scope":2851,"src":"7589:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2826,"name":"uint256","nodeType":"ElementaryTypeName","src":"7589:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7552:49:17"},"returnParameters":{"id":2831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2851,"src":"7625:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2829,"name":"int256","nodeType":"ElementaryTypeName","src":"7625:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7624:8:17"},"scope":3494,"src":"7535:249:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2871,"nodeType":"Block","src":"8175:82:17","statements":[{"expression":{"arguments":[{"id":2862,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"8220:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8227:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2866,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"8236:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8230:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2864,"name":"bytes","nodeType":"ElementaryTypeName","src":"8230:5:17","typeDescriptions":{}}},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8230:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8243:6:17","memberName":"length","nodeType":"MemberAccess","src":"8230:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2861,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"8192:27:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8192:58:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2860,"id":2870,"nodeType":"Return","src":"8185:65:17"}]},"documentation":{"id":2852,"nodeType":"StructuredDocumentation","src":"7790:287:17","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2872,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8091:11:17","nodeType":"FunctionDefinition","parameters":{"id":2855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2854,"mutability":"mutable","name":"input","nameLocation":"8117:5:17","nodeType":"VariableDeclaration","scope":2872,"src":"8103:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2853,"name":"string","nodeType":"ElementaryTypeName","src":"8103:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8102:21:17"},"returnParameters":{"id":2860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2857,"mutability":"mutable","name":"success","nameLocation":"8152:7:17","nodeType":"VariableDeclaration","scope":2872,"src":"8147:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2856,"name":"bool","nodeType":"ElementaryTypeName","src":"8147:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2859,"mutability":"mutable","name":"value","nameLocation":"8168:5:17","nodeType":"VariableDeclaration","scope":2872,"src":"8161:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2858,"name":"int256","nodeType":"ElementaryTypeName","src":"8161:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8146:28:17"},"scope":3494,"src":"8082:175:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2877,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8288:14:17","nodeType":"VariableDeclaration","scope":3494,"src":"8263:50:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2873,"name":"uint256","nodeType":"ElementaryTypeName","src":"8263:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8305:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8310:3:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8305:8:17","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2913,"nodeType":"Block","src":"8779:143:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2891,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"8793:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2894,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"8805:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8799:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2892,"name":"bytes","nodeType":"ElementaryTypeName","src":"8799:5:17","typeDescriptions":{}}},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8799:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8812:6:17","memberName":"length","nodeType":"MemberAccess","src":"8799:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8793:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2898,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2882,"src":"8822:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2899,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"8830:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8822:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8793:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2906,"nodeType":"IfStatement","src":"8789:63:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8843:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8850:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2904,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8842:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2890,"id":2905,"nodeType":"Return","src":"8835:17:17"}},{"expression":{"arguments":[{"id":2908,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"8897:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2909,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2882,"src":"8904:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2910,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"8911:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2907,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"8869:27:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8869:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2890,"id":2912,"nodeType":"Return","src":"8862:53:17"}]},"documentation":{"id":2878,"nodeType":"StructuredDocumentation","src":"8320:303:17","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2914,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8637:11:17","nodeType":"FunctionDefinition","parameters":{"id":2885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2880,"mutability":"mutable","name":"input","nameLocation":"8672:5:17","nodeType":"VariableDeclaration","scope":2914,"src":"8658:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2879,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2882,"mutability":"mutable","name":"begin","nameLocation":"8695:5:17","nodeType":"VariableDeclaration","scope":2914,"src":"8687:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2881,"name":"uint256","nodeType":"ElementaryTypeName","src":"8687:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2884,"mutability":"mutable","name":"end","nameLocation":"8718:3:17","nodeType":"VariableDeclaration","scope":2914,"src":"8710:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2883,"name":"uint256","nodeType":"ElementaryTypeName","src":"8710:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8648:79:17"},"returnParameters":{"id":2890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2887,"mutability":"mutable","name":"success","nameLocation":"8756:7:17","nodeType":"VariableDeclaration","scope":2914,"src":"8751:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2886,"name":"bool","nodeType":"ElementaryTypeName","src":"8751:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2889,"mutability":"mutable","name":"value","nameLocation":"8772:5:17","nodeType":"VariableDeclaration","scope":2914,"src":"8765:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2888,"name":"int256","nodeType":"ElementaryTypeName","src":"8765:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8750:28:17"},"scope":3494,"src":"8628:294:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3034,"nodeType":"Block","src":"9299:812:17","statements":[{"assignments":[2929],"declarations":[{"constant":false,"id":2929,"mutability":"mutable","name":"buffer","nameLocation":"9322:6:17","nodeType":"VariableDeclaration","scope":3034,"src":"9309:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2928,"name":"bytes","nodeType":"ElementaryTypeName","src":"9309:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2934,"initialValue":{"arguments":[{"id":2932,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"9337:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9331:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2930,"name":"bytes","nodeType":"ElementaryTypeName","src":"9331:5:17","typeDescriptions":{}}},"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9331:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9309:34:17"},{"assignments":[2936],"declarations":[{"constant":false,"id":2936,"mutability":"mutable","name":"sign","nameLocation":"9407:4:17","nodeType":"VariableDeclaration","scope":3034,"src":"9400:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2935,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9400:6:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2952,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2937,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"9414:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2938,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"9423:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9414:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2947,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"9471:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2948,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"9479:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2946,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"9448:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9448:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9441:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2944,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9441:6:17","typeDescriptions":{}}},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9441:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9414:72:17","trueExpression":{"arguments":[{"hexValue":"30","id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9436:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9429:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2940,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9429:6:17","typeDescriptions":{}}},"id":2943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9429:9:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9400:86:17"},{"assignments":[2954],"declarations":[{"constant":false,"id":2954,"mutability":"mutable","name":"positiveSign","nameLocation":"9572:12:17","nodeType":"VariableDeclaration","scope":3034,"src":"9567:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2953,"name":"bool","nodeType":"ElementaryTypeName","src":"9567:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2961,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2955,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"9587:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9602:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9595:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2956,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9595:6:17","typeDescriptions":{}}},"id":2959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9595:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9587:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9567:39:17"},{"assignments":[2963],"declarations":[{"constant":false,"id":2963,"mutability":"mutable","name":"negativeSign","nameLocation":"9621:12:17","nodeType":"VariableDeclaration","scope":3034,"src":"9616:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2962,"name":"bool","nodeType":"ElementaryTypeName","src":"9616:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2970,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2964,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"9636:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9651:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9644:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2965,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9644:6:17","typeDescriptions":{}}},"id":2968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9644:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9636:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9616:39:17"},{"assignments":[2972],"declarations":[{"constant":false,"id":2972,"mutability":"mutable","name":"offset","nameLocation":"9673:6:17","nodeType":"VariableDeclaration","scope":3034,"src":"9665:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2971,"name":"uint256","nodeType":"ElementaryTypeName","src":"9665:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2979,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2973,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"9683:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2974,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"9699:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9683:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2976,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9682:30:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9713:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6900,"src":"9682:37:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9665:56:17"},{"assignments":[2981,2983],"declarations":[{"constant":false,"id":2981,"mutability":"mutable","name":"absSuccess","nameLocation":"9738:10:17","nodeType":"VariableDeclaration","scope":3034,"src":"9733:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2980,"name":"bool","nodeType":"ElementaryTypeName","src":"9733:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2983,"mutability":"mutable","name":"absValue","nameLocation":"9758:8:17","nodeType":"VariableDeclaration","scope":3034,"src":"9750:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2982,"name":"uint256","nodeType":"ElementaryTypeName","src":"9750:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2991,"initialValue":{"arguments":[{"id":2985,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"9783:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2986,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"9790:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2987,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"9798:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2989,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"9806:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2984,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2694,2731],"referencedDeclaration":2731,"src":"9770:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9770:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9732:78:17"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2992,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"9825:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2993,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"9839:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2994,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"9850:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9825:39:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3012,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"9967:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3013,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"9981:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3015,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"9997:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3016,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"10009:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9997:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:56:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10095:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10102:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3030,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10094:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2927,"id":3031,"nodeType":"Return","src":"10087:17:17"},"id":3032,"nodeType":"IfStatement","src":"9963:141:17","trueBody":{"id":3027,"nodeType":"Block","src":"10025:56:17","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10047:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":3022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10058:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3021,"name":"int256","nodeType":"ElementaryTypeName","src":"10058:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":3020,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10053:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10053:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":3024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10066:3:17","memberName":"min","nodeType":"MemberAccess","src":"10053:16:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3025,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10046:24:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2927,"id":3026,"nodeType":"Return","src":"10039:31:17"}]}},"id":3033,"nodeType":"IfStatement","src":"9821:283:17","trueBody":{"id":3011,"nodeType":"Block","src":"9866:91:17","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9888:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2998,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"9894:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":3006,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"9936:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9929:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3004,"name":"int256","nodeType":"ElementaryTypeName","src":"9929:6:17","typeDescriptions":{}}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9929:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9894:51:17","trueExpression":{"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"9909:17:17","subExpression":{"arguments":[{"id":3001,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"9917:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9910:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2999,"name":"int256","nodeType":"ElementaryTypeName","src":"9910:6:17","typeDescriptions":{}}},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9910:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3009,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9887:59:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2927,"id":3010,"nodeType":"Return","src":"9880:66:17"}]}}]},"documentation":{"id":2915,"nodeType":"StructuredDocumentation","src":"8928:200:17","text":" @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3035,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9142:27:17","nodeType":"FunctionDefinition","parameters":{"id":2922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2917,"mutability":"mutable","name":"input","nameLocation":"9193:5:17","nodeType":"VariableDeclaration","scope":3035,"src":"9179:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2916,"name":"string","nodeType":"ElementaryTypeName","src":"9179:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2919,"mutability":"mutable","name":"begin","nameLocation":"9216:5:17","nodeType":"VariableDeclaration","scope":3035,"src":"9208:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2918,"name":"uint256","nodeType":"ElementaryTypeName","src":"9208:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2921,"mutability":"mutable","name":"end","nameLocation":"9239:3:17","nodeType":"VariableDeclaration","scope":3035,"src":"9231:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2920,"name":"uint256","nodeType":"ElementaryTypeName","src":"9231:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9169:79:17"},"returnParameters":{"id":2927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2924,"mutability":"mutable","name":"success","nameLocation":"9276:7:17","nodeType":"VariableDeclaration","scope":3035,"src":"9271:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2923,"name":"bool","nodeType":"ElementaryTypeName","src":"9271:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2926,"mutability":"mutable","name":"value","nameLocation":"9292:5:17","nodeType":"VariableDeclaration","scope":3035,"src":"9285:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2925,"name":"int256","nodeType":"ElementaryTypeName","src":"9285:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9270:28:17"},"scope":3494,"src":"9133:978:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3053,"nodeType":"Block","src":"10456:67:17","statements":[{"expression":{"arguments":[{"id":3044,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"10486:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10493:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3048,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"10502:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10496:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3046,"name":"bytes","nodeType":"ElementaryTypeName","src":"10496:5:17","typeDescriptions":{}}},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10496:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10509:6:17","memberName":"length","nodeType":"MemberAccess","src":"10496:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3043,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[3054,3085],"referencedDeclaration":3085,"src":"10473:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10473:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3042,"id":3052,"nodeType":"Return","src":"10466:50:17"}]},"documentation":{"id":3036,"nodeType":"StructuredDocumentation","src":"10117:259:17","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3054,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10390:12:17","nodeType":"FunctionDefinition","parameters":{"id":3039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3038,"mutability":"mutable","name":"input","nameLocation":"10417:5:17","nodeType":"VariableDeclaration","scope":3054,"src":"10403:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3037,"name":"string","nodeType":"ElementaryTypeName","src":"10403:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10402:21:17"},"returnParameters":{"id":3042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3054,"src":"10447:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3040,"name":"uint256","nodeType":"ElementaryTypeName","src":"10447:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10446:9:17"},"scope":3494,"src":"10381:142:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3084,"nodeType":"Block","src":"10937:156:17","statements":[{"assignments":[3067,3069],"declarations":[{"constant":false,"id":3067,"mutability":"mutable","name":"success","nameLocation":"10953:7:17","nodeType":"VariableDeclaration","scope":3084,"src":"10948:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3066,"name":"bool","nodeType":"ElementaryTypeName","src":"10948:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3069,"mutability":"mutable","name":"value","nameLocation":"10970:5:17","nodeType":"VariableDeclaration","scope":3084,"src":"10962:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3068,"name":"uint256","nodeType":"ElementaryTypeName","src":"10962:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3075,"initialValue":{"arguments":[{"id":3071,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"10995:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3072,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"11002:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3073,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"11009:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3070,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[3106,3143],"referencedDeclaration":3143,"src":"10979:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10979:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10947:66:17"},{"condition":{"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11027:8:17","subExpression":{"id":3076,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3067,"src":"11028:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3081,"nodeType":"IfStatement","src":"11023:41:17","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3078,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"11044:18:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11044:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3080,"nodeType":"RevertStatement","src":"11037:27:17"}},{"expression":{"id":3082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"11081:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3065,"id":3083,"nodeType":"Return","src":"11074:12:17"}]},"documentation":{"id":3055,"nodeType":"StructuredDocumentation","src":"10529:300:17","text":" @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3085,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10843:12:17","nodeType":"FunctionDefinition","parameters":{"id":3062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3057,"mutability":"mutable","name":"input","nameLocation":"10870:5:17","nodeType":"VariableDeclaration","scope":3085,"src":"10856:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3056,"name":"string","nodeType":"ElementaryTypeName","src":"10856:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3059,"mutability":"mutable","name":"begin","nameLocation":"10885:5:17","nodeType":"VariableDeclaration","scope":3085,"src":"10877:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3058,"name":"uint256","nodeType":"ElementaryTypeName","src":"10877:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3061,"mutability":"mutable","name":"end","nameLocation":"10900:3:17","nodeType":"VariableDeclaration","scope":3085,"src":"10892:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3060,"name":"uint256","nodeType":"ElementaryTypeName","src":"10892:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10855:49:17"},"returnParameters":{"id":3065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3085,"src":"10928:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3063,"name":"uint256","nodeType":"ElementaryTypeName","src":"10928:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10927:9:17"},"scope":3494,"src":"10834:259:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3105,"nodeType":"Block","src":"11420:86:17","statements":[{"expression":{"arguments":[{"id":3096,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"11469:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11476:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3100,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"11485:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11479:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3098,"name":"bytes","nodeType":"ElementaryTypeName","src":"11479:5:17","typeDescriptions":{}}},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11479:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11492:6:17","memberName":"length","nodeType":"MemberAccess","src":"11479:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3095,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"11437:31:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11437:62:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3094,"id":3104,"nodeType":"Return","src":"11430:69:17"}]},"documentation":{"id":3086,"nodeType":"StructuredDocumentation","src":"11099:218:17","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3106,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11331:15:17","nodeType":"FunctionDefinition","parameters":{"id":3089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3088,"mutability":"mutable","name":"input","nameLocation":"11361:5:17","nodeType":"VariableDeclaration","scope":3106,"src":"11347:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3087,"name":"string","nodeType":"ElementaryTypeName","src":"11347:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11346:21:17"},"returnParameters":{"id":3094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3091,"mutability":"mutable","name":"success","nameLocation":"11396:7:17","nodeType":"VariableDeclaration","scope":3106,"src":"11391:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3090,"name":"bool","nodeType":"ElementaryTypeName","src":"11391:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3093,"mutability":"mutable","name":"value","nameLocation":"11413:5:17","nodeType":"VariableDeclaration","scope":3106,"src":"11405:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3092,"name":"uint256","nodeType":"ElementaryTypeName","src":"11405:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11390:29:17"},"scope":3494,"src":"11322:184:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3142,"nodeType":"Block","src":"11914:147:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3120,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"11928:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3123,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"11940:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11934:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3121,"name":"bytes","nodeType":"ElementaryTypeName","src":"11934:5:17","typeDescriptions":{}}},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11934:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11947:6:17","memberName":"length","nodeType":"MemberAccess","src":"11934:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11928:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3127,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"11957:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3128,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"11965:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11957:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11928:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3135,"nodeType":"IfStatement","src":"11924:63:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11978:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11985:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3133,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"11977:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3119,"id":3134,"nodeType":"Return","src":"11970:17:17"}},{"expression":{"arguments":[{"id":3137,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"12036:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3138,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"12043:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3139,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"12050:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3136,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"12004:31:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3119,"id":3141,"nodeType":"Return","src":"11997:57:17"}]},"documentation":{"id":3107,"nodeType":"StructuredDocumentation","src":"11512:241:17","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3143,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11767:15:17","nodeType":"FunctionDefinition","parameters":{"id":3114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3109,"mutability":"mutable","name":"input","nameLocation":"11806:5:17","nodeType":"VariableDeclaration","scope":3143,"src":"11792:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3108,"name":"string","nodeType":"ElementaryTypeName","src":"11792:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3111,"mutability":"mutable","name":"begin","nameLocation":"11829:5:17","nodeType":"VariableDeclaration","scope":3143,"src":"11821:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3110,"name":"uint256","nodeType":"ElementaryTypeName","src":"11821:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3113,"mutability":"mutable","name":"end","nameLocation":"11852:3:17","nodeType":"VariableDeclaration","scope":3143,"src":"11844:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3112,"name":"uint256","nodeType":"ElementaryTypeName","src":"11844:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11782:79:17"},"returnParameters":{"id":3119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3116,"mutability":"mutable","name":"success","nameLocation":"11890:7:17","nodeType":"VariableDeclaration","scope":3143,"src":"11885:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3115,"name":"bool","nodeType":"ElementaryTypeName","src":"11885:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3118,"mutability":"mutable","name":"value","nameLocation":"11907:5:17","nodeType":"VariableDeclaration","scope":3143,"src":"11899:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3117,"name":"uint256","nodeType":"ElementaryTypeName","src":"11899:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11884:29:17"},"scope":3494,"src":"11758:303:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3245,"nodeType":"Block","src":"12447:880:17","statements":[{"assignments":[3158],"declarations":[{"constant":false,"id":3158,"mutability":"mutable","name":"buffer","nameLocation":"12470:6:17","nodeType":"VariableDeclaration","scope":3245,"src":"12457:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3157,"name":"bytes","nodeType":"ElementaryTypeName","src":"12457:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3163,"initialValue":{"arguments":[{"id":3161,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"12485:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12479:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3159,"name":"bytes","nodeType":"ElementaryTypeName","src":"12479:5:17","typeDescriptions":{}}},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12479:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12457:34:17"},{"assignments":[3165],"declarations":[{"constant":false,"id":3165,"mutability":"mutable","name":"hasPrefix","nameLocation":"12544:9:17","nodeType":"VariableDeclaration","scope":3245,"src":"12539:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3164,"name":"bool","nodeType":"ElementaryTypeName","src":"12539:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3185,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3166,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"12557:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3167,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"12563:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12571:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12563:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12557:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3171,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12556:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3175,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"12607:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3176,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"12615:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3174,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"12584:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12584:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12577:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3172,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12577:6:17","typeDescriptions":{}}},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12577:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12633:4:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12626:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3179,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12626:6:17","typeDescriptions":{}}},"id":3182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12626:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12577:61:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12556:82:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12539:99:17"},{"assignments":[3187],"declarations":[{"constant":false,"id":3187,"mutability":"mutable","name":"offset","nameLocation":"12727:6:17","nodeType":"VariableDeclaration","scope":3245,"src":"12719:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3186,"name":"uint256","nodeType":"ElementaryTypeName","src":"12719:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3193,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3188,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"12736:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12746:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6900,"src":"12736:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12736:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12757:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12736:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12719:39:17"},{"assignments":[3195],"declarations":[{"constant":false,"id":3195,"mutability":"mutable","name":"result","nameLocation":"12777:6:17","nodeType":"VariableDeclaration","scope":3245,"src":"12769:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3194,"name":"uint256","nodeType":"ElementaryTypeName","src":"12769:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3197,"initialValue":{"hexValue":"30","id":3196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12786:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12769:18:17"},{"body":{"id":3239,"nodeType":"Block","src":"12844:446:17","statements":[{"assignments":[3211],"declarations":[{"constant":false,"id":3211,"mutability":"mutable","name":"chr","nameLocation":"12864:3:17","nodeType":"VariableDeclaration","scope":3239,"src":"12858:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3210,"name":"uint8","nodeType":"ElementaryTypeName","src":"12858:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3221,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3216,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"12913:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3217,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"12921:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3215,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"12890:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12890:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3213,"name":"bytes1","nodeType":"ElementaryTypeName","src":"12883:6:17","typeDescriptions":{}}},"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3212,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"12870:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12870:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"12858:67:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3222,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"12943:3:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":3223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12949:2:17","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"12943:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3229,"nodeType":"IfStatement","src":"12939:31:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12961:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12968:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3227,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3156,"id":3228,"nodeType":"Return","src":"12953:17:17"}},{"expression":{"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3230,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"12984:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":3231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12994:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12984:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3233,"nodeType":"ExpressionStatement","src":"12984:12:17"},{"id":3238,"nodeType":"UncheckedBlock","src":"13010:270:17","statements":[{"expression":{"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3234,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"13252:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3235,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"13262:3:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13252:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3237,"nodeType":"ExpressionStatement","src":"13252:13:17"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3204,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"12830:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3205,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"12834:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12830:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3240,"initializationExpression":{"assignments":[3199],"declarations":[{"constant":false,"id":3199,"mutability":"mutable","name":"i","nameLocation":"12810:1:17","nodeType":"VariableDeclaration","scope":3240,"src":"12802:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3198,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3203,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3200,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"12814:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3201,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"12822:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12814:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12802:26:17"},"loopExpression":{"expression":{"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"12839:3:17","subExpression":{"id":3207,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"12841:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3209,"nodeType":"ExpressionStatement","src":"12839:3:17"},"nodeType":"ForStatement","src":"12797:493:17"},{"expression":{"components":[{"hexValue":"74727565","id":3241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13307:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3242,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"13313:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3243,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13306:14:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3156,"id":3244,"nodeType":"Return","src":"13299:21:17"}]},"documentation":{"id":3144,"nodeType":"StructuredDocumentation","src":"12067:204:17","text":" @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3246,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12285:31:17","nodeType":"FunctionDefinition","parameters":{"id":3151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3146,"mutability":"mutable","name":"input","nameLocation":"12340:5:17","nodeType":"VariableDeclaration","scope":3246,"src":"12326:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3145,"name":"string","nodeType":"ElementaryTypeName","src":"12326:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3148,"mutability":"mutable","name":"begin","nameLocation":"12363:5:17","nodeType":"VariableDeclaration","scope":3246,"src":"12355:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3147,"name":"uint256","nodeType":"ElementaryTypeName","src":"12355:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3150,"mutability":"mutable","name":"end","nameLocation":"12386:3:17","nodeType":"VariableDeclaration","scope":3246,"src":"12378:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3149,"name":"uint256","nodeType":"ElementaryTypeName","src":"12378:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12316:79:17"},"returnParameters":{"id":3156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3153,"mutability":"mutable","name":"success","nameLocation":"12423:7:17","nodeType":"VariableDeclaration","scope":3246,"src":"12418:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3152,"name":"bool","nodeType":"ElementaryTypeName","src":"12418:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3155,"mutability":"mutable","name":"value","nameLocation":"12440:5:17","nodeType":"VariableDeclaration","scope":3246,"src":"12432:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3154,"name":"uint256","nodeType":"ElementaryTypeName","src":"12432:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12417:29:17"},"scope":3494,"src":"12276:1051:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3264,"nodeType":"Block","src":"13625:67:17","statements":[{"expression":{"arguments":[{"id":3255,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"13655:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13662:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3259,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"13671:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13665:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3257,"name":"bytes","nodeType":"ElementaryTypeName","src":"13665:5:17","typeDescriptions":{}}},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13665:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13678:6:17","memberName":"length","nodeType":"MemberAccess","src":"13665:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3254,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[3265,3296],"referencedDeclaration":3296,"src":"13642:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13642:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3253,"id":3263,"nodeType":"Return","src":"13635:50:17"}]},"documentation":{"id":3247,"nodeType":"StructuredDocumentation","src":"13333:212:17","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3265,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13559:12:17","nodeType":"FunctionDefinition","parameters":{"id":3250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3249,"mutability":"mutable","name":"input","nameLocation":"13586:5:17","nodeType":"VariableDeclaration","scope":3265,"src":"13572:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3248,"name":"string","nodeType":"ElementaryTypeName","src":"13572:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13571:21:17"},"returnParameters":{"id":3253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3265,"src":"13616:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3251,"name":"address","nodeType":"ElementaryTypeName","src":"13616:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13615:9:17"},"scope":3494,"src":"13550:142:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3295,"nodeType":"Block","src":"14058:165:17","statements":[{"assignments":[3278,3280],"declarations":[{"constant":false,"id":3278,"mutability":"mutable","name":"success","nameLocation":"14074:7:17","nodeType":"VariableDeclaration","scope":3295,"src":"14069:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3277,"name":"bool","nodeType":"ElementaryTypeName","src":"14069:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3280,"mutability":"mutable","name":"value","nameLocation":"14091:5:17","nodeType":"VariableDeclaration","scope":3295,"src":"14083:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3279,"name":"address","nodeType":"ElementaryTypeName","src":"14083:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3286,"initialValue":{"arguments":[{"id":3282,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"14116:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3283,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"14123:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3284,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"14130:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3281,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3317,3421],"referencedDeclaration":3421,"src":"14100:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14100:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14068:66:17"},{"condition":{"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14148:8:17","subExpression":{"id":3287,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"14149:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3292,"nodeType":"IfStatement","src":"14144:50:17","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3289,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"14165:27:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14165:29:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3291,"nodeType":"RevertStatement","src":"14158:36:17"}},{"expression":{"id":3293,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"14211:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3276,"id":3294,"nodeType":"Return","src":"14204:12:17"}]},"documentation":{"id":3266,"nodeType":"StructuredDocumentation","src":"13698:252:17","text":" @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3296,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:17","nodeType":"FunctionDefinition","parameters":{"id":3273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3268,"mutability":"mutable","name":"input","nameLocation":"13991:5:17","nodeType":"VariableDeclaration","scope":3296,"src":"13977:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3267,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3270,"mutability":"mutable","name":"begin","nameLocation":"14006:5:17","nodeType":"VariableDeclaration","scope":3296,"src":"13998:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3269,"name":"uint256","nodeType":"ElementaryTypeName","src":"13998:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3272,"mutability":"mutable","name":"end","nameLocation":"14021:3:17","nodeType":"VariableDeclaration","scope":3296,"src":"14013:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3271,"name":"uint256","nodeType":"ElementaryTypeName","src":"14013:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13976:49:17"},"returnParameters":{"id":3276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3296,"src":"14049:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3274,"name":"address","nodeType":"ElementaryTypeName","src":"14049:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14048:9:17"},"scope":3494,"src":"13955:268:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3316,"nodeType":"Block","src":"14523:70:17","statements":[{"expression":{"arguments":[{"id":3307,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"14556:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14563:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3311,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"14572:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14566:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3309,"name":"bytes","nodeType":"ElementaryTypeName","src":"14566:5:17","typeDescriptions":{}}},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14566:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14579:6:17","memberName":"length","nodeType":"MemberAccess","src":"14566:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3306,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3317,3421],"referencedDeclaration":3421,"src":"14540:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14540:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3305,"id":3315,"nodeType":"Return","src":"14533:53:17"}]},"documentation":{"id":3297,"nodeType":"StructuredDocumentation","src":"14229:191:17","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress} requirements."},"id":3317,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14434:15:17","nodeType":"FunctionDefinition","parameters":{"id":3300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3299,"mutability":"mutable","name":"input","nameLocation":"14464:5:17","nodeType":"VariableDeclaration","scope":3317,"src":"14450:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3298,"name":"string","nodeType":"ElementaryTypeName","src":"14450:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14449:21:17"},"returnParameters":{"id":3305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3302,"mutability":"mutable","name":"success","nameLocation":"14499:7:17","nodeType":"VariableDeclaration","scope":3317,"src":"14494:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3301,"name":"bool","nodeType":"ElementaryTypeName","src":"14494:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3304,"mutability":"mutable","name":"value","nameLocation":"14516:5:17","nodeType":"VariableDeclaration","scope":3317,"src":"14508:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3303,"name":"address","nodeType":"ElementaryTypeName","src":"14508:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14493:29:17"},"scope":3494,"src":"14425:168:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3420,"nodeType":"Block","src":"14963:733:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3331,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"14977:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3334,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"14989:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14983:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3332,"name":"bytes","nodeType":"ElementaryTypeName","src":"14983:5:17","typeDescriptions":{}}},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14983:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14996:6:17","memberName":"length","nodeType":"MemberAccess","src":"14983:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14977:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3338,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"15006:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3339,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"15014:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15006:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14977:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3349,"nodeType":"IfStatement","src":"14973:72:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15027:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15042:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15034:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3343,"name":"address","nodeType":"ElementaryTypeName","src":"15034:7:17","typeDescriptions":{}}},"id":3346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15034:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3347,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15026:19:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3330,"id":3348,"nodeType":"Return","src":"15019:26:17"}},{"assignments":[3351],"declarations":[{"constant":false,"id":3351,"mutability":"mutable","name":"hasPrefix","nameLocation":"15061:9:17","nodeType":"VariableDeclaration","scope":3420,"src":"15056:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3350,"name":"bool","nodeType":"ElementaryTypeName","src":"15056:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3374,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3352,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"15074:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3353,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"15080:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15088:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15080:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15074:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3357,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15073:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":3363,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"15130:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15124:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3361,"name":"bytes","nodeType":"ElementaryTypeName","src":"15124:5:17","typeDescriptions":{}}},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15124:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3365,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"15138:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3360,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"15101:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15101:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15094:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3358,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15094:6:17","typeDescriptions":{}}},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15094:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15156:4:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15149:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3368,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15149:6:17","typeDescriptions":{}}},"id":3371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15149:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15094:67:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15073:88:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15056:105:17"},{"assignments":[3376],"declarations":[{"constant":false,"id":3376,"mutability":"mutable","name":"expectedLength","nameLocation":"15250:14:17","nodeType":"VariableDeclaration","scope":3420,"src":"15242:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3375,"name":"uint256","nodeType":"ElementaryTypeName","src":"15242:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3384,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":3377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15267:2:17","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3378,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"15272:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15282:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6900,"src":"15272:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15272:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15293:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15272:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15267:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15242:52:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3385,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"15359:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3386,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"15365:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3388,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"15374:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3418,"nodeType":"Block","src":"15639:51:17","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15661:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15676:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15668:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3412,"name":"address","nodeType":"ElementaryTypeName","src":"15668:7:17","typeDescriptions":{}}},"id":3415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15668:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3416,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15660:19:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3330,"id":3417,"nodeType":"Return","src":"15653:26:17"}]},"id":3419,"nodeType":"IfStatement","src":"15355:335:17","trueBody":{"id":3410,"nodeType":"Block","src":"15390:243:17","statements":[{"assignments":[3391,3393],"declarations":[{"constant":false,"id":3391,"mutability":"mutable","name":"s","nameLocation":"15511:1:17","nodeType":"VariableDeclaration","scope":3410,"src":"15506:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3390,"name":"bool","nodeType":"ElementaryTypeName","src":"15506:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3393,"mutability":"mutable","name":"v","nameLocation":"15522:1:17","nodeType":"VariableDeclaration","scope":3410,"src":"15514:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3392,"name":"uint256","nodeType":"ElementaryTypeName","src":"15514:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3399,"initialValue":{"arguments":[{"id":3395,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"15559:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3396,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"15566:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3397,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"15573:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3394,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"15527:31:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15527:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15505:72:17"},{"expression":{"components":[{"id":3400,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"15599:1:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":3405,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"15618:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15610:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3403,"name":"uint160","nodeType":"ElementaryTypeName","src":"15610:7:17","typeDescriptions":{}}},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15610:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15602:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3401,"name":"address","nodeType":"ElementaryTypeName","src":"15602:7:17","typeDescriptions":{}}},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15602:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3408,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15598:24:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3330,"id":3409,"nodeType":"Return","src":"15591:31:17"}]}}]},"documentation":{"id":3318,"nodeType":"StructuredDocumentation","src":"14599:203:17","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress} requirements."},"id":3421,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14816:15:17","nodeType":"FunctionDefinition","parameters":{"id":3325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3320,"mutability":"mutable","name":"input","nameLocation":"14855:5:17","nodeType":"VariableDeclaration","scope":3421,"src":"14841:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3319,"name":"string","nodeType":"ElementaryTypeName","src":"14841:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3322,"mutability":"mutable","name":"begin","nameLocation":"14878:5:17","nodeType":"VariableDeclaration","scope":3421,"src":"14870:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3321,"name":"uint256","nodeType":"ElementaryTypeName","src":"14870:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3324,"mutability":"mutable","name":"end","nameLocation":"14901:3:17","nodeType":"VariableDeclaration","scope":3421,"src":"14893:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3323,"name":"uint256","nodeType":"ElementaryTypeName","src":"14893:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14831:79:17"},"returnParameters":{"id":3330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3327,"mutability":"mutable","name":"success","nameLocation":"14939:7:17","nodeType":"VariableDeclaration","scope":3421,"src":"14934:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3326,"name":"bool","nodeType":"ElementaryTypeName","src":"14934:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3329,"mutability":"mutable","name":"value","nameLocation":"14956:5:17","nodeType":"VariableDeclaration","scope":3421,"src":"14948:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3328,"name":"address","nodeType":"ElementaryTypeName","src":"14948:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14933:29:17"},"scope":3494,"src":"14807:889:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3480,"nodeType":"Block","src":"15765:461:17","statements":[{"assignments":[3429],"declarations":[{"constant":false,"id":3429,"mutability":"mutable","name":"value","nameLocation":"15781:5:17","nodeType":"VariableDeclaration","scope":3480,"src":"15775:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3428,"name":"uint8","nodeType":"ElementaryTypeName","src":"15775:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3434,"initialValue":{"arguments":[{"id":3432,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"15795:3:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15789:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3430,"name":"uint8","nodeType":"ElementaryTypeName","src":"15789:5:17","typeDescriptions":{}}},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15789:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"15775:24:17"},{"id":3477,"nodeType":"UncheckedBlock","src":"15959:238:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"15987:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":3436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15995:2:17","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"15987:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"16001:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":3439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16009:2:17","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16001:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15987:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"16047:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16055:2:17","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16047:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"16061:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":3450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16069:3:17","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16061:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16047:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"16108:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":3458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16116:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16108:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"16122:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":3461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16130:2:17","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16122:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16108:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":3470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16176:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3469,"name":"uint8","nodeType":"ElementaryTypeName","src":"16176:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3468,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16171:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16171:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16183:3:17","memberName":"max","nodeType":"MemberAccess","src":"16171:15:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3427,"id":3473,"nodeType":"Return","src":"16164:22:17"},"id":3474,"nodeType":"IfStatement","src":"16104:82:17","trueBody":{"expression":{"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"16134:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":3465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16143:2:17","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16134:11:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3467,"nodeType":"ExpressionStatement","src":"16134:11:17"}},"id":3475,"nodeType":"IfStatement","src":"16043:143:17","trueBody":{"expression":{"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"16074:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":3454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16083:2:17","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16074:11:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3456,"nodeType":"ExpressionStatement","src":"16074:11:17"}},"id":3476,"nodeType":"IfStatement","src":"15983:203:17","trueBody":{"expression":{"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"16013:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":3443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16022:2:17","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16013:11:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3445,"nodeType":"ExpressionStatement","src":"16013:11:17"}}]},{"expression":{"id":3478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"16214:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3427,"id":3479,"nodeType":"Return","src":"16207:12:17"}]},"id":3481,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"15711:12:17","nodeType":"FunctionDefinition","parameters":{"id":3424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3423,"mutability":"mutable","name":"chr","nameLocation":"15731:3:17","nodeType":"VariableDeclaration","scope":3481,"src":"15724:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3422,"name":"bytes1","nodeType":"ElementaryTypeName","src":"15724:6:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"15723:12:17"},"returnParameters":{"id":3427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3481,"src":"15758:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3425,"name":"uint8","nodeType":"ElementaryTypeName","src":"15758:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"15757:7:17"},"scope":3494,"src":"15702:524:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3492,"nodeType":"Block","src":"16611:225:17","statements":[{"AST":{"nodeType":"YulBlock","src":"16760:70:17","statements":[{"nodeType":"YulAssignment","src":"16774:46:17","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"16793:6:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16805:4:17","type":"","value":"0x20"},{"name":"offset","nodeType":"YulIdentifier","src":"16811:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16801:3:17"},"nodeType":"YulFunctionCall","src":"16801:17:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16789:3:17"},"nodeType":"YulFunctionCall","src":"16789:30:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16783:5:17"},"nodeType":"YulFunctionCall","src":"16783:37:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16774:5:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3484,"isOffset":false,"isSlot":false,"src":"16793:6:17","valueSize":1},{"declaration":3486,"isOffset":false,"isSlot":false,"src":"16811:6:17","valueSize":1},{"declaration":3489,"isOffset":false,"isSlot":false,"src":"16774:5:17","valueSize":1}],"flags":["memory-safe"],"id":3491,"nodeType":"InlineAssembly","src":"16735:95:17"}]},"documentation":{"id":3482,"nodeType":"StructuredDocumentation","src":"16232:268:17","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":3493,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"16514:22:17","nodeType":"FunctionDefinition","parameters":{"id":3487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3484,"mutability":"mutable","name":"buffer","nameLocation":"16550:6:17","nodeType":"VariableDeclaration","scope":3493,"src":"16537:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3483,"name":"bytes","nodeType":"ElementaryTypeName","src":"16537:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3486,"mutability":"mutable","name":"offset","nameLocation":"16566:6:17","nodeType":"VariableDeclaration","scope":3493,"src":"16558:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3485,"name":"uint256","nodeType":"ElementaryTypeName","src":"16558:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16536:37:17"},"returnParameters":{"id":3490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3489,"mutability":"mutable","name":"value","nameLocation":"16604:5:17","nodeType":"VariableDeclaration","scope":3493,"src":"16596:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3488,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16596:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16595:15:17"},"scope":3494,"src":"16505:331:17","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3495,"src":"297:16541:17","usedErrors":[2318,2321,2324],"usedEvents":[]}],"src":"101:16738:17"},"id":17},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[3518],"IERC165":[3530]},"id":3519,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3496,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3498,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3519,"sourceUnit":3531,"src":"140:38:18","symbolAliases":[{"foreign":{"id":3497,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"148:7:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3500,"name":"IERC165","nameLocations":["688:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":3530,"src":"688:7:18"},"id":3501,"nodeType":"InheritanceSpecifier","src":"688:7:18"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3499,"nodeType":"StructuredDocumentation","src":"180:479:18","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":3518,"linearizedBaseContracts":[3518,3530],"name":"ERC165","nameLocation":"678:6:18","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3529],"body":{"id":3516,"nodeType":"Block","src":"845:64:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3509,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"862:11:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3511,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"882:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3530_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3530_$","typeString":"type(contract IERC165)"}],"id":3510,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3530","typeString":"type(contract IERC165)"}},"id":3513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:18","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3508,"id":3515,"nodeType":"Return","src":"855:47:18"}]},"documentation":{"id":3502,"nodeType":"StructuredDocumentation","src":"702:56:18","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":3517,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:18","nodeType":"FunctionDefinition","parameters":{"id":3505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3504,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:18","nodeType":"VariableDeclaration","scope":3517,"src":"790:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3503,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:18"},"returnParameters":{"id":3508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3517,"src":"839:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3506,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:18"},"scope":3518,"src":"763:146:18","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3519,"src":"660:251:18","usedErrors":[],"usedEvents":[]}],"src":"114:798:18"},"id":18},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3530]},"id":3531,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3520,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3521,"nodeType":"StructuredDocumentation","src":"141:280:19","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3530,"linearizedBaseContracts":[3530],"name":"IERC165","nameLocation":"432:7:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3522,"nodeType":"StructuredDocumentation","src":"446:340:19","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3529,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:19","nodeType":"FunctionDefinition","parameters":{"id":3525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3524,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:19","nodeType":"VariableDeclaration","scope":3529,"src":"818:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3523,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:19"},"returnParameters":{"id":3528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3529,"src":"861:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3526,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:19"},"scope":3530,"src":"791:76:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3531,"src":"422:447:19","usedErrors":[],"usedEvents":[]}],"src":"115:755:19"},"id":19},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5136],"Panic":[2294],"SafeCast":[6901]},"id":5137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3532,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3534,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5137,"sourceUnit":2295,"src":"129:35:20","symbolAliases":[{"foreign":{"id":3533,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"137:5:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3536,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5137,"sourceUnit":6902,"src":"165:40:20","symbolAliases":[{"foreign":{"id":3535,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"173:8:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3537,"nodeType":"StructuredDocumentation","src":"207:73:20","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5136,"linearizedBaseContracts":[5136],"name":"Math","nameLocation":"289:4:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3542,"members":[{"id":3538,"name":"Floor","nameLocation":"324:5:20","nodeType":"EnumValue","src":"324:5:20"},{"id":3539,"name":"Ceil","nameLocation":"367:4:20","nodeType":"EnumValue","src":"367:4:20"},{"id":3540,"name":"Trunc","nameLocation":"409:5:20","nodeType":"EnumValue","src":"409:5:20"},{"id":3541,"name":"Expand","nameLocation":"439:6:20","nodeType":"EnumValue","src":"439:6:20"}],"name":"Rounding","nameLocation":"305:8:20","nodeType":"EnumDefinition","src":"300:169:20"},{"body":{"id":3573,"nodeType":"Block","src":"677:140:20","statements":[{"id":3572,"nodeType":"UncheckedBlock","src":"687:124:20","statements":[{"assignments":[3555],"declarations":[{"constant":false,"id":3555,"mutability":"mutable","name":"c","nameLocation":"719:1:20","nodeType":"VariableDeclaration","scope":3572,"src":"711:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3554,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3559,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3556,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"723:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3557,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"727:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3560,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"746:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3561,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"750:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3567,"nodeType":"IfStatement","src":"742:28:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3565,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3553,"id":3566,"nodeType":"Return","src":"753:17:20"}},{"expression":{"components":[{"hexValue":"74727565","id":3568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3569,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"798:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3570,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3553,"id":3571,"nodeType":"Return","src":"784:16:20"}]}]},"documentation":{"id":3543,"nodeType":"StructuredDocumentation","src":"475:106:20","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":3574,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:20","nodeType":"FunctionDefinition","parameters":{"id":3548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3545,"mutability":"mutable","name":"a","nameLocation":"610:1:20","nodeType":"VariableDeclaration","scope":3574,"src":"602:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3544,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3547,"mutability":"mutable","name":"b","nameLocation":"621:1:20","nodeType":"VariableDeclaration","scope":3574,"src":"613:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3546,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:20"},"returnParameters":{"id":3553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3550,"mutability":"mutable","name":"success","nameLocation":"652:7:20","nodeType":"VariableDeclaration","scope":3574,"src":"647:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3549,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3552,"mutability":"mutable","name":"result","nameLocation":"669:6:20","nodeType":"VariableDeclaration","scope":3574,"src":"661:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3551,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:20"},"scope":5136,"src":"586:231:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3601,"nodeType":"Block","src":"1028:113:20","statements":[{"id":3600,"nodeType":"UncheckedBlock","src":"1038:97:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3586,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"1066:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3587,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"1070:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3593,"nodeType":"IfStatement","src":"1062:28:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3591,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3585,"id":3592,"nodeType":"Return","src":"1073:17:20"}},{"expression":{"components":[{"hexValue":"74727565","id":3594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3595,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"1118:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3596,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"1122:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3598,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3585,"id":3599,"nodeType":"Return","src":"1104:20:20"}]}]},"documentation":{"id":3575,"nodeType":"StructuredDocumentation","src":"823:109:20","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":3602,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:20","nodeType":"FunctionDefinition","parameters":{"id":3580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3577,"mutability":"mutable","name":"a","nameLocation":"961:1:20","nodeType":"VariableDeclaration","scope":3602,"src":"953:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3576,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3579,"mutability":"mutable","name":"b","nameLocation":"972:1:20","nodeType":"VariableDeclaration","scope":3602,"src":"964:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3578,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:20"},"returnParameters":{"id":3585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3582,"mutability":"mutable","name":"success","nameLocation":"1003:7:20","nodeType":"VariableDeclaration","scope":3602,"src":"998:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3581,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3584,"mutability":"mutable","name":"result","nameLocation":"1020:6:20","nodeType":"VariableDeclaration","scope":3602,"src":"1012:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3583,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:20"},"scope":5136,"src":"937:204:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3643,"nodeType":"Block","src":"1355:417:20","statements":[{"id":3642,"nodeType":"UncheckedBlock","src":"1365:401:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3614,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"1623:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3621,"nodeType":"IfStatement","src":"1619:28:20","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":3617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":3618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3619,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3613,"id":3620,"nodeType":"Return","src":"1631:16:20"}},{"assignments":[3623],"declarations":[{"constant":false,"id":3623,"mutability":"mutable","name":"c","nameLocation":"1669:1:20","nodeType":"VariableDeclaration","scope":3642,"src":"1661:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3622,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3627,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3624,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"1673:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3625,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"1677:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3628,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"1696:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3629,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"1700:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3631,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"1705:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3637,"nodeType":"IfStatement","src":"1692:33:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3635,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3613,"id":3636,"nodeType":"Return","src":"1708:17:20"}},{"expression":{"components":[{"hexValue":"74727565","id":3638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3639,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"1753:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3640,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3613,"id":3641,"nodeType":"Return","src":"1739:16:20"}]}]},"documentation":{"id":3603,"nodeType":"StructuredDocumentation","src":"1147:112:20","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":3644,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:20","nodeType":"FunctionDefinition","parameters":{"id":3608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3605,"mutability":"mutable","name":"a","nameLocation":"1288:1:20","nodeType":"VariableDeclaration","scope":3644,"src":"1280:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3604,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3607,"mutability":"mutable","name":"b","nameLocation":"1299:1:20","nodeType":"VariableDeclaration","scope":3644,"src":"1291:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3606,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:20"},"returnParameters":{"id":3613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3610,"mutability":"mutable","name":"success","nameLocation":"1330:7:20","nodeType":"VariableDeclaration","scope":3644,"src":"1325:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3609,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3612,"mutability":"mutable","name":"result","nameLocation":"1347:6:20","nodeType":"VariableDeclaration","scope":3644,"src":"1339:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3611,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:20"},"scope":5136,"src":"1264:508:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3671,"nodeType":"Block","src":"1987:114:20","statements":[{"id":3670,"nodeType":"UncheckedBlock","src":"1997:98:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3656,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"2025:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3663,"nodeType":"IfStatement","src":"2021:29:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3661,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3655,"id":3662,"nodeType":"Return","src":"2033:17:20"}},{"expression":{"components":[{"hexValue":"74727565","id":3664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3665,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3647,"src":"2078:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3666,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"2082:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3668,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3655,"id":3669,"nodeType":"Return","src":"2064:20:20"}]}]},"documentation":{"id":3645,"nodeType":"StructuredDocumentation","src":"1778:113:20","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3672,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:20","nodeType":"FunctionDefinition","parameters":{"id":3650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3647,"mutability":"mutable","name":"a","nameLocation":"1920:1:20","nodeType":"VariableDeclaration","scope":3672,"src":"1912:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3646,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3649,"mutability":"mutable","name":"b","nameLocation":"1931:1:20","nodeType":"VariableDeclaration","scope":3672,"src":"1923:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3648,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:20"},"returnParameters":{"id":3655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3652,"mutability":"mutable","name":"success","nameLocation":"1962:7:20","nodeType":"VariableDeclaration","scope":3672,"src":"1957:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3651,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3654,"mutability":"mutable","name":"result","nameLocation":"1979:6:20","nodeType":"VariableDeclaration","scope":3672,"src":"1971:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3653,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:20"},"scope":5136,"src":"1896:205:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3699,"nodeType":"Block","src":"2326:114:20","statements":[{"id":3698,"nodeType":"UncheckedBlock","src":"2336:98:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3684,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"2364:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3691,"nodeType":"IfStatement","src":"2360:29:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3689,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3683,"id":3690,"nodeType":"Return","src":"2372:17:20"}},{"expression":{"components":[{"hexValue":"74727565","id":3692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3693,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"2417:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3694,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"2421:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3696,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3683,"id":3697,"nodeType":"Return","src":"2403:20:20"}]}]},"documentation":{"id":3673,"nodeType":"StructuredDocumentation","src":"2107:123:20","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3700,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:20","nodeType":"FunctionDefinition","parameters":{"id":3678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3675,"mutability":"mutable","name":"a","nameLocation":"2259:1:20","nodeType":"VariableDeclaration","scope":3700,"src":"2251:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3674,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3677,"mutability":"mutable","name":"b","nameLocation":"2270:1:20","nodeType":"VariableDeclaration","scope":3700,"src":"2262:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3676,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:20"},"returnParameters":{"id":3683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3680,"mutability":"mutable","name":"success","nameLocation":"2301:7:20","nodeType":"VariableDeclaration","scope":3700,"src":"2296:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3679,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3682,"mutability":"mutable","name":"result","nameLocation":"2318:6:20","nodeType":"VariableDeclaration","scope":3700,"src":"2310:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3681,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:20"},"scope":5136,"src":"2235:205:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3726,"nodeType":"Block","src":"2912:207:20","statements":[{"id":3725,"nodeType":"UncheckedBlock","src":"2922:191:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3712,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3707,"src":"3060:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3713,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3705,"src":"3066:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3714,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3707,"src":"3070:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3716,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3719,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3703,"src":"3091:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3717,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"3075:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6901_$","typeString":"type(library SafeCast)"}},"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6900,"src":"3075:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3722,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3711,"id":3724,"nodeType":"Return","src":"3053:49:20"}]}]},"documentation":{"id":3701,"nodeType":"StructuredDocumentation","src":"2446:374:20","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3727,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:20","nodeType":"FunctionDefinition","parameters":{"id":3708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3703,"mutability":"mutable","name":"condition","nameLocation":"2847:9:20","nodeType":"VariableDeclaration","scope":3727,"src":"2842:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3702,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3705,"mutability":"mutable","name":"a","nameLocation":"2866:1:20","nodeType":"VariableDeclaration","scope":3727,"src":"2858:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3704,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3707,"mutability":"mutable","name":"b","nameLocation":"2877:1:20","nodeType":"VariableDeclaration","scope":3727,"src":"2869:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3706,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:20"},"returnParameters":{"id":3711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3727,"src":"2903:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3709,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:20"},"scope":5136,"src":"2825:294:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3745,"nodeType":"Block","src":"3256:44:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3738,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"3281:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3739,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"3285:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3741,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"3288:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3742,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"3291:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3737,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"3273:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3736,"id":3744,"nodeType":"Return","src":"3266:27:20"}]},"documentation":{"id":3728,"nodeType":"StructuredDocumentation","src":"3125:59:20","text":" @dev Returns the largest of two numbers."},"id":3746,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:20","nodeType":"FunctionDefinition","parameters":{"id":3733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3730,"mutability":"mutable","name":"a","nameLocation":"3210:1:20","nodeType":"VariableDeclaration","scope":3746,"src":"3202:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3729,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3732,"mutability":"mutable","name":"b","nameLocation":"3221:1:20","nodeType":"VariableDeclaration","scope":3746,"src":"3213:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3731,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:20"},"returnParameters":{"id":3736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3746,"src":"3247:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3734,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:20"},"scope":5136,"src":"3189:111:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3764,"nodeType":"Block","src":"3438:44:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3757,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"3463:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3758,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"3467:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3760,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"3470:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3761,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"3473:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3756,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"3455:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3755,"id":3763,"nodeType":"Return","src":"3448:27:20"}]},"documentation":{"id":3747,"nodeType":"StructuredDocumentation","src":"3306:60:20","text":" @dev Returns the smallest of two numbers."},"id":3765,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:20","nodeType":"FunctionDefinition","parameters":{"id":3752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3749,"mutability":"mutable","name":"a","nameLocation":"3392:1:20","nodeType":"VariableDeclaration","scope":3765,"src":"3384:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3748,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3751,"mutability":"mutable","name":"b","nameLocation":"3403:1:20","nodeType":"VariableDeclaration","scope":3765,"src":"3395:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3750,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:20"},"returnParameters":{"id":3755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3765,"src":"3429:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3753,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:20"},"scope":5136,"src":"3371:111:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3787,"nodeType":"Block","src":"3666:82:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3775,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3768,"src":"3721:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3776,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"3725:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3778,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3779,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3768,"src":"3731:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3780,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"3735:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3782,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3774,"id":3786,"nodeType":"Return","src":"3713:28:20"}]},"documentation":{"id":3766,"nodeType":"StructuredDocumentation","src":"3488:102:20","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3788,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:20","nodeType":"FunctionDefinition","parameters":{"id":3771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3768,"mutability":"mutable","name":"a","nameLocation":"3620:1:20","nodeType":"VariableDeclaration","scope":3788,"src":"3612:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3767,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3770,"mutability":"mutable","name":"b","nameLocation":"3631:1:20","nodeType":"VariableDeclaration","scope":3788,"src":"3623:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3769,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:20"},"returnParameters":{"id":3774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3788,"src":"3657:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3772,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:20"},"scope":5136,"src":"3595:153:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3828,"nodeType":"Block","src":"4040:633:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3798,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3793,"src":"4054:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3809,"nodeType":"IfStatement","src":"4050:150:20","trueBody":{"id":3808,"nodeType":"Block","src":"4062:138:20","statements":[{"expression":{"arguments":[{"expression":{"id":3804,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"4166:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2294_$","typeString":"type(library Panic)"}},"id":3805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:20","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2261,"src":"4166:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3801,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"4154:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2294_$","typeString":"type(library Panic)"}},"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:20","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2293,"src":"4154:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3807,"nodeType":"ExpressionStatement","src":"4154:35:20"}]}},{"id":3827,"nodeType":"UncheckedBlock","src":"4583:84:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3812,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"4630:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3810,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"4614:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6901_$","typeString":"type(library SafeCast)"}},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6900,"src":"4614:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3816,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"4641:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3819,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3820,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3793,"src":"4650:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3824,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3797,"id":3826,"nodeType":"Return","src":"4607:49:20"}]}]},"documentation":{"id":3789,"nodeType":"StructuredDocumentation","src":"3754:210:20","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3829,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:20","nodeType":"FunctionDefinition","parameters":{"id":3794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3791,"mutability":"mutable","name":"a","nameLocation":"3994:1:20","nodeType":"VariableDeclaration","scope":3829,"src":"3986:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3790,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3793,"mutability":"mutable","name":"b","nameLocation":"4005:1:20","nodeType":"VariableDeclaration","scope":3829,"src":"3997:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3792,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:20"},"returnParameters":{"id":3797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3829,"src":"4031:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3795,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:20"},"scope":5136,"src":"3969:704:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3965,"nodeType":"Block","src":"5094:4128:20","statements":[{"id":3964,"nodeType":"UncheckedBlock","src":"5104:4112:20","statements":[{"assignments":[3842],"declarations":[{"constant":false,"id":3842,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:20","nodeType":"VariableDeclaration","scope":3964,"src":"5433:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3841,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3846,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3843,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"5449:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3844,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"5453:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:20"},{"assignments":[3848],"declarations":[{"constant":false,"id":3848,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:20","nodeType":"VariableDeclaration","scope":3964,"src":"5513:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3847,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3849,"nodeType":"VariableDeclarationStatement","src":"5513:13:20"},{"AST":{"nodeType":"YulBlock","src":"5593:122:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5611:30:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5628:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"5631:1:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5638:1:20","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5634:3:20"},"nodeType":"YulFunctionCall","src":"5634:6:20"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5621:6:20"},"nodeType":"YulFunctionCall","src":"5621:20:20"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"5615:2:20","type":""}]},{"nodeType":"YulAssignment","src":"5658:43:20","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5675:2:20"},{"name":"prod0","nodeType":"YulIdentifier","src":"5679:5:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5671:3:20"},"nodeType":"YulFunctionCall","src":"5671:14:20"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5690:2:20"},{"name":"prod0","nodeType":"YulIdentifier","src":"5694:5:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5687:2:20"},"nodeType":"YulFunctionCall","src":"5687:13:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5667:3:20"},"nodeType":"YulFunctionCall","src":"5667:34:20"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5658:5:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3842,"isOffset":false,"isSlot":false,"src":"5679:5:20","valueSize":1},{"declaration":3842,"isOffset":false,"isSlot":false,"src":"5694:5:20","valueSize":1},{"declaration":3848,"isOffset":false,"isSlot":false,"src":"5658:5:20","valueSize":1},{"declaration":3832,"isOffset":false,"isSlot":false,"src":"5628:1:20","valueSize":1},{"declaration":3834,"isOffset":false,"isSlot":false,"src":"5631:1:20","valueSize":1}],"id":3850,"nodeType":"InlineAssembly","src":"5584:131:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3851,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"5796:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3859,"nodeType":"IfStatement","src":"5792:368:20","trueBody":{"id":3858,"nodeType":"Block","src":"5808:352:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3854,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"6126:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3855,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"6134:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3840,"id":3857,"nodeType":"Return","src":"6119:26:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3860,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"6270:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3861,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"6285:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3878,"nodeType":"IfStatement","src":"6266:143:20","trueBody":{"id":3877,"nodeType":"Block","src":"6292:117:20","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3867,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"6330:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3870,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"6348:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2294_$","typeString":"type(library Panic)"}},"id":3871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:20","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2261,"src":"6348:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3872,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"6372:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2294_$","typeString":"type(library Panic)"}},"id":3873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:20","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2257,"src":"6372:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3866,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"6322:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3863,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"6310:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2294_$","typeString":"type(library Panic)"}},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:20","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2293,"src":"6310:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3876,"nodeType":"ExpressionStatement","src":"6310:84:20"}]}},{"assignments":[3880],"declarations":[{"constant":false,"id":3880,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:20","nodeType":"VariableDeclaration","scope":3964,"src":"6664:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3879,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3881,"nodeType":"VariableDeclarationStatement","src":"6664:17:20"},{"AST":{"nodeType":"YulBlock","src":"6704:291:20","statements":[{"nodeType":"YulAssignment","src":"6773:38:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6793:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"6796:1:20"},{"name":"denominator","nodeType":"YulIdentifier","src":"6799:11:20"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"6786:6:20"},"nodeType":"YulFunctionCall","src":"6786:25:20"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"6773:9:20"}]},{"nodeType":"YulAssignment","src":"6893:41:20","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"6906:5:20"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"6916:9:20"},{"name":"prod0","nodeType":"YulIdentifier","src":"6927:5:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6913:2:20"},"nodeType":"YulFunctionCall","src":"6913:20:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6902:3:20"},"nodeType":"YulFunctionCall","src":"6902:32:20"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"6893:5:20"}]},{"nodeType":"YulAssignment","src":"6951:30:20","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6964:5:20"},{"name":"remainder","nodeType":"YulIdentifier","src":"6971:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6960:3:20"},"nodeType":"YulFunctionCall","src":"6960:21:20"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6951:5:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3836,"isOffset":false,"isSlot":false,"src":"6799:11:20","valueSize":1},{"declaration":3842,"isOffset":false,"isSlot":false,"src":"6927:5:20","valueSize":1},{"declaration":3842,"isOffset":false,"isSlot":false,"src":"6951:5:20","valueSize":1},{"declaration":3842,"isOffset":false,"isSlot":false,"src":"6964:5:20","valueSize":1},{"declaration":3848,"isOffset":false,"isSlot":false,"src":"6893:5:20","valueSize":1},{"declaration":3848,"isOffset":false,"isSlot":false,"src":"6906:5:20","valueSize":1},{"declaration":3880,"isOffset":false,"isSlot":false,"src":"6773:9:20","valueSize":1},{"declaration":3880,"isOffset":false,"isSlot":false,"src":"6916:9:20","valueSize":1},{"declaration":3880,"isOffset":false,"isSlot":false,"src":"6971:9:20","valueSize":1},{"declaration":3832,"isOffset":false,"isSlot":false,"src":"6793:1:20","valueSize":1},{"declaration":3834,"isOffset":false,"isSlot":false,"src":"6796:1:20","valueSize":1}],"id":3882,"nodeType":"InlineAssembly","src":"6695:300:20"},{"assignments":[3884],"declarations":[{"constant":false,"id":3884,"mutability":"mutable","name":"twos","nameLocation":"7207:4:20","nodeType":"VariableDeclaration","scope":3964,"src":"7199:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3883,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3891,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3885,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"7214:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3887,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"7233:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3889,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:20"},{"AST":{"nodeType":"YulBlock","src":"7268:366:20","statements":[{"nodeType":"YulAssignment","src":"7333:37:20","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"7352:11:20"},{"name":"twos","nodeType":"YulIdentifier","src":"7365:4:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7348:3:20"},"nodeType":"YulFunctionCall","src":"7348:22:20"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"7333:11:20"}]},{"nodeType":"YulAssignment","src":"7437:25:20","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"7450:5:20"},{"name":"twos","nodeType":"YulIdentifier","src":"7457:4:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7446:3:20"},"nodeType":"YulFunctionCall","src":"7446:16:20"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"7437:5:20"}]},{"nodeType":"YulAssignment","src":"7581:39:20","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7601:1:20","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"7604:4:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7597:3:20"},"nodeType":"YulFunctionCall","src":"7597:12:20"},{"name":"twos","nodeType":"YulIdentifier","src":"7611:4:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7593:3:20"},"nodeType":"YulFunctionCall","src":"7593:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"7618:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7589:3:20"},"nodeType":"YulFunctionCall","src":"7589:31:20"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"7581:4:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3836,"isOffset":false,"isSlot":false,"src":"7333:11:20","valueSize":1},{"declaration":3836,"isOffset":false,"isSlot":false,"src":"7352:11:20","valueSize":1},{"declaration":3842,"isOffset":false,"isSlot":false,"src":"7437:5:20","valueSize":1},{"declaration":3842,"isOffset":false,"isSlot":false,"src":"7450:5:20","valueSize":1},{"declaration":3884,"isOffset":false,"isSlot":false,"src":"7365:4:20","valueSize":1},{"declaration":3884,"isOffset":false,"isSlot":false,"src":"7457:4:20","valueSize":1},{"declaration":3884,"isOffset":false,"isSlot":false,"src":"7581:4:20","valueSize":1},{"declaration":3884,"isOffset":false,"isSlot":false,"src":"7604:4:20","valueSize":1},{"declaration":3884,"isOffset":false,"isSlot":false,"src":"7611:4:20","valueSize":1}],"id":3892,"nodeType":"InlineAssembly","src":"7259:375:20"},{"expression":{"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3893,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"7700:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3894,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"7709:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3895,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"7717:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3898,"nodeType":"ExpressionStatement","src":"7700:21:20"},{"assignments":[3900],"declarations":[{"constant":false,"id":3900,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:20","nodeType":"VariableDeclaration","scope":3964,"src":"8056:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3899,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3907,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3902,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"8079:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3904,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:20"},{"expression":{"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3908,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"8312:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3910,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"8327:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3911,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"8341:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3915,"nodeType":"ExpressionStatement","src":"8312:36:20"},{"expression":{"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3916,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"8382:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3918,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"8397:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3919,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"8411:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3923,"nodeType":"ExpressionStatement","src":"8382:36:20"},{"expression":{"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3924,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"8454:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3926,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"8469:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3927,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"8483:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3931,"nodeType":"ExpressionStatement","src":"8454:36:20"},{"expression":{"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3932,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"8525:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3934,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"8540:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3935,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"8554:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3939,"nodeType":"ExpressionStatement","src":"8525:36:20"},{"expression":{"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3940,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"8598:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3942,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"8613:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3943,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"8627:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3947,"nodeType":"ExpressionStatement","src":"8598:36:20"},{"expression":{"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3948,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"8672:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3950,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"8687:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3951,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"8701:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3955,"nodeType":"ExpressionStatement","src":"8672:36:20"},{"expression":{"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3956,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"9154:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3957,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"9163:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3958,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"9171:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3961,"nodeType":"ExpressionStatement","src":"9154:24:20"},{"expression":{"id":3962,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"9199:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3840,"id":3963,"nodeType":"Return","src":"9192:13:20"}]}]},"documentation":{"id":3830,"nodeType":"StructuredDocumentation","src":"4679:312:20","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3966,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:20","nodeType":"FunctionDefinition","parameters":{"id":3837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3832,"mutability":"mutable","name":"x","nameLocation":"5020:1:20","nodeType":"VariableDeclaration","scope":3966,"src":"5012:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3831,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3834,"mutability":"mutable","name":"y","nameLocation":"5031:1:20","nodeType":"VariableDeclaration","scope":3966,"src":"5023:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3833,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3836,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:20","nodeType":"VariableDeclaration","scope":3966,"src":"5034:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3835,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:20"},"returnParameters":{"id":3840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3839,"mutability":"mutable","name":"result","nameLocation":"5086:6:20","nodeType":"VariableDeclaration","scope":3966,"src":"5078:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3838,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:20"},"scope":5136,"src":"4996:4226:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4002,"nodeType":"Block","src":"9461:128:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3982,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"9485:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3983,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"9488:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3984,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"9491:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3981,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3966,4003],"referencedDeclaration":3966,"src":"9478:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3989,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"9539:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3542","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3542","typeString":"enum Math.Rounding"}],"id":3988,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5135,"src":"9522:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3542_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3992,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"9559:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3993,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"9562:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3994,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"9565:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3991,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:20","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3986,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"9506:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6901_$","typeString":"type(library SafeCast)"}},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6900,"src":"9506:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3980,"id":4001,"nodeType":"Return","src":"9471:111:20"}]},"documentation":{"id":3967,"nodeType":"StructuredDocumentation","src":"9228:118:20","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4003,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:20","nodeType":"FunctionDefinition","parameters":{"id":3977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3969,"mutability":"mutable","name":"x","nameLocation":"9375:1:20","nodeType":"VariableDeclaration","scope":4003,"src":"9367:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3968,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3971,"mutability":"mutable","name":"y","nameLocation":"9386:1:20","nodeType":"VariableDeclaration","scope":4003,"src":"9378:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3970,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3973,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:20","nodeType":"VariableDeclaration","scope":4003,"src":"9389:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3972,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3976,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:20","nodeType":"VariableDeclaration","scope":4003,"src":"9410:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3542","typeString":"enum Math.Rounding"},"typeName":{"id":3975,"nodeType":"UserDefinedTypeName","pathNode":{"id":3974,"name":"Rounding","nameLocations":["9410:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3542,"src":"9410:8:20"},"referencedDeclaration":3542,"src":"9410:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3542","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:20"},"returnParameters":{"id":3980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3979,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4003,"src":"9452:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3978,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:20"},"scope":5136,"src":"9351:238:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4099,"nodeType":"Block","src":"10223:1849:20","statements":[{"id":4098,"nodeType":"UncheckedBlock","src":"10233:1833:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4013,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"10261:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4018,"nodeType":"IfStatement","src":"10257:20:20","trueBody":{"expression":{"hexValue":"30","id":4016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4012,"id":4017,"nodeType":"Return","src":"10269:8:20"}},{"assignments":[4020],"declarations":[{"constant":false,"id":4020,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:20","nodeType":"VariableDeclaration","scope":4098,"src":"10748:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4019,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4024,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4021,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"10768:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4022,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"10772:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:20"},{"assignments":[4026],"declarations":[{"constant":false,"id":4026,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:20","nodeType":"VariableDeclaration","scope":4098,"src":"10787:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4025,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4028,"initialValue":{"id":4027,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"10801:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:20"},{"assignments":[4030],"declarations":[{"constant":false,"id":4030,"mutability":"mutable","name":"x","nameLocation":"10945:1:20","nodeType":"VariableDeclaration","scope":4098,"src":"10938:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4029,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4032,"initialValue":{"hexValue":"30","id":4031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:20"},{"assignments":[4034],"declarations":[{"constant":false,"id":4034,"mutability":"mutable","name":"y","nameLocation":"10971:1:20","nodeType":"VariableDeclaration","scope":4098,"src":"10964:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4033,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4036,"initialValue":{"hexValue":"31","id":4035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:20"},{"body":{"id":4073,"nodeType":"Block","src":"11014:882:20","statements":[{"assignments":[4041],"declarations":[{"constant":false,"id":4041,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:20","nodeType":"VariableDeclaration","scope":4073,"src":"11032:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4040,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4045,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4042,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"11051:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4043,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"11057:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:20"},{"expression":{"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4046,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"11086:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4047,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"11091:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4048,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4049,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"11191:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4050,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"11436:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4051,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"11442:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4052,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"11454:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4055,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:20","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4057,"nodeType":"ExpressionStatement","src":"11085:395:20"},{"expression":{"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4058,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"11500:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4059,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"11503:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4060,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4061,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"11585:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4062,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"11839:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4063,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"11843:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4066,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"11854:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4064,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:20","typeDescriptions":{}}},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4070,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:20","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4072,"nodeType":"ExpressionStatement","src":"11499:382:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4037,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"10998:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4074,"nodeType":"WhileStatement","src":"10991:905:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4075,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"11914:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4080,"nodeType":"IfStatement","src":"11910:22:20","trueBody":{"expression":{"hexValue":"30","id":4078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4012,"id":4079,"nodeType":"Return","src":"11924:8:20"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4082,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"11983:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4085,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"11990:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:20","subExpression":{"id":4088,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"12003:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4086,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:20","typeDescriptions":{}}},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4094,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"12015:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4092,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:20","typeDescriptions":{}}},"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4081,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"11975:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4012,"id":4097,"nodeType":"Return","src":"11968:50:20"}]}]},"documentation":{"id":4004,"nodeType":"StructuredDocumentation","src":"9595:553:20","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4100,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:20","nodeType":"FunctionDefinition","parameters":{"id":4009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4006,"mutability":"mutable","name":"a","nameLocation":"10177:1:20","nodeType":"VariableDeclaration","scope":4100,"src":"10169:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4005,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4008,"mutability":"mutable","name":"n","nameLocation":"10188:1:20","nodeType":"VariableDeclaration","scope":4100,"src":"10180:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4007,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:20"},"returnParameters":{"id":4012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4100,"src":"10214:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4010,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:20"},"scope":5136,"src":"10153:1919:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4120,"nodeType":"Block","src":"12672:82:20","statements":[{"id":4119,"nodeType":"UncheckedBlock","src":"12682:66:20","statements":[{"expression":{"arguments":[{"id":4112,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"12725:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4113,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"12728:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4116,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"12735:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4110,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5136,"src":"12713:4:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5136_$","typeString":"type(library Math)"}},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:20","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4157,"src":"12713:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4109,"id":4118,"nodeType":"Return","src":"12706:31:20"}]}]},"documentation":{"id":4101,"nodeType":"StructuredDocumentation","src":"12078:514:20","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4121,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:20","nodeType":"FunctionDefinition","parameters":{"id":4106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4103,"mutability":"mutable","name":"a","nameLocation":"12626:1:20","nodeType":"VariableDeclaration","scope":4121,"src":"12618:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4102,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4105,"mutability":"mutable","name":"p","nameLocation":"12637:1:20","nodeType":"VariableDeclaration","scope":4121,"src":"12629:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4104,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:20"},"returnParameters":{"id":4109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4121,"src":"12663:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4107,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:20"},"scope":5136,"src":"12597:157:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4156,"nodeType":"Block","src":"13524:174:20","statements":[{"assignments":[4134,4136],"declarations":[{"constant":false,"id":4134,"mutability":"mutable","name":"success","nameLocation":"13540:7:20","nodeType":"VariableDeclaration","scope":4156,"src":"13535:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4133,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4136,"mutability":"mutable","name":"result","nameLocation":"13557:6:20","nodeType":"VariableDeclaration","scope":4156,"src":"13549:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4135,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4142,"initialValue":{"arguments":[{"id":4138,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4124,"src":"13577:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4139,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4126,"src":"13580:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4140,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"13583:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4137,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4181,4263],"referencedDeclaration":4181,"src":"13567:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:20"},{"condition":{"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:20","subExpression":{"id":4143,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4134,"src":"13600:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4153,"nodeType":"IfStatement","src":"13595:74:20","trueBody":{"id":4152,"nodeType":"Block","src":"13609:60:20","statements":[{"expression":{"arguments":[{"expression":{"id":4148,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"13635:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2294_$","typeString":"type(library Panic)"}},"id":4149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:20","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2261,"src":"13635:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4145,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"13623:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2294_$","typeString":"type(library Panic)"}},"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:20","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2293,"src":"13623:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4151,"nodeType":"ExpressionStatement","src":"13623:35:20"}]}},{"expression":{"id":4154,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"13685:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4132,"id":4155,"nodeType":"Return","src":"13678:13:20"}]},"documentation":{"id":4122,"nodeType":"StructuredDocumentation","src":"12760:678:20","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4157,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:20","nodeType":"FunctionDefinition","parameters":{"id":4129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4124,"mutability":"mutable","name":"b","nameLocation":"13467:1:20","nodeType":"VariableDeclaration","scope":4157,"src":"13459:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4123,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4126,"mutability":"mutable","name":"e","nameLocation":"13478:1:20","nodeType":"VariableDeclaration","scope":4157,"src":"13470:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4125,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4128,"mutability":"mutable","name":"m","nameLocation":"13489:1:20","nodeType":"VariableDeclaration","scope":4157,"src":"13481:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4127,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:20"},"returnParameters":{"id":4132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4131,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4157,"src":"13515:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4130,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:20"},"scope":5136,"src":"13443:255:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4180,"nodeType":"Block","src":"14552:1493:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4171,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4164,"src":"14566:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4178,"nodeType":"IfStatement","src":"14562:29:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4176,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4170,"id":4177,"nodeType":"Return","src":"14574:17:20"}},{"AST":{"nodeType":"YulBlock","src":"14626:1413:20","statements":[{"nodeType":"YulVariableDeclaration","src":"14640:22:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14657:4:20","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14651:5:20"},"nodeType":"YulFunctionCall","src":"14651:11:20"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"14644:3:20","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15570:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15575:4:20","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15563:6:20"},"nodeType":"YulFunctionCall","src":"15563:17:20"},"nodeType":"YulExpressionStatement","src":"15563:17:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15604:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15609:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15600:3:20"},"nodeType":"YulFunctionCall","src":"15600:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"15616:4:20","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15593:6:20"},"nodeType":"YulFunctionCall","src":"15593:28:20"},"nodeType":"YulExpressionStatement","src":"15593:28:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15645:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15650:4:20","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15641:3:20"},"nodeType":"YulFunctionCall","src":"15641:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"15657:4:20","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15634:6:20"},"nodeType":"YulFunctionCall","src":"15634:28:20"},"nodeType":"YulExpressionStatement","src":"15634:28:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15686:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15691:4:20","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15682:3:20"},"nodeType":"YulFunctionCall","src":"15682:14:20"},{"name":"b","nodeType":"YulIdentifier","src":"15698:1:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15675:6:20"},"nodeType":"YulFunctionCall","src":"15675:25:20"},"nodeType":"YulExpressionStatement","src":"15675:25:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15724:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15729:4:20","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15720:3:20"},"nodeType":"YulFunctionCall","src":"15720:14:20"},{"name":"e","nodeType":"YulIdentifier","src":"15736:1:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15713:6:20"},"nodeType":"YulFunctionCall","src":"15713:25:20"},"nodeType":"YulExpressionStatement","src":"15713:25:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15762:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15767:4:20","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15758:3:20"},"nodeType":"YulFunctionCall","src":"15758:14:20"},{"name":"m","nodeType":"YulIdentifier","src":"15774:1:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15751:6:20"},"nodeType":"YulFunctionCall","src":"15751:25:20"},"nodeType":"YulExpressionStatement","src":"15751:25:20"},{"nodeType":"YulAssignment","src":"15938:57:20","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"15960:3:20"},"nodeType":"YulFunctionCall","src":"15960:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"15967:4:20","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"15973:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15978:4:20","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"15984:4:20","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"15990:4:20","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"15949:10:20"},"nodeType":"YulFunctionCall","src":"15949:46:20"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"15938:7:20"}]},{"nodeType":"YulAssignment","src":"16008:21:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16024:4:20","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16018:5:20"},"nodeType":"YulFunctionCall","src":"16018:11:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16008:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4160,"isOffset":false,"isSlot":false,"src":"15698:1:20","valueSize":1},{"declaration":4162,"isOffset":false,"isSlot":false,"src":"15736:1:20","valueSize":1},{"declaration":4164,"isOffset":false,"isSlot":false,"src":"15774:1:20","valueSize":1},{"declaration":4169,"isOffset":false,"isSlot":false,"src":"16008:6:20","valueSize":1},{"declaration":4167,"isOffset":false,"isSlot":false,"src":"15938:7:20","valueSize":1}],"flags":["memory-safe"],"id":4179,"nodeType":"InlineAssembly","src":"14601:1438:20"}]},"documentation":{"id":4158,"nodeType":"StructuredDocumentation","src":"13704:738:20","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4181,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:20","nodeType":"FunctionDefinition","parameters":{"id":4165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4160,"mutability":"mutable","name":"b","nameLocation":"14474:1:20","nodeType":"VariableDeclaration","scope":4181,"src":"14466:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4159,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4162,"mutability":"mutable","name":"e","nameLocation":"14485:1:20","nodeType":"VariableDeclaration","scope":4181,"src":"14477:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4161,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4164,"mutability":"mutable","name":"m","nameLocation":"14496:1:20","nodeType":"VariableDeclaration","scope":4181,"src":"14488:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4163,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:20"},"returnParameters":{"id":4170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4167,"mutability":"mutable","name":"success","nameLocation":"14527:7:20","nodeType":"VariableDeclaration","scope":4181,"src":"14522:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4166,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4169,"mutability":"mutable","name":"result","nameLocation":"14544:6:20","nodeType":"VariableDeclaration","scope":4181,"src":"14536:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4168,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:20"},"scope":5136,"src":"14447:1598:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4216,"nodeType":"Block","src":"16242:179:20","statements":[{"assignments":[4194,4196],"declarations":[{"constant":false,"id":4194,"mutability":"mutable","name":"success","nameLocation":"16258:7:20","nodeType":"VariableDeclaration","scope":4216,"src":"16253:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4193,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4196,"mutability":"mutable","name":"result","nameLocation":"16280:6:20","nodeType":"VariableDeclaration","scope":4216,"src":"16267:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4195,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4202,"initialValue":{"arguments":[{"id":4198,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"16300:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4199,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"16303:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4200,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4188,"src":"16306:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4197,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4181,4263],"referencedDeclaration":4263,"src":"16290:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:20"},{"condition":{"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:20","subExpression":{"id":4203,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"16323:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4213,"nodeType":"IfStatement","src":"16318:74:20","trueBody":{"id":4212,"nodeType":"Block","src":"16332:60:20","statements":[{"expression":{"arguments":[{"expression":{"id":4208,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"16358:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2294_$","typeString":"type(library Panic)"}},"id":4209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:20","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2261,"src":"16358:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4205,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"16346:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2294_$","typeString":"type(library Panic)"}},"id":4207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:20","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2293,"src":"16346:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4211,"nodeType":"ExpressionStatement","src":"16346:35:20"}]}},{"expression":{"id":4214,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4196,"src":"16408:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4192,"id":4215,"nodeType":"Return","src":"16401:13:20"}]},"documentation":{"id":4182,"nodeType":"StructuredDocumentation","src":"16051:85:20","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4217,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:20","nodeType":"FunctionDefinition","parameters":{"id":4189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4184,"mutability":"mutable","name":"b","nameLocation":"16170:1:20","nodeType":"VariableDeclaration","scope":4217,"src":"16157:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4183,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4186,"mutability":"mutable","name":"e","nameLocation":"16186:1:20","nodeType":"VariableDeclaration","scope":4217,"src":"16173:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4185,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4188,"mutability":"mutable","name":"m","nameLocation":"16202:1:20","nodeType":"VariableDeclaration","scope":4217,"src":"16189:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4187,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:20"},"returnParameters":{"id":4192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4217,"src":"16228:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4190,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:20"},"scope":5136,"src":"16141:280:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4262,"nodeType":"Block","src":"16675:771:20","statements":[{"condition":{"arguments":[{"id":4232,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"16700:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4231,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"16689:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4241,"nodeType":"IfStatement","src":"16685:47:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4235,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4239,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4230,"id":4240,"nodeType":"Return","src":"16704:28:20"}},{"assignments":[4243],"declarations":[{"constant":false,"id":4243,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:20","nodeType":"VariableDeclaration","scope":4262,"src":"16743:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4242,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4246,"initialValue":{"expression":{"id":4244,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"16758:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:20","memberName":"length","nodeType":"MemberAccess","src":"16758:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:20"},{"expression":{"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4247,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"16848:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4250,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"16874:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:20","memberName":"length","nodeType":"MemberAccess","src":"16874:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4252,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4222,"src":"16884:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:20","memberName":"length","nodeType":"MemberAccess","src":"16884:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4254,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"16894:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4255,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"16900:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4256,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4222,"src":"16903:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4257,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"16906:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4248,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:20","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4260,"nodeType":"ExpressionStatement","src":"16848:60:20"},{"AST":{"nodeType":"YulBlock","src":"16944:496:20","statements":[{"nodeType":"YulVariableDeclaration","src":"16958:32:20","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"16977:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"16985:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16973:3:20"},"nodeType":"YulFunctionCall","src":"16973:17:20"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"16962:7:20","type":""}]},{"nodeType":"YulAssignment","src":"17080:73:20","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"17102:3:20"},"nodeType":"YulFunctionCall","src":"17102:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"17109:4:20","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17115:7:20"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17130:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17124:5:20"},"nodeType":"YulFunctionCall","src":"17124:13:20"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17139:7:20"},{"name":"mLen","nodeType":"YulIdentifier","src":"17148:4:20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"17091:10:20"},"nodeType":"YulFunctionCall","src":"17091:62:20"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"17080:7:20"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17309:6:20"},{"name":"mLen","nodeType":"YulIdentifier","src":"17317:4:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17302:6:20"},"nodeType":"YulFunctionCall","src":"17302:20:20"},"nodeType":"YulExpressionStatement","src":"17302:20:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17405:4:20","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"17415:7:20"},{"name":"mLen","nodeType":"YulIdentifier","src":"17424:4:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17411:3:20"},"nodeType":"YulFunctionCall","src":"17411:18:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17398:6:20"},"nodeType":"YulFunctionCall","src":"17398:32:20"},"nodeType":"YulExpressionStatement","src":"17398:32:20"}]},"evmVersion":"paris","externalReferences":[{"declaration":4243,"isOffset":false,"isSlot":false,"src":"17148:4:20","valueSize":1},{"declaration":4243,"isOffset":false,"isSlot":false,"src":"17317:4:20","valueSize":1},{"declaration":4243,"isOffset":false,"isSlot":false,"src":"17424:4:20","valueSize":1},{"declaration":4229,"isOffset":false,"isSlot":false,"src":"16977:6:20","valueSize":1},{"declaration":4229,"isOffset":false,"isSlot":false,"src":"17130:6:20","valueSize":1},{"declaration":4229,"isOffset":false,"isSlot":false,"src":"17309:6:20","valueSize":1},{"declaration":4227,"isOffset":false,"isSlot":false,"src":"17080:7:20","valueSize":1}],"flags":["memory-safe"],"id":4261,"nodeType":"InlineAssembly","src":"16919:521:20"}]},"documentation":{"id":4218,"nodeType":"StructuredDocumentation","src":"16427:88:20","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4263,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:20","nodeType":"FunctionDefinition","parameters":{"id":4225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4220,"mutability":"mutable","name":"b","nameLocation":"16561:1:20","nodeType":"VariableDeclaration","scope":4263,"src":"16548:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4219,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4222,"mutability":"mutable","name":"e","nameLocation":"16585:1:20","nodeType":"VariableDeclaration","scope":4263,"src":"16572:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4221,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4224,"mutability":"mutable","name":"m","nameLocation":"16609:1:20","nodeType":"VariableDeclaration","scope":4263,"src":"16596:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4223,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:20"},"returnParameters":{"id":4230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4227,"mutability":"mutable","name":"success","nameLocation":"16645:7:20","nodeType":"VariableDeclaration","scope":4263,"src":"16640:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4226,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4229,"mutability":"mutable","name":"result","nameLocation":"16667:6:20","nodeType":"VariableDeclaration","scope":4263,"src":"16654:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4228,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:20"},"scope":5136,"src":"16520:926:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4295,"nodeType":"Block","src":"17601:176:20","statements":[{"body":{"id":4291,"nodeType":"Block","src":"17658:92:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4282,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"17676:9:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4284,"indexExpression":{"id":4283,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"17686:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4290,"nodeType":"IfStatement","src":"17672:68:20","trueBody":{"id":4289,"nodeType":"Block","src":"17695:45:20","statements":[{"expression":{"hexValue":"66616c7365","id":4287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4270,"id":4288,"nodeType":"Return","src":"17713:12:20"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4275,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"17631:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4276,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"17635:9:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:20","memberName":"length","nodeType":"MemberAccess","src":"17635:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4292,"initializationExpression":{"assignments":[4272],"declarations":[{"constant":false,"id":4272,"mutability":"mutable","name":"i","nameLocation":"17624:1:20","nodeType":"VariableDeclaration","scope":4292,"src":"17616:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4271,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4274,"initialValue":{"hexValue":"30","id":4273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:20"},"loopExpression":{"expression":{"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:20","subExpression":{"id":4279,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"17655:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4281,"nodeType":"ExpressionStatement","src":"17653:3:20"},"nodeType":"ForStatement","src":"17611:139:20"},{"expression":{"hexValue":"74727565","id":4293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4270,"id":4294,"nodeType":"Return","src":"17759:11:20"}]},"documentation":{"id":4264,"nodeType":"StructuredDocumentation","src":"17452:72:20","text":" @dev Returns whether the provided byte array is zero."},"id":4296,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:20","nodeType":"FunctionDefinition","parameters":{"id":4267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4266,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:20","nodeType":"VariableDeclaration","scope":4296,"src":"17549:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4265,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:20"},"returnParameters":{"id":4270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4296,"src":"17595:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4268,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:20"},"scope":5136,"src":"17529:248:20","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4514,"nodeType":"Block","src":"18137:5124:20","statements":[{"id":4513,"nodeType":"UncheckedBlock","src":"18147:5108:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4304,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"18241:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4310,"nodeType":"IfStatement","src":"18237:53:20","trueBody":{"id":4309,"nodeType":"Block","src":"18249:41:20","statements":[{"expression":{"id":4307,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"18274:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4303,"id":4308,"nodeType":"Return","src":"18267:8:20"}]}},{"assignments":[4312],"declarations":[{"constant":false,"id":4312,"mutability":"mutable","name":"aa","nameLocation":"19225:2:20","nodeType":"VariableDeclaration","scope":4513,"src":"19217:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4311,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4314,"initialValue":{"id":4313,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"19230:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:20"},{"assignments":[4316],"declarations":[{"constant":false,"id":4316,"mutability":"mutable","name":"xn","nameLocation":"19253:2:20","nodeType":"VariableDeclaration","scope":4513,"src":"19245:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4315,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4318,"initialValue":{"hexValue":"31","id":4317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4319,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"19278:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4323,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4334,"nodeType":"IfStatement","src":"19274:92:20","trueBody":{"id":4333,"nodeType":"Block","src":"19296:70:20","statements":[{"expression":{"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4325,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"19314:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4328,"nodeType":"ExpressionStatement","src":"19314:10:20"},{"expression":{"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4329,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"19342:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4332,"nodeType":"ExpressionStatement","src":"19342:9:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4335,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"19383:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4339,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4350,"nodeType":"IfStatement","src":"19379:90:20","trueBody":{"id":4349,"nodeType":"Block","src":"19400:69:20","statements":[{"expression":{"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4341,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"19418:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4344,"nodeType":"ExpressionStatement","src":"19418:9:20"},{"expression":{"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4345,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"19445:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4348,"nodeType":"ExpressionStatement","src":"19445:9:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4351,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"19486:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4355,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4366,"nodeType":"IfStatement","src":"19482:90:20","trueBody":{"id":4365,"nodeType":"Block","src":"19503:69:20","statements":[{"expression":{"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4357,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"19521:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4360,"nodeType":"ExpressionStatement","src":"19521:9:20"},{"expression":{"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4361,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"19548:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4364,"nodeType":"ExpressionStatement","src":"19548:9:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4367,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"19589:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:20","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4371,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:20","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4382,"nodeType":"IfStatement","src":"19585:89:20","trueBody":{"id":4381,"nodeType":"Block","src":"19606:68:20","statements":[{"expression":{"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4373,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"19624:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4376,"nodeType":"ExpressionStatement","src":"19624:9:20"},{"expression":{"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4377,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"19651:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4380,"nodeType":"ExpressionStatement","src":"19651:8:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4383,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"19691:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:20","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4387,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:20","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4398,"nodeType":"IfStatement","src":"19687:87:20","trueBody":{"id":4397,"nodeType":"Block","src":"19707:67:20","statements":[{"expression":{"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4389,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"19725:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4392,"nodeType":"ExpressionStatement","src":"19725:8:20"},{"expression":{"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4393,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"19751:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4396,"nodeType":"ExpressionStatement","src":"19751:8:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4399,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"19791:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4403,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4414,"nodeType":"IfStatement","src":"19787:87:20","trueBody":{"id":4413,"nodeType":"Block","src":"19807:67:20","statements":[{"expression":{"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4405,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"19825:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4408,"nodeType":"ExpressionStatement","src":"19825:8:20"},{"expression":{"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4409,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"19851:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4412,"nodeType":"ExpressionStatement","src":"19851:8:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4415,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"19891:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4419,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4426,"nodeType":"IfStatement","src":"19887:61:20","trueBody":{"id":4425,"nodeType":"Block","src":"19907:41:20","statements":[{"expression":{"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4421,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"19925:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4424,"nodeType":"ExpressionStatement","src":"19925:8:20"}]}},{"expression":{"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4427,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"20368:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4429,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"20378:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4431,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4435,"nodeType":"ExpressionStatement","src":"20368:18:20"},{"expression":{"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4436,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"22273:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4437,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"22279:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4438,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"22284:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4439,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"22288:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4442,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4446,"nodeType":"ExpressionStatement","src":"22273:23:20"},{"expression":{"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4447,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"22382:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4448,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"22388:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4449,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"22393:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4450,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"22397:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4453,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4457,"nodeType":"ExpressionStatement","src":"22382:23:20"},{"expression":{"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4458,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"22493:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4459,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"22499:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4460,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"22504:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4461,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"22508:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4464,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4468,"nodeType":"ExpressionStatement","src":"22493:23:20"},{"expression":{"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4469,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"22602:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4470,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"22608:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4471,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"22613:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4472,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"22617:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4475,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4479,"nodeType":"ExpressionStatement","src":"22602:23:20"},{"expression":{"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4480,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"22712:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4481,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"22718:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4482,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"22723:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4483,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"22727:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4486,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4490,"nodeType":"ExpressionStatement","src":"22712:23:20"},{"expression":{"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4491,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"22822:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4492,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"22828:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4493,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"22833:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4494,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"22837:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4497,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4501,"nodeType":"ExpressionStatement","src":"22822:23:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4502,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"23211:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4505,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"23232:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4506,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"23237:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4507,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"23241:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4503,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"23216:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6901_$","typeString":"type(library SafeCast)"}},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6900,"src":"23216:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4303,"id":4512,"nodeType":"Return","src":"23204:40:20"}]}]},"documentation":{"id":4297,"nodeType":"StructuredDocumentation","src":"17783:292:20","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4515,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:20","nodeType":"FunctionDefinition","parameters":{"id":4300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4299,"mutability":"mutable","name":"a","nameLocation":"18102:1:20","nodeType":"VariableDeclaration","scope":4515,"src":"18094:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4298,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:20"},"returnParameters":{"id":4303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4515,"src":"18128:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4301,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:20"},"scope":5136,"src":"18080:5181:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4548,"nodeType":"Block","src":"23434:171:20","statements":[{"id":4547,"nodeType":"UncheckedBlock","src":"23444:155:20","statements":[{"assignments":[4527],"declarations":[{"constant":false,"id":4527,"mutability":"mutable","name":"result","nameLocation":"23476:6:20","nodeType":"VariableDeclaration","scope":4547,"src":"23468:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4526,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4531,"initialValue":{"arguments":[{"id":4529,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"23490:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4528,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4515,4549],"referencedDeclaration":4515,"src":"23485:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4532,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4527,"src":"23513:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4536,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4521,"src":"23555:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3542","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3542","typeString":"enum Math.Rounding"}],"id":4535,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5135,"src":"23538:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3542_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4538,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4527,"src":"23568:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4539,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4527,"src":"23577:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4541,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"23586:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4533,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"23522:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6901_$","typeString":"type(library SafeCast)"}},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6900,"src":"23522:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4525,"id":4546,"nodeType":"Return","src":"23506:82:20"}]}]},"documentation":{"id":4516,"nodeType":"StructuredDocumentation","src":"23267:86:20","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4549,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:20","nodeType":"FunctionDefinition","parameters":{"id":4522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4518,"mutability":"mutable","name":"a","nameLocation":"23380:1:20","nodeType":"VariableDeclaration","scope":4549,"src":"23372:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4517,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4521,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:20","nodeType":"VariableDeclaration","scope":4549,"src":"23383:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3542","typeString":"enum Math.Rounding"},"typeName":{"id":4520,"nodeType":"UserDefinedTypeName","pathNode":{"id":4519,"name":"Rounding","nameLocations":["23383:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3542,"src":"23383:8:20"},"referencedDeclaration":3542,"src":"23383:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3542","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:20"},"returnParameters":{"id":4525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4549,"src":"23425:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4523,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:20"},"scope":5136,"src":"23358:247:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4744,"nodeType":"Block","src":"23796:981:20","statements":[{"assignments":[4558],"declarations":[{"constant":false,"id":4558,"mutability":"mutable","name":"result","nameLocation":"23814:6:20","nodeType":"VariableDeclaration","scope":4744,"src":"23806:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4557,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4560,"initialValue":{"hexValue":"30","id":4559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:20"},{"assignments":[4562],"declarations":[{"constant":false,"id":4562,"mutability":"mutable","name":"exp","nameLocation":"23842:3:20","nodeType":"VariableDeclaration","scope":4744,"src":"23834:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4561,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4563,"nodeType":"VariableDeclarationStatement","src":"23834:11:20"},{"id":4741,"nodeType":"UncheckedBlock","src":"23855:893:20","statements":[{"expression":{"id":4578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4564,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"23879:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":4565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"23907:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":4574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4572,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4566,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"23891:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6901_$","typeString":"type(library SafeCast)"}},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6900,"src":"23891:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4579,"nodeType":"ExpressionStatement","src":"23879:51:20"},{"expression":{"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"23944:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4581,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"23954:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4583,"nodeType":"ExpressionStatement","src":"23944:13:20"},{"expression":{"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4584,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"23971:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4585,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"23981:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4587,"nodeType":"ExpressionStatement","src":"23971:13:20"},{"expression":{"id":4602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4588,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"23999:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":4589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"24026:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":4598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4596,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4590,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"24010:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6901_$","typeString":"type(library SafeCast)"}},"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6900,"src":"24010:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4603,"nodeType":"ExpressionStatement","src":"23999:49:20"},{"expression":{"id":4606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"24062:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4605,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"24072:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4607,"nodeType":"ExpressionStatement","src":"24062:13:20"},{"expression":{"id":4610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4608,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"24089:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4609,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"24099:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4611,"nodeType":"ExpressionStatement","src":"24089:13:20"},{"expression":{"id":4626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4612,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"24117:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":4613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"24144:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":4622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4620,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4614,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"24128:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6901_$","typeString":"type(library SafeCast)"}},"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6900,"src":"24128:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4627,"nodeType":"ExpressionStatement","src":"24117:49:20"},{"expression":{"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"24180:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4629,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"24190:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4631,"nodeType":"ExpressionStatement","src":"24180:13:20"},{"expression":{"id":4634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4632,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"24207:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4633,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"24217:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4635,"nodeType":"ExpressionStatement","src":"24207:13:20"},{"expression":{"id":4650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4636,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"24235:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":4637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"24262:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":4646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:20","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4644,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:20","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:20","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4638,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"24246:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6901_$","typeString":"type(library SafeCast)"}},"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6900,"src":"24246:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4651,"nodeType":"ExpressionStatement","src":"24235:49:20"},{"expression":{"id":4654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"24298:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4653,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"24308:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4655,"nodeType":"ExpressionStatement","src":"24298:13:20"},{"expression":{"id":4658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4656,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"24325:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4657,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"24335:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4659,"nodeType":"ExpressionStatement","src":"24325:13:20"},{"expression":{"id":4674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4660,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"24353:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":4661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"24379:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":4670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:20","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4668,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:20","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4662,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"24363:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6901_$","typeString":"type(library SafeCast)"}},"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6900,"src":"24363:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4675,"nodeType":"ExpressionStatement","src":"24353:47:20"},{"expression":{"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"24414:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4677,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"24424:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4679,"nodeType":"ExpressionStatement","src":"24414:13:20"},{"expression":{"id":4682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4680,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"24441:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4681,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"24451:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4683,"nodeType":"ExpressionStatement","src":"24441:13:20"},{"expression":{"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4684,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"24469:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":4685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"24495:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":4694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4692,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:20","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4686,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"24479:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6901_$","typeString":"type(library SafeCast)"}},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6900,"src":"24479:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4699,"nodeType":"ExpressionStatement","src":"24469:47:20"},{"expression":{"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"24530:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4701,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"24540:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4703,"nodeType":"ExpressionStatement","src":"24530:13:20"},{"expression":{"id":4706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4704,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"24557:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4705,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"24567:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4707,"nodeType":"ExpressionStatement","src":"24557:13:20"},{"expression":{"id":4722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4708,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"24585:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"24611:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":4718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4716,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4710,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"24595:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6901_$","typeString":"type(library SafeCast)"}},"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6900,"src":"24595:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4723,"nodeType":"ExpressionStatement","src":"24585:47:20"},{"expression":{"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"24646:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4725,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"24656:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4727,"nodeType":"ExpressionStatement","src":"24646:13:20"},{"expression":{"id":4730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4728,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"24673:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4729,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"24683:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4731,"nodeType":"ExpressionStatement","src":"24673:13:20"},{"expression":{"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4732,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"24701:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"24727:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4733,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"24711:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6901_$","typeString":"type(library SafeCast)"}},"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6900,"src":"24711:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4740,"nodeType":"ExpressionStatement","src":"24701:36:20"}]},{"expression":{"id":4742,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"24764:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4556,"id":4743,"nodeType":"Return","src":"24757:13:20"}]},"documentation":{"id":4550,"nodeType":"StructuredDocumentation","src":"23611:119:20","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4745,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:20","nodeType":"FunctionDefinition","parameters":{"id":4553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4552,"mutability":"mutable","name":"value","nameLocation":"23757:5:20","nodeType":"VariableDeclaration","scope":4745,"src":"23749:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4551,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:20"},"returnParameters":{"id":4556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4745,"src":"23787:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4554,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:20"},"scope":5136,"src":"23735:1042:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4778,"nodeType":"Block","src":"25010:175:20","statements":[{"id":4777,"nodeType":"UncheckedBlock","src":"25020:159:20","statements":[{"assignments":[4757],"declarations":[{"constant":false,"id":4757,"mutability":"mutable","name":"result","nameLocation":"25052:6:20","nodeType":"VariableDeclaration","scope":4777,"src":"25044:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4756,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4761,"initialValue":{"arguments":[{"id":4759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4748,"src":"25066:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4758,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4745,4779],"referencedDeclaration":4745,"src":"25061:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4762,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4757,"src":"25093:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4766,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"25135:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3542","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3542","typeString":"enum Math.Rounding"}],"id":4765,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5135,"src":"25118:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3542_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4769,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4757,"src":"25153:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4748,"src":"25162:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4763,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"25102:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6901_$","typeString":"type(library SafeCast)"}},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6900,"src":"25102:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4755,"id":4776,"nodeType":"Return","src":"25086:82:20"}]}]},"documentation":{"id":4746,"nodeType":"StructuredDocumentation","src":"24783:142:20","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4779,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:20","nodeType":"FunctionDefinition","parameters":{"id":4752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4748,"mutability":"mutable","name":"value","nameLocation":"24952:5:20","nodeType":"VariableDeclaration","scope":4779,"src":"24944:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4747,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4751,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:20","nodeType":"VariableDeclaration","scope":4779,"src":"24959:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3542","typeString":"enum Math.Rounding"},"typeName":{"id":4750,"nodeType":"UserDefinedTypeName","pathNode":{"id":4749,"name":"Rounding","nameLocations":["24959:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3542,"src":"24959:8:20"},"referencedDeclaration":3542,"src":"24959:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3542","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:20"},"returnParameters":{"id":4755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4779,"src":"25001:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4753,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:20"},"scope":5136,"src":"24930:255:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4907,"nodeType":"Block","src":"25378:854:20","statements":[{"assignments":[4788],"declarations":[{"constant":false,"id":4788,"mutability":"mutable","name":"result","nameLocation":"25396:6:20","nodeType":"VariableDeclaration","scope":4907,"src":"25388:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4787,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4790,"initialValue":{"hexValue":"30","id":4789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:20"},{"id":4904,"nodeType":"UncheckedBlock","src":"25416:787:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"25444:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4807,"nodeType":"IfStatement","src":"25440:103:20","trueBody":{"id":4806,"nodeType":"Block","src":"25463:80:20","statements":[{"expression":{"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"25481:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4801,"nodeType":"ExpressionStatement","src":"25481:17:20"},{"expression":{"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4802,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"25516:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4805,"nodeType":"ExpressionStatement","src":"25516:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"25560:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4824,"nodeType":"IfStatement","src":"25556:103:20","trueBody":{"id":4823,"nodeType":"Block","src":"25579:80:20","statements":[{"expression":{"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"25597:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4818,"nodeType":"ExpressionStatement","src":"25597:17:20"},{"expression":{"id":4821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4819,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"25632:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4822,"nodeType":"ExpressionStatement","src":"25632:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"25676:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4841,"nodeType":"IfStatement","src":"25672:103:20","trueBody":{"id":4840,"nodeType":"Block","src":"25695:80:20","statements":[{"expression":{"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"25713:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4835,"nodeType":"ExpressionStatement","src":"25713:17:20"},{"expression":{"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4836,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"25748:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4839,"nodeType":"ExpressionStatement","src":"25748:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"25792:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4858,"nodeType":"IfStatement","src":"25788:100:20","trueBody":{"id":4857,"nodeType":"Block","src":"25810:78:20","statements":[{"expression":{"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"25828:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4852,"nodeType":"ExpressionStatement","src":"25828:16:20"},{"expression":{"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4853,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"25862:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4856,"nodeType":"ExpressionStatement","src":"25862:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"25905:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4875,"nodeType":"IfStatement","src":"25901:100:20","trueBody":{"id":4874,"nodeType":"Block","src":"25923:78:20","statements":[{"expression":{"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"25941:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4869,"nodeType":"ExpressionStatement","src":"25941:16:20"},{"expression":{"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4870,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"25975:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4873,"nodeType":"ExpressionStatement","src":"25975:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"26018:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4892,"nodeType":"IfStatement","src":"26014:100:20","trueBody":{"id":4891,"nodeType":"Block","src":"26036:78:20","statements":[{"expression":{"id":4885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"26054:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4886,"nodeType":"ExpressionStatement","src":"26054:16:20"},{"expression":{"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4887,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"26088:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4890,"nodeType":"ExpressionStatement","src":"26088:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"26131:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4903,"nodeType":"IfStatement","src":"26127:66:20","trueBody":{"id":4902,"nodeType":"Block","src":"26149:44:20","statements":[{"expression":{"id":4900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4898,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"26167:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4901,"nodeType":"ExpressionStatement","src":"26167:11:20"}]}}]},{"expression":{"id":4905,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"26219:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4786,"id":4906,"nodeType":"Return","src":"26212:13:20"}]},"documentation":{"id":4780,"nodeType":"StructuredDocumentation","src":"25191:120:20","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4908,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:20","nodeType":"FunctionDefinition","parameters":{"id":4783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4782,"mutability":"mutable","name":"value","nameLocation":"25339:5:20","nodeType":"VariableDeclaration","scope":4908,"src":"25331:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4781,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:20"},"returnParameters":{"id":4786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4908,"src":"25369:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4784,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:20"},"scope":5136,"src":"25316:916:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4941,"nodeType":"Block","src":"26467:177:20","statements":[{"id":4940,"nodeType":"UncheckedBlock","src":"26477:161:20","statements":[{"assignments":[4920],"declarations":[{"constant":false,"id":4920,"mutability":"mutable","name":"result","nameLocation":"26509:6:20","nodeType":"VariableDeclaration","scope":4940,"src":"26501:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4919,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4924,"initialValue":{"arguments":[{"id":4922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4911,"src":"26524:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4921,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4908,4942],"referencedDeclaration":4908,"src":"26518:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4925,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"26551:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4929,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4914,"src":"26593:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3542","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3542","typeString":"enum Math.Rounding"}],"id":4928,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5135,"src":"26576:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3542_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4932,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"26612:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4911,"src":"26621:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4926,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"26560:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6901_$","typeString":"type(library SafeCast)"}},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6900,"src":"26560:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4918,"id":4939,"nodeType":"Return","src":"26544:83:20"}]}]},"documentation":{"id":4909,"nodeType":"StructuredDocumentation","src":"26238:143:20","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4942,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:20","nodeType":"FunctionDefinition","parameters":{"id":4915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4911,"mutability":"mutable","name":"value","nameLocation":"26409:5:20","nodeType":"VariableDeclaration","scope":4942,"src":"26401:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4910,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4914,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:20","nodeType":"VariableDeclaration","scope":4942,"src":"26416:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3542","typeString":"enum Math.Rounding"},"typeName":{"id":4913,"nodeType":"UserDefinedTypeName","pathNode":{"id":4912,"name":"Rounding","nameLocations":["26416:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3542,"src":"26416:8:20"},"referencedDeclaration":3542,"src":"26416:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3542","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:20"},"returnParameters":{"id":4918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4942,"src":"26458:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4916,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:20"},"scope":5136,"src":"26386:258:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5078,"nodeType":"Block","src":"26964:674:20","statements":[{"assignments":[4951],"declarations":[{"constant":false,"id":4951,"mutability":"mutable","name":"result","nameLocation":"26982:6:20","nodeType":"VariableDeclaration","scope":5078,"src":"26974:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4950,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4953,"initialValue":{"hexValue":"30","id":4952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:20"},{"assignments":[4955],"declarations":[{"constant":false,"id":4955,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:20","nodeType":"VariableDeclaration","scope":5078,"src":"27002:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4954,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4956,"nodeType":"VariableDeclarationStatement","src":"27002:12:20"},{"id":5075,"nodeType":"UncheckedBlock","src":"27024:585:20","statements":[{"expression":{"id":4969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4957,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4955,"src":"27048:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"27071:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":4966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4964,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4958,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"27055:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6901_$","typeString":"type(library SafeCast)"}},"id":4959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6900,"src":"27055:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4970,"nodeType":"ExpressionStatement","src":"27048:46:20"},{"expression":{"id":4975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"27108:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4972,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4955,"src":"27118:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":4973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4976,"nodeType":"ExpressionStatement","src":"27108:20:20"},{"expression":{"id":4981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4977,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"27142:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4978,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4955,"src":"27152:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":4979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4982,"nodeType":"ExpressionStatement","src":"27142:19:20"},{"expression":{"id":4995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4983,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4955,"src":"27176:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"27199:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":4992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4990,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4984,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"27183:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6901_$","typeString":"type(library SafeCast)"}},"id":4985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6900,"src":"27183:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4996,"nodeType":"ExpressionStatement","src":"27176:45:20"},{"expression":{"id":5001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4997,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"27235:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4998,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4955,"src":"27245:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":4999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5002,"nodeType":"ExpressionStatement","src":"27235:19:20"},{"expression":{"id":5007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5003,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"27268:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5004,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4955,"src":"27278:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":5005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5008,"nodeType":"ExpressionStatement","src":"27268:18:20"},{"expression":{"id":5021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5009,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4955,"src":"27301:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"27324:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":5018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5016,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5010,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"27308:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6901_$","typeString":"type(library SafeCast)"}},"id":5011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6900,"src":"27308:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5022,"nodeType":"ExpressionStatement","src":"27301:45:20"},{"expression":{"id":5027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"27360:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5024,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4955,"src":"27370:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":5025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5028,"nodeType":"ExpressionStatement","src":"27360:19:20"},{"expression":{"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5029,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"27393:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5030,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4955,"src":"27403:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":5031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5034,"nodeType":"ExpressionStatement","src":"27393:18:20"},{"expression":{"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5035,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4955,"src":"27426:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"27449:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":5044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:20","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5042,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:20","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:20","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5036,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"27433:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6901_$","typeString":"type(library SafeCast)"}},"id":5037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6900,"src":"27433:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5048,"nodeType":"ExpressionStatement","src":"27426:45:20"},{"expression":{"id":5053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"27485:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5050,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4955,"src":"27495:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":5051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5054,"nodeType":"ExpressionStatement","src":"27485:19:20"},{"expression":{"id":5059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5055,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"27518:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5056,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4955,"src":"27528:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5060,"nodeType":"ExpressionStatement","src":"27518:18:20"},{"expression":{"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5061,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"27551:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"27577:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":5070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:20","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5068,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:20","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5062,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"27561:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6901_$","typeString":"type(library SafeCast)"}},"id":5063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6900,"src":"27561:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5074,"nodeType":"ExpressionStatement","src":"27551:47:20"}]},{"expression":{"id":5076,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"27625:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4949,"id":5077,"nodeType":"Return","src":"27618:13:20"}]},"documentation":{"id":4943,"nodeType":"StructuredDocumentation","src":"26650:246:20","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5079,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:20","nodeType":"FunctionDefinition","parameters":{"id":4946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4945,"mutability":"mutable","name":"value","nameLocation":"26925:5:20","nodeType":"VariableDeclaration","scope":5079,"src":"26917:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4944,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:20"},"returnParameters":{"id":4949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5079,"src":"26955:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4947,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:20"},"scope":5136,"src":"26901:737:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5115,"nodeType":"Block","src":"27875:184:20","statements":[{"id":5114,"nodeType":"UncheckedBlock","src":"27885:168:20","statements":[{"assignments":[5091],"declarations":[{"constant":false,"id":5091,"mutability":"mutable","name":"result","nameLocation":"27917:6:20","nodeType":"VariableDeclaration","scope":5114,"src":"27909:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5090,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5095,"initialValue":{"arguments":[{"id":5093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"27933:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5092,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5079,5116],"referencedDeclaration":5079,"src":"27926:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5096,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5091,"src":"27960:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5100,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5085,"src":"28002:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3542","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3542","typeString":"enum Math.Rounding"}],"id":5099,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5135,"src":"27985:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3542_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5103,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5091,"src":"28021:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5106,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"28036:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5097,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"27969:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6901_$","typeString":"type(library SafeCast)"}},"id":5098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6900,"src":"27969:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5089,"id":5113,"nodeType":"Return","src":"27953:89:20"}]}]},"documentation":{"id":5080,"nodeType":"StructuredDocumentation","src":"27644:144:20","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5116,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:20","nodeType":"FunctionDefinition","parameters":{"id":5086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5082,"mutability":"mutable","name":"value","nameLocation":"27817:5:20","nodeType":"VariableDeclaration","scope":5116,"src":"27809:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5081,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5085,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:20","nodeType":"VariableDeclaration","scope":5116,"src":"27824:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3542","typeString":"enum Math.Rounding"},"typeName":{"id":5084,"nodeType":"UserDefinedTypeName","pathNode":{"id":5083,"name":"Rounding","nameLocations":["27824:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3542,"src":"27824:8:20"},"referencedDeclaration":3542,"src":"27824:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3542","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:20"},"returnParameters":{"id":5089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5116,"src":"27866:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5087,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:20"},"scope":5136,"src":"27793:266:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5134,"nodeType":"Block","src":"28257:48:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5127,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5120,"src":"28280:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3542","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3542","typeString":"enum Math.Rounding"}],"id":5126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5125,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:20","typeDescriptions":{}}},"id":5128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5124,"id":5133,"nodeType":"Return","src":"28267:31:20"}]},"documentation":{"id":5117,"nodeType":"StructuredDocumentation","src":"28065:113:20","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5135,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:20","nodeType":"FunctionDefinition","parameters":{"id":5121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5120,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:20","nodeType":"VariableDeclaration","scope":5135,"src":"28209:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3542","typeString":"enum Math.Rounding"},"typeName":{"id":5119,"nodeType":"UserDefinedTypeName","pathNode":{"id":5118,"name":"Rounding","nameLocations":["28209:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3542,"src":"28209:8:20"},"referencedDeclaration":3542,"src":"28209:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3542","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:20"},"returnParameters":{"id":5124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5135,"src":"28251:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5122,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:20"},"scope":5136,"src":"28183:122:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5137,"src":"281:28026:20","usedErrors":[],"usedEvents":[]}],"src":"103:28205:20"},"id":20},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6901]},"id":6902,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5138,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5139,"nodeType":"StructuredDocumentation","src":"218:550:21","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6901,"linearizedBaseContracts":[6901],"name":"SafeCast","nameLocation":"777:8:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5140,"nodeType":"StructuredDocumentation","src":"792:68:21","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5146,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:21","nodeType":"ErrorDefinition","parameters":{"id":5145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5142,"mutability":"mutable","name":"bits","nameLocation":"908:4:21","nodeType":"VariableDeclaration","scope":5146,"src":"902:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5141,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5144,"mutability":"mutable","name":"value","nameLocation":"922:5:21","nodeType":"VariableDeclaration","scope":5146,"src":"914:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5143,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:21"},"src":"865:64:21"},{"documentation":{"id":5147,"nodeType":"StructuredDocumentation","src":"935:75:21","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5151,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:21","nodeType":"ErrorDefinition","parameters":{"id":5150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5149,"mutability":"mutable","name":"value","nameLocation":"1056:5:21","nodeType":"VariableDeclaration","scope":5151,"src":"1049:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5148,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:21"},"src":"1015:48:21"},{"documentation":{"id":5152,"nodeType":"StructuredDocumentation","src":"1069:67:21","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5158,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:21","nodeType":"ErrorDefinition","parameters":{"id":5157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5154,"mutability":"mutable","name":"bits","nameLocation":"1183:4:21","nodeType":"VariableDeclaration","scope":5158,"src":"1177:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5153,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5156,"mutability":"mutable","name":"value","nameLocation":"1196:5:21","nodeType":"VariableDeclaration","scope":5158,"src":"1189:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5155,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:21"},"src":"1141:62:21"},{"documentation":{"id":5159,"nodeType":"StructuredDocumentation","src":"1209:75:21","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5163,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:21","nodeType":"ErrorDefinition","parameters":{"id":5162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5161,"mutability":"mutable","name":"value","nameLocation":"1331:5:21","nodeType":"VariableDeclaration","scope":5163,"src":"1323:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5160,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:21"},"src":"1289:49:21"},{"body":{"id":5190,"nodeType":"Block","src":"1695:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"1709:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5173,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5172,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:21","memberName":"max","nodeType":"MemberAccess","src":"1717:17:21","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5184,"nodeType":"IfStatement","src":"1705:105:21","trueBody":{"id":5183,"nodeType":"Block","src":"1736:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:21","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"1793:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5178,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"1757:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5182,"nodeType":"RevertStatement","src":"1750:49:21"}]}},{"expression":{"arguments":[{"id":5187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"1834:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5185,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:21","typeDescriptions":{}}},"id":5188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5170,"id":5189,"nodeType":"Return","src":"1819:21:21"}]},"documentation":{"id":5164,"nodeType":"StructuredDocumentation","src":"1344:280:21","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5191,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:21","nodeType":"FunctionDefinition","parameters":{"id":5167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5166,"mutability":"mutable","name":"value","nameLocation":"1656:5:21","nodeType":"VariableDeclaration","scope":5191,"src":"1648:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5165,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:21"},"returnParameters":{"id":5170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5191,"src":"1686:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5168,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:21","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:21"},"scope":6901,"src":"1629:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5218,"nodeType":"Block","src":"2204:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5194,"src":"2218:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5201,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5200,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:21","memberName":"max","nodeType":"MemberAccess","src":"2226:17:21","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5212,"nodeType":"IfStatement","src":"2214:105:21","trueBody":{"id":5211,"nodeType":"Block","src":"2245:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:21","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5194,"src":"2302:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5206,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"2266:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5210,"nodeType":"RevertStatement","src":"2259:49:21"}]}},{"expression":{"arguments":[{"id":5215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5194,"src":"2343:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5213,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:21","typeDescriptions":{}}},"id":5216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5198,"id":5217,"nodeType":"Return","src":"2328:21:21"}]},"documentation":{"id":5192,"nodeType":"StructuredDocumentation","src":"1853:280:21","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5219,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:21","nodeType":"FunctionDefinition","parameters":{"id":5195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5194,"mutability":"mutable","name":"value","nameLocation":"2165:5:21","nodeType":"VariableDeclaration","scope":5219,"src":"2157:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5193,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:21"},"returnParameters":{"id":5198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5219,"src":"2195:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5196,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:21","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:21"},"scope":6901,"src":"2138:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5246,"nodeType":"Block","src":"2713:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"2727:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5229,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5228,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:21","memberName":"max","nodeType":"MemberAccess","src":"2735:17:21","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5240,"nodeType":"IfStatement","src":"2723:105:21","trueBody":{"id":5239,"nodeType":"Block","src":"2754:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:21","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"2811:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5234,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"2775:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5238,"nodeType":"RevertStatement","src":"2768:49:21"}]}},{"expression":{"arguments":[{"id":5243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"2852:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5241,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:21","typeDescriptions":{}}},"id":5244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5226,"id":5245,"nodeType":"Return","src":"2837:21:21"}]},"documentation":{"id":5220,"nodeType":"StructuredDocumentation","src":"2362:280:21","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5247,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:21","nodeType":"FunctionDefinition","parameters":{"id":5223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5222,"mutability":"mutable","name":"value","nameLocation":"2674:5:21","nodeType":"VariableDeclaration","scope":5247,"src":"2666:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5221,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:21"},"returnParameters":{"id":5226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5247,"src":"2704:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5224,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:21","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:21"},"scope":6901,"src":"2647:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5274,"nodeType":"Block","src":"3222:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"3236:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5257,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5256,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:21","memberName":"max","nodeType":"MemberAccess","src":"3244:17:21","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5268,"nodeType":"IfStatement","src":"3232:105:21","trueBody":{"id":5267,"nodeType":"Block","src":"3263:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:21","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"3320:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5262,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"3284:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5266,"nodeType":"RevertStatement","src":"3277:49:21"}]}},{"expression":{"arguments":[{"id":5271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"3361:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5269,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:21","typeDescriptions":{}}},"id":5272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5254,"id":5273,"nodeType":"Return","src":"3346:21:21"}]},"documentation":{"id":5248,"nodeType":"StructuredDocumentation","src":"2871:280:21","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5275,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:21","nodeType":"FunctionDefinition","parameters":{"id":5251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5250,"mutability":"mutable","name":"value","nameLocation":"3183:5:21","nodeType":"VariableDeclaration","scope":5275,"src":"3175:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5249,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:21"},"returnParameters":{"id":5254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5275,"src":"3213:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5252,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:21","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:21"},"scope":6901,"src":"3156:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5302,"nodeType":"Block","src":"3731:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5278,"src":"3745:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5285,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5284,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:21","memberName":"max","nodeType":"MemberAccess","src":"3753:17:21","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5296,"nodeType":"IfStatement","src":"3741:105:21","trueBody":{"id":5295,"nodeType":"Block","src":"3772:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:21","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5278,"src":"3829:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5290,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"3793:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5294,"nodeType":"RevertStatement","src":"3786:49:21"}]}},{"expression":{"arguments":[{"id":5299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5278,"src":"3870:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5297,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:21","typeDescriptions":{}}},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5282,"id":5301,"nodeType":"Return","src":"3855:21:21"}]},"documentation":{"id":5276,"nodeType":"StructuredDocumentation","src":"3380:280:21","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5303,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:21","nodeType":"FunctionDefinition","parameters":{"id":5279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5278,"mutability":"mutable","name":"value","nameLocation":"3692:5:21","nodeType":"VariableDeclaration","scope":5303,"src":"3684:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5277,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:21"},"returnParameters":{"id":5282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5281,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5303,"src":"3722:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5280,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:21","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:21"},"scope":6901,"src":"3665:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5330,"nodeType":"Block","src":"4240:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"4254:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5313,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5312,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:21","memberName":"max","nodeType":"MemberAccess","src":"4262:17:21","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5324,"nodeType":"IfStatement","src":"4250:105:21","trueBody":{"id":5323,"nodeType":"Block","src":"4281:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:21","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"4338:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5318,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"4302:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5322,"nodeType":"RevertStatement","src":"4295:49:21"}]}},{"expression":{"arguments":[{"id":5327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"4379:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5325,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:21","typeDescriptions":{}}},"id":5328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5310,"id":5329,"nodeType":"Return","src":"4364:21:21"}]},"documentation":{"id":5304,"nodeType":"StructuredDocumentation","src":"3889:280:21","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5331,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:21","nodeType":"FunctionDefinition","parameters":{"id":5307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5306,"mutability":"mutable","name":"value","nameLocation":"4201:5:21","nodeType":"VariableDeclaration","scope":5331,"src":"4193:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5305,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:21"},"returnParameters":{"id":5310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5331,"src":"4231:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5308,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:21","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:21"},"scope":6901,"src":"4174:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5358,"nodeType":"Block","src":"4749:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"4763:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5341,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5340,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:21","memberName":"max","nodeType":"MemberAccess","src":"4771:17:21","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5352,"nodeType":"IfStatement","src":"4759:105:21","trueBody":{"id":5351,"nodeType":"Block","src":"4790:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:21","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"4847:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5346,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"4811:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5350,"nodeType":"RevertStatement","src":"4804:49:21"}]}},{"expression":{"arguments":[{"id":5355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"4888:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5353,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:21","typeDescriptions":{}}},"id":5356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5338,"id":5357,"nodeType":"Return","src":"4873:21:21"}]},"documentation":{"id":5332,"nodeType":"StructuredDocumentation","src":"4398:280:21","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5359,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:21","nodeType":"FunctionDefinition","parameters":{"id":5335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5334,"mutability":"mutable","name":"value","nameLocation":"4710:5:21","nodeType":"VariableDeclaration","scope":5359,"src":"4702:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5333,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:21"},"returnParameters":{"id":5338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5359,"src":"4740:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5336,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:21","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:21"},"scope":6901,"src":"4683:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5386,"nodeType":"Block","src":"5258:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"5272:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5369,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5368,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:21","memberName":"max","nodeType":"MemberAccess","src":"5280:17:21","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5380,"nodeType":"IfStatement","src":"5268:105:21","trueBody":{"id":5379,"nodeType":"Block","src":"5299:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:21","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"5356:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5374,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"5320:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5378,"nodeType":"RevertStatement","src":"5313:49:21"}]}},{"expression":{"arguments":[{"id":5383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"5397:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5381,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:21","typeDescriptions":{}}},"id":5384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5366,"id":5385,"nodeType":"Return","src":"5382:21:21"}]},"documentation":{"id":5360,"nodeType":"StructuredDocumentation","src":"4907:280:21","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5387,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:21","nodeType":"FunctionDefinition","parameters":{"id":5363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5362,"mutability":"mutable","name":"value","nameLocation":"5219:5:21","nodeType":"VariableDeclaration","scope":5387,"src":"5211:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5361,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:21"},"returnParameters":{"id":5366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5387,"src":"5249:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5364,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:21","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:21"},"scope":6901,"src":"5192:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5414,"nodeType":"Block","src":"5767:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"5781:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5397,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5396,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:21","memberName":"max","nodeType":"MemberAccess","src":"5789:17:21","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5408,"nodeType":"IfStatement","src":"5777:105:21","trueBody":{"id":5407,"nodeType":"Block","src":"5808:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:21","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"5865:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5402,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"5829:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5406,"nodeType":"RevertStatement","src":"5822:49:21"}]}},{"expression":{"arguments":[{"id":5411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"5906:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5409,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:21","typeDescriptions":{}}},"id":5412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5394,"id":5413,"nodeType":"Return","src":"5891:21:21"}]},"documentation":{"id":5388,"nodeType":"StructuredDocumentation","src":"5416:280:21","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5415,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:21","nodeType":"FunctionDefinition","parameters":{"id":5391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5390,"mutability":"mutable","name":"value","nameLocation":"5728:5:21","nodeType":"VariableDeclaration","scope":5415,"src":"5720:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5389,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:21"},"returnParameters":{"id":5394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5415,"src":"5758:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5392,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:21","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:21"},"scope":6901,"src":"5701:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5442,"nodeType":"Block","src":"6276:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"6290:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5425,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5424,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:21","memberName":"max","nodeType":"MemberAccess","src":"6298:17:21","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5436,"nodeType":"IfStatement","src":"6286:105:21","trueBody":{"id":5435,"nodeType":"Block","src":"6317:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:21","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"6374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5430,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"6338:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5434,"nodeType":"RevertStatement","src":"6331:49:21"}]}},{"expression":{"arguments":[{"id":5439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"6415:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5437,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:21","typeDescriptions":{}}},"id":5440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5422,"id":5441,"nodeType":"Return","src":"6400:21:21"}]},"documentation":{"id":5416,"nodeType":"StructuredDocumentation","src":"5925:280:21","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5443,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:21","nodeType":"FunctionDefinition","parameters":{"id":5419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5418,"mutability":"mutable","name":"value","nameLocation":"6237:5:21","nodeType":"VariableDeclaration","scope":5443,"src":"6229:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5417,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:21"},"returnParameters":{"id":5422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5443,"src":"6267:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5420,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:21","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:21"},"scope":6901,"src":"6210:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5470,"nodeType":"Block","src":"6785:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"6799:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5453,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5452,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:21","memberName":"max","nodeType":"MemberAccess","src":"6807:17:21","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5464,"nodeType":"IfStatement","src":"6795:105:21","trueBody":{"id":5463,"nodeType":"Block","src":"6826:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:21","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"6883:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5458,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"6847:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5462,"nodeType":"RevertStatement","src":"6840:49:21"}]}},{"expression":{"arguments":[{"id":5467,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"6924:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5465,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:21","typeDescriptions":{}}},"id":5468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5450,"id":5469,"nodeType":"Return","src":"6909:21:21"}]},"documentation":{"id":5444,"nodeType":"StructuredDocumentation","src":"6434:280:21","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5471,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:21","nodeType":"FunctionDefinition","parameters":{"id":5447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5446,"mutability":"mutable","name":"value","nameLocation":"6746:5:21","nodeType":"VariableDeclaration","scope":5471,"src":"6738:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5445,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:21"},"returnParameters":{"id":5450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5471,"src":"6776:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5448,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:21","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:21"},"scope":6901,"src":"6719:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5498,"nodeType":"Block","src":"7294:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"7308:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5481,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5480,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:21","memberName":"max","nodeType":"MemberAccess","src":"7316:17:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5492,"nodeType":"IfStatement","src":"7304:105:21","trueBody":{"id":5491,"nodeType":"Block","src":"7335:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:21","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"7392:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5486,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"7356:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5490,"nodeType":"RevertStatement","src":"7349:49:21"}]}},{"expression":{"arguments":[{"id":5495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"7433:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5493,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:21","typeDescriptions":{}}},"id":5496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5478,"id":5497,"nodeType":"Return","src":"7418:21:21"}]},"documentation":{"id":5472,"nodeType":"StructuredDocumentation","src":"6943:280:21","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5499,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:21","nodeType":"FunctionDefinition","parameters":{"id":5475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5474,"mutability":"mutable","name":"value","nameLocation":"7255:5:21","nodeType":"VariableDeclaration","scope":5499,"src":"7247:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5473,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:21"},"returnParameters":{"id":5478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5499,"src":"7285:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5476,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:21"},"scope":6901,"src":"7228:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5526,"nodeType":"Block","src":"7803:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"7817:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5509,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5508,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:21","memberName":"max","nodeType":"MemberAccess","src":"7825:17:21","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5520,"nodeType":"IfStatement","src":"7813:105:21","trueBody":{"id":5519,"nodeType":"Block","src":"7844:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:21","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"7901:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5514,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"7865:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5518,"nodeType":"RevertStatement","src":"7858:49:21"}]}},{"expression":{"arguments":[{"id":5523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"7942:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5521,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:21","typeDescriptions":{}}},"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5506,"id":5525,"nodeType":"Return","src":"7927:21:21"}]},"documentation":{"id":5500,"nodeType":"StructuredDocumentation","src":"7452:280:21","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5527,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:21","nodeType":"FunctionDefinition","parameters":{"id":5503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5502,"mutability":"mutable","name":"value","nameLocation":"7764:5:21","nodeType":"VariableDeclaration","scope":5527,"src":"7756:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5501,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:21"},"returnParameters":{"id":5506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5527,"src":"7794:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5504,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:21","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:21"},"scope":6901,"src":"7737:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5554,"nodeType":"Block","src":"8312:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5530,"src":"8326:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5537,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5536,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:21","memberName":"max","nodeType":"MemberAccess","src":"8334:17:21","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5548,"nodeType":"IfStatement","src":"8322:105:21","trueBody":{"id":5547,"nodeType":"Block","src":"8353:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:21","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5530,"src":"8410:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5542,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"8374:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5546,"nodeType":"RevertStatement","src":"8367:49:21"}]}},{"expression":{"arguments":[{"id":5551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5530,"src":"8451:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5549,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:21","typeDescriptions":{}}},"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5534,"id":5553,"nodeType":"Return","src":"8436:21:21"}]},"documentation":{"id":5528,"nodeType":"StructuredDocumentation","src":"7961:280:21","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5555,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:21","nodeType":"FunctionDefinition","parameters":{"id":5531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5530,"mutability":"mutable","name":"value","nameLocation":"8273:5:21","nodeType":"VariableDeclaration","scope":5555,"src":"8265:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5529,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:21"},"returnParameters":{"id":5534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5555,"src":"8303:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5532,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:21","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:21"},"scope":6901,"src":"8246:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5582,"nodeType":"Block","src":"8821:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5558,"src":"8835:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5565,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5564,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:21","memberName":"max","nodeType":"MemberAccess","src":"8843:17:21","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5576,"nodeType":"IfStatement","src":"8831:105:21","trueBody":{"id":5575,"nodeType":"Block","src":"8862:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:21","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5558,"src":"8919:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5570,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"8883:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5574,"nodeType":"RevertStatement","src":"8876:49:21"}]}},{"expression":{"arguments":[{"id":5579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5558,"src":"8960:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5577,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:21","typeDescriptions":{}}},"id":5580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5562,"id":5581,"nodeType":"Return","src":"8945:21:21"}]},"documentation":{"id":5556,"nodeType":"StructuredDocumentation","src":"8470:280:21","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5583,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:21","nodeType":"FunctionDefinition","parameters":{"id":5559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5558,"mutability":"mutable","name":"value","nameLocation":"8782:5:21","nodeType":"VariableDeclaration","scope":5583,"src":"8774:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5557,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:21"},"returnParameters":{"id":5562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5583,"src":"8812:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5560,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:21","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:21"},"scope":6901,"src":"8755:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5610,"nodeType":"Block","src":"9330:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"9344:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5593,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5592,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:21","memberName":"max","nodeType":"MemberAccess","src":"9352:17:21","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5604,"nodeType":"IfStatement","src":"9340:105:21","trueBody":{"id":5603,"nodeType":"Block","src":"9371:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"9428:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5598,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"9392:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5602,"nodeType":"RevertStatement","src":"9385:49:21"}]}},{"expression":{"arguments":[{"id":5607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"9469:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5605,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:21","typeDescriptions":{}}},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5590,"id":5609,"nodeType":"Return","src":"9454:21:21"}]},"documentation":{"id":5584,"nodeType":"StructuredDocumentation","src":"8979:280:21","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5611,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:21","nodeType":"FunctionDefinition","parameters":{"id":5587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5586,"mutability":"mutable","name":"value","nameLocation":"9291:5:21","nodeType":"VariableDeclaration","scope":5611,"src":"9283:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5585,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:21"},"returnParameters":{"id":5590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5611,"src":"9321:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5588,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:21","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:21"},"scope":6901,"src":"9264:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5638,"nodeType":"Block","src":"9839:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"9853:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5621,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5620,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:21","memberName":"max","nodeType":"MemberAccess","src":"9861:17:21","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5632,"nodeType":"IfStatement","src":"9849:105:21","trueBody":{"id":5631,"nodeType":"Block","src":"9880:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:21","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"9937:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5626,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"9901:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5630,"nodeType":"RevertStatement","src":"9894:49:21"}]}},{"expression":{"arguments":[{"id":5635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"9978:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5633,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:21","typeDescriptions":{}}},"id":5636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5618,"id":5637,"nodeType":"Return","src":"9963:21:21"}]},"documentation":{"id":5612,"nodeType":"StructuredDocumentation","src":"9488:280:21","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5639,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:21","nodeType":"FunctionDefinition","parameters":{"id":5615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5614,"mutability":"mutable","name":"value","nameLocation":"9800:5:21","nodeType":"VariableDeclaration","scope":5639,"src":"9792:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5613,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:21"},"returnParameters":{"id":5618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5639,"src":"9830:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5616,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:21","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:21"},"scope":6901,"src":"9773:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5666,"nodeType":"Block","src":"10348:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"10362:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5649,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5648,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:21","memberName":"max","nodeType":"MemberAccess","src":"10370:17:21","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5660,"nodeType":"IfStatement","src":"10358:105:21","trueBody":{"id":5659,"nodeType":"Block","src":"10389:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:21","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"10446:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5654,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"10410:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5658,"nodeType":"RevertStatement","src":"10403:49:21"}]}},{"expression":{"arguments":[{"id":5663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"10487:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5661,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:21","typeDescriptions":{}}},"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5646,"id":5665,"nodeType":"Return","src":"10472:21:21"}]},"documentation":{"id":5640,"nodeType":"StructuredDocumentation","src":"9997:280:21","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5667,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:21","nodeType":"FunctionDefinition","parameters":{"id":5643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5642,"mutability":"mutable","name":"value","nameLocation":"10309:5:21","nodeType":"VariableDeclaration","scope":5667,"src":"10301:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5641,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:21"},"returnParameters":{"id":5646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5667,"src":"10339:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5644,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:21","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:21"},"scope":6901,"src":"10282:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5694,"nodeType":"Block","src":"10857:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5670,"src":"10871:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5677,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5676,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:21","memberName":"max","nodeType":"MemberAccess","src":"10879:17:21","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5688,"nodeType":"IfStatement","src":"10867:105:21","trueBody":{"id":5687,"nodeType":"Block","src":"10898:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:21","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5670,"src":"10955:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5682,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"10919:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5686,"nodeType":"RevertStatement","src":"10912:49:21"}]}},{"expression":{"arguments":[{"id":5691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5670,"src":"10996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5689,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:21","typeDescriptions":{}}},"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5674,"id":5693,"nodeType":"Return","src":"10981:21:21"}]},"documentation":{"id":5668,"nodeType":"StructuredDocumentation","src":"10506:280:21","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5695,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:21","nodeType":"FunctionDefinition","parameters":{"id":5671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5670,"mutability":"mutable","name":"value","nameLocation":"10818:5:21","nodeType":"VariableDeclaration","scope":5695,"src":"10810:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5669,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:21"},"returnParameters":{"id":5674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5695,"src":"10848:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5672,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:21","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:21"},"scope":6901,"src":"10791:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5722,"nodeType":"Block","src":"11360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"11374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5705,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5704,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:21","memberName":"max","nodeType":"MemberAccess","src":"11382:16:21","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5716,"nodeType":"IfStatement","src":"11370:103:21","trueBody":{"id":5715,"nodeType":"Block","src":"11400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"11456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5710,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"11421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5714,"nodeType":"RevertStatement","src":"11414:48:21"}]}},{"expression":{"arguments":[{"id":5719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"11496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5717,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:21","typeDescriptions":{}}},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5702,"id":5721,"nodeType":"Return","src":"11482:20:21"}]},"documentation":{"id":5696,"nodeType":"StructuredDocumentation","src":"11015:276:21","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5723,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:21","nodeType":"FunctionDefinition","parameters":{"id":5699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5698,"mutability":"mutable","name":"value","nameLocation":"11322:5:21","nodeType":"VariableDeclaration","scope":5723,"src":"11314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5697,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:21"},"returnParameters":{"id":5702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5723,"src":"11352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5700,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:21","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:21"},"scope":6901,"src":"11296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5750,"nodeType":"Block","src":"11860:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"11874:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5733,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5732,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:21","memberName":"max","nodeType":"MemberAccess","src":"11882:16:21","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5744,"nodeType":"IfStatement","src":"11870:103:21","trueBody":{"id":5743,"nodeType":"Block","src":"11900:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:21","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"11956:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5738,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"11921:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5742,"nodeType":"RevertStatement","src":"11914:48:21"}]}},{"expression":{"arguments":[{"id":5747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"11996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5745,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:21","typeDescriptions":{}}},"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5730,"id":5749,"nodeType":"Return","src":"11982:20:21"}]},"documentation":{"id":5724,"nodeType":"StructuredDocumentation","src":"11515:276:21","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5751,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:21","nodeType":"FunctionDefinition","parameters":{"id":5727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5726,"mutability":"mutable","name":"value","nameLocation":"11822:5:21","nodeType":"VariableDeclaration","scope":5751,"src":"11814:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5725,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:21"},"returnParameters":{"id":5730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5751,"src":"11852:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5728,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:21","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:21"},"scope":6901,"src":"11796:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5778,"nodeType":"Block","src":"12360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"12374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5761,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5760,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:21","memberName":"max","nodeType":"MemberAccess","src":"12382:16:21","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5772,"nodeType":"IfStatement","src":"12370:103:21","trueBody":{"id":5771,"nodeType":"Block","src":"12400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"12456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5766,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"12421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5770,"nodeType":"RevertStatement","src":"12414:48:21"}]}},{"expression":{"arguments":[{"id":5775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"12496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5773,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:21","typeDescriptions":{}}},"id":5776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5758,"id":5777,"nodeType":"Return","src":"12482:20:21"}]},"documentation":{"id":5752,"nodeType":"StructuredDocumentation","src":"12015:276:21","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5779,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:21","nodeType":"FunctionDefinition","parameters":{"id":5755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5754,"mutability":"mutable","name":"value","nameLocation":"12322:5:21","nodeType":"VariableDeclaration","scope":5779,"src":"12314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5753,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:21"},"returnParameters":{"id":5758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5779,"src":"12352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5756,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:21","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:21"},"scope":6901,"src":"12296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5806,"nodeType":"Block","src":"12860:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"12874:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5789,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5788,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:21","memberName":"max","nodeType":"MemberAccess","src":"12882:16:21","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5800,"nodeType":"IfStatement","src":"12870:103:21","trueBody":{"id":5799,"nodeType":"Block","src":"12900:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:21","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"12956:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5794,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"12921:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5798,"nodeType":"RevertStatement","src":"12914:48:21"}]}},{"expression":{"arguments":[{"id":5803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"12996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5801,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:21","typeDescriptions":{}}},"id":5804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5786,"id":5805,"nodeType":"Return","src":"12982:20:21"}]},"documentation":{"id":5780,"nodeType":"StructuredDocumentation","src":"12515:276:21","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5807,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:21","nodeType":"FunctionDefinition","parameters":{"id":5783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5782,"mutability":"mutable","name":"value","nameLocation":"12822:5:21","nodeType":"VariableDeclaration","scope":5807,"src":"12814:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5781,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:21"},"returnParameters":{"id":5786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5807,"src":"12852:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5784,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:21","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:21"},"scope":6901,"src":"12796:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5834,"nodeType":"Block","src":"13360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5810,"src":"13374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5817,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5816,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:21","memberName":"max","nodeType":"MemberAccess","src":"13382:16:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5828,"nodeType":"IfStatement","src":"13370:103:21","trueBody":{"id":5827,"nodeType":"Block","src":"13400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5810,"src":"13456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5822,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"13421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5826,"nodeType":"RevertStatement","src":"13414:48:21"}]}},{"expression":{"arguments":[{"id":5831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5810,"src":"13496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5829,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:21","typeDescriptions":{}}},"id":5832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5814,"id":5833,"nodeType":"Return","src":"13482:20:21"}]},"documentation":{"id":5808,"nodeType":"StructuredDocumentation","src":"13015:276:21","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5835,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:21","nodeType":"FunctionDefinition","parameters":{"id":5811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5810,"mutability":"mutable","name":"value","nameLocation":"13322:5:21","nodeType":"VariableDeclaration","scope":5835,"src":"13314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5809,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:21"},"returnParameters":{"id":5814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5835,"src":"13352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5812,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:21"},"scope":6901,"src":"13296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5862,"nodeType":"Block","src":"13860:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5838,"src":"13874:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5845,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5844,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:21","memberName":"max","nodeType":"MemberAccess","src":"13882:16:21","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5856,"nodeType":"IfStatement","src":"13870:103:21","trueBody":{"id":5855,"nodeType":"Block","src":"13900:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:21","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5838,"src":"13956:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5850,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"13921:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5854,"nodeType":"RevertStatement","src":"13914:48:21"}]}},{"expression":{"arguments":[{"id":5859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5838,"src":"13996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5857,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:21","typeDescriptions":{}}},"id":5860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5842,"id":5861,"nodeType":"Return","src":"13982:20:21"}]},"documentation":{"id":5836,"nodeType":"StructuredDocumentation","src":"13515:276:21","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5863,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:21","nodeType":"FunctionDefinition","parameters":{"id":5839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5838,"mutability":"mutable","name":"value","nameLocation":"13822:5:21","nodeType":"VariableDeclaration","scope":5863,"src":"13814:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5837,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:21"},"returnParameters":{"id":5842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5863,"src":"13852:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5840,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:21","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:21"},"scope":6901,"src":"13796:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5890,"nodeType":"Block","src":"14360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"14374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5873,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5872,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:21","memberName":"max","nodeType":"MemberAccess","src":"14382:16:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5884,"nodeType":"IfStatement","src":"14370:103:21","trueBody":{"id":5883,"nodeType":"Block","src":"14400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"14456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5878,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"14421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5882,"nodeType":"RevertStatement","src":"14414:48:21"}]}},{"expression":{"arguments":[{"id":5887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"14496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5885,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:21","typeDescriptions":{}}},"id":5888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5870,"id":5889,"nodeType":"Return","src":"14482:20:21"}]},"documentation":{"id":5864,"nodeType":"StructuredDocumentation","src":"14015:276:21","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5891,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:21","nodeType":"FunctionDefinition","parameters":{"id":5867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5866,"mutability":"mutable","name":"value","nameLocation":"14322:5:21","nodeType":"VariableDeclaration","scope":5891,"src":"14314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5865,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:21"},"returnParameters":{"id":5870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5891,"src":"14352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5868,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:21"},"scope":6901,"src":"14296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5918,"nodeType":"Block","src":"14860:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"14874:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5901,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5900,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:21","memberName":"max","nodeType":"MemberAccess","src":"14882:16:21","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5912,"nodeType":"IfStatement","src":"14870:103:21","trueBody":{"id":5911,"nodeType":"Block","src":"14900:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:21","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"14956:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5906,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"14921:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5910,"nodeType":"RevertStatement","src":"14914:48:21"}]}},{"expression":{"arguments":[{"id":5915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"14996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5913,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:21","typeDescriptions":{}}},"id":5916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5898,"id":5917,"nodeType":"Return","src":"14982:20:21"}]},"documentation":{"id":5892,"nodeType":"StructuredDocumentation","src":"14515:276:21","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5919,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:21","nodeType":"FunctionDefinition","parameters":{"id":5895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5894,"mutability":"mutable","name":"value","nameLocation":"14822:5:21","nodeType":"VariableDeclaration","scope":5919,"src":"14814:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5893,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:21"},"returnParameters":{"id":5898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5919,"src":"14852:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5896,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:21","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:21"},"scope":6901,"src":"14796:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5946,"nodeType":"Block","src":"15360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5922,"src":"15374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5929,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5928,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:21","memberName":"max","nodeType":"MemberAccess","src":"15382:16:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5940,"nodeType":"IfStatement","src":"15370:103:21","trueBody":{"id":5939,"nodeType":"Block","src":"15400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5922,"src":"15456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5934,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"15421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5938,"nodeType":"RevertStatement","src":"15414:48:21"}]}},{"expression":{"arguments":[{"id":5943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5922,"src":"15496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5941,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:21","typeDescriptions":{}}},"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5926,"id":5945,"nodeType":"Return","src":"15482:20:21"}]},"documentation":{"id":5920,"nodeType":"StructuredDocumentation","src":"15015:276:21","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5947,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:21","nodeType":"FunctionDefinition","parameters":{"id":5923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5922,"mutability":"mutable","name":"value","nameLocation":"15322:5:21","nodeType":"VariableDeclaration","scope":5947,"src":"15314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5921,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:21"},"returnParameters":{"id":5926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5947,"src":"15352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5924,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:21"},"scope":6901,"src":"15296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5974,"nodeType":"Block","src":"15860:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"15874:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5957,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5956,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:21","memberName":"max","nodeType":"MemberAccess","src":"15882:16:21","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5968,"nodeType":"IfStatement","src":"15870:103:21","trueBody":{"id":5967,"nodeType":"Block","src":"15900:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:21","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"15956:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5962,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"15921:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5966,"nodeType":"RevertStatement","src":"15914:48:21"}]}},{"expression":{"arguments":[{"id":5971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"15996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5969,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:21","typeDescriptions":{}}},"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5954,"id":5973,"nodeType":"Return","src":"15982:20:21"}]},"documentation":{"id":5948,"nodeType":"StructuredDocumentation","src":"15515:276:21","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5975,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:21","nodeType":"FunctionDefinition","parameters":{"id":5951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5950,"mutability":"mutable","name":"value","nameLocation":"15822:5:21","nodeType":"VariableDeclaration","scope":5975,"src":"15814:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5949,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:21"},"returnParameters":{"id":5954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5975,"src":"15852:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5952,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:21","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:21"},"scope":6901,"src":"15796:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6002,"nodeType":"Block","src":"16360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"16374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5985,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5984,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:21","memberName":"max","nodeType":"MemberAccess","src":"16382:16:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5996,"nodeType":"IfStatement","src":"16370:103:21","trueBody":{"id":5995,"nodeType":"Block","src":"16400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"16456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5990,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"16421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5994,"nodeType":"RevertStatement","src":"16414:48:21"}]}},{"expression":{"arguments":[{"id":5999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"16496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5997,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:21","typeDescriptions":{}}},"id":6000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5982,"id":6001,"nodeType":"Return","src":"16482:20:21"}]},"documentation":{"id":5976,"nodeType":"StructuredDocumentation","src":"16015:276:21","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6003,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:21","nodeType":"FunctionDefinition","parameters":{"id":5979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5978,"mutability":"mutable","name":"value","nameLocation":"16322:5:21","nodeType":"VariableDeclaration","scope":6003,"src":"16314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5977,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:21"},"returnParameters":{"id":5982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6003,"src":"16352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5980,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:21"},"scope":6901,"src":"16296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6030,"nodeType":"Block","src":"16854:146:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"16868:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6013,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6012,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:21","memberName":"max","nodeType":"MemberAccess","src":"16876:15:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6024,"nodeType":"IfStatement","src":"16864:101:21","trueBody":{"id":6023,"nodeType":"Block","src":"16893:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"16948:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6018,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"16914:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6022,"nodeType":"RevertStatement","src":"16907:47:21"}]}},{"expression":{"arguments":[{"id":6027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"16987:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6025,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:21","typeDescriptions":{}}},"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6010,"id":6029,"nodeType":"Return","src":"16974:19:21"}]},"documentation":{"id":6004,"nodeType":"StructuredDocumentation","src":"16515:272:21","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6031,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:21","nodeType":"FunctionDefinition","parameters":{"id":6007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6006,"mutability":"mutable","name":"value","nameLocation":"16817:5:21","nodeType":"VariableDeclaration","scope":6031,"src":"16809:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6005,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:21"},"returnParameters":{"id":6010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6031,"src":"16847:5:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6008,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:21"},"scope":6901,"src":"16792:208:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6053,"nodeType":"Block","src":"17236:128:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"17250:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6047,"nodeType":"IfStatement","src":"17246:81:21","trueBody":{"id":6046,"nodeType":"Block","src":"17261:66:21","statements":[{"errorCall":{"arguments":[{"id":6043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"17310:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6042,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"17282:27:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":6044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6045,"nodeType":"RevertStatement","src":"17275:41:21"}]}},{"expression":{"arguments":[{"id":6050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"17351:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6048,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:21","typeDescriptions":{}}},"id":6051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6038,"id":6052,"nodeType":"Return","src":"17336:21:21"}]},"documentation":{"id":6032,"nodeType":"StructuredDocumentation","src":"17006:160:21","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6054,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:21","nodeType":"FunctionDefinition","parameters":{"id":6035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6034,"mutability":"mutable","name":"value","nameLocation":"17197:5:21","nodeType":"VariableDeclaration","scope":6054,"src":"17190:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6033,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:21"},"returnParameters":{"id":6038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6054,"src":"17227:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6036,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:21"},"scope":6901,"src":"17171:193:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6079,"nodeType":"Block","src":"17761:150:21","statements":[{"expression":{"id":6067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6062,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"17771:10:21","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6057,"src":"17791:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6063,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:21","typeDescriptions":{}}},"id":6066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:21","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6068,"nodeType":"ExpressionStatement","src":"17771:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6069,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"17811:10:21","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6057,"src":"17825:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6078,"nodeType":"IfStatement","src":"17807:98:21","trueBody":{"id":6077,"nodeType":"Block","src":"17832:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:21","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6057,"src":"17888:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6072,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"17853:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6076,"nodeType":"RevertStatement","src":"17846:48:21"}]}}]},"documentation":{"id":6055,"nodeType":"StructuredDocumentation","src":"17370:312:21","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6080,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:21","nodeType":"FunctionDefinition","parameters":{"id":6058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6057,"mutability":"mutable","name":"value","nameLocation":"17712:5:21","nodeType":"VariableDeclaration","scope":6080,"src":"17705:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6056,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:21"},"returnParameters":{"id":6061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6060,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:21","nodeType":"VariableDeclaration","scope":6080,"src":"17742:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6059,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:21","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:21"},"scope":6901,"src":"17687:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6105,"nodeType":"Block","src":"18308:150:21","statements":[{"expression":{"id":6093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6088,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"18318:10:21","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6083,"src":"18338:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6089,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:21","typeDescriptions":{}}},"id":6092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:21","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6094,"nodeType":"ExpressionStatement","src":"18318:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6095,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"18358:10:21","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6083,"src":"18372:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6104,"nodeType":"IfStatement","src":"18354:98:21","trueBody":{"id":6103,"nodeType":"Block","src":"18379:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:21","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6083,"src":"18435:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6098,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"18400:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6102,"nodeType":"RevertStatement","src":"18393:48:21"}]}}]},"documentation":{"id":6081,"nodeType":"StructuredDocumentation","src":"17917:312:21","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6106,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:21","nodeType":"FunctionDefinition","parameters":{"id":6084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6083,"mutability":"mutable","name":"value","nameLocation":"18259:5:21","nodeType":"VariableDeclaration","scope":6106,"src":"18252:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6082,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:21"},"returnParameters":{"id":6087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6086,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:21","nodeType":"VariableDeclaration","scope":6106,"src":"18289:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6085,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:21","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:21"},"scope":6901,"src":"18234:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6131,"nodeType":"Block","src":"18855:150:21","statements":[{"expression":{"id":6119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6114,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6112,"src":"18865:10:21","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"18885:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6115,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:21","typeDescriptions":{}}},"id":6118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:21","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6120,"nodeType":"ExpressionStatement","src":"18865:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6121,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6112,"src":"18905:10:21","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"18919:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6130,"nodeType":"IfStatement","src":"18901:98:21","trueBody":{"id":6129,"nodeType":"Block","src":"18926:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:21","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"18982:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6124,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"18947:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6128,"nodeType":"RevertStatement","src":"18940:48:21"}]}}]},"documentation":{"id":6107,"nodeType":"StructuredDocumentation","src":"18464:312:21","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6132,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:21","nodeType":"FunctionDefinition","parameters":{"id":6110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6109,"mutability":"mutable","name":"value","nameLocation":"18806:5:21","nodeType":"VariableDeclaration","scope":6132,"src":"18799:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6108,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:21"},"returnParameters":{"id":6113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6112,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:21","nodeType":"VariableDeclaration","scope":6132,"src":"18836:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6111,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:21","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:21"},"scope":6901,"src":"18781:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6157,"nodeType":"Block","src":"19402:150:21","statements":[{"expression":{"id":6145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6140,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"19412:10:21","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"19432:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6141,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:21","typeDescriptions":{}}},"id":6144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:21","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6146,"nodeType":"ExpressionStatement","src":"19412:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6147,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"19452:10:21","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"19466:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6156,"nodeType":"IfStatement","src":"19448:98:21","trueBody":{"id":6155,"nodeType":"Block","src":"19473:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:21","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"19529:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6150,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"19494:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6154,"nodeType":"RevertStatement","src":"19487:48:21"}]}}]},"documentation":{"id":6133,"nodeType":"StructuredDocumentation","src":"19011:312:21","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6158,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:21","nodeType":"FunctionDefinition","parameters":{"id":6136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6135,"mutability":"mutable","name":"value","nameLocation":"19353:5:21","nodeType":"VariableDeclaration","scope":6158,"src":"19346:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6134,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:21"},"returnParameters":{"id":6139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6138,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:21","nodeType":"VariableDeclaration","scope":6158,"src":"19383:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6137,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:21","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:21"},"scope":6901,"src":"19328:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6183,"nodeType":"Block","src":"19949:150:21","statements":[{"expression":{"id":6171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6166,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6164,"src":"19959:10:21","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6161,"src":"19979:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6167,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:21","typeDescriptions":{}}},"id":6170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:21","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6172,"nodeType":"ExpressionStatement","src":"19959:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6173,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6164,"src":"19999:10:21","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6161,"src":"20013:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6182,"nodeType":"IfStatement","src":"19995:98:21","trueBody":{"id":6181,"nodeType":"Block","src":"20020:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:21","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6161,"src":"20076:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6176,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"20041:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6180,"nodeType":"RevertStatement","src":"20034:48:21"}]}}]},"documentation":{"id":6159,"nodeType":"StructuredDocumentation","src":"19558:312:21","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6184,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:21","nodeType":"FunctionDefinition","parameters":{"id":6162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6161,"mutability":"mutable","name":"value","nameLocation":"19900:5:21","nodeType":"VariableDeclaration","scope":6184,"src":"19893:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6160,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:21"},"returnParameters":{"id":6165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6164,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:21","nodeType":"VariableDeclaration","scope":6184,"src":"19930:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6163,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:21","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:21"},"scope":6901,"src":"19875:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6209,"nodeType":"Block","src":"20496:150:21","statements":[{"expression":{"id":6197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6192,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6190,"src":"20506:10:21","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6187,"src":"20526:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6193,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:21","typeDescriptions":{}}},"id":6196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:21","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6198,"nodeType":"ExpressionStatement","src":"20506:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6199,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6190,"src":"20546:10:21","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6187,"src":"20560:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6208,"nodeType":"IfStatement","src":"20542:98:21","trueBody":{"id":6207,"nodeType":"Block","src":"20567:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:21","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6187,"src":"20623:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6202,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"20588:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6206,"nodeType":"RevertStatement","src":"20581:48:21"}]}}]},"documentation":{"id":6185,"nodeType":"StructuredDocumentation","src":"20105:312:21","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6210,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:21","nodeType":"FunctionDefinition","parameters":{"id":6188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6187,"mutability":"mutable","name":"value","nameLocation":"20447:5:21","nodeType":"VariableDeclaration","scope":6210,"src":"20440:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6186,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:21"},"returnParameters":{"id":6191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6190,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:21","nodeType":"VariableDeclaration","scope":6210,"src":"20477:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6189,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:21","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:21"},"scope":6901,"src":"20422:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6235,"nodeType":"Block","src":"21043:150:21","statements":[{"expression":{"id":6223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6218,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6216,"src":"21053:10:21","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6213,"src":"21073:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6219,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:21","typeDescriptions":{}}},"id":6222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:21","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6224,"nodeType":"ExpressionStatement","src":"21053:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6225,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6216,"src":"21093:10:21","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6213,"src":"21107:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6234,"nodeType":"IfStatement","src":"21089:98:21","trueBody":{"id":6233,"nodeType":"Block","src":"21114:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:21","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6213,"src":"21170:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6228,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"21135:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6232,"nodeType":"RevertStatement","src":"21128:48:21"}]}}]},"documentation":{"id":6211,"nodeType":"StructuredDocumentation","src":"20652:312:21","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6236,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:21","nodeType":"FunctionDefinition","parameters":{"id":6214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6213,"mutability":"mutable","name":"value","nameLocation":"20994:5:21","nodeType":"VariableDeclaration","scope":6236,"src":"20987:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6212,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:21"},"returnParameters":{"id":6217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6216,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:21","nodeType":"VariableDeclaration","scope":6236,"src":"21024:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6215,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:21","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:21"},"scope":6901,"src":"20969:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6261,"nodeType":"Block","src":"21590:150:21","statements":[{"expression":{"id":6249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6244,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6242,"src":"21600:10:21","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"21620:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6245,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:21","typeDescriptions":{}}},"id":6248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:21","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6250,"nodeType":"ExpressionStatement","src":"21600:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6251,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6242,"src":"21640:10:21","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"21654:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6260,"nodeType":"IfStatement","src":"21636:98:21","trueBody":{"id":6259,"nodeType":"Block","src":"21661:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:21","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"21717:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6254,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"21682:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6258,"nodeType":"RevertStatement","src":"21675:48:21"}]}}]},"documentation":{"id":6237,"nodeType":"StructuredDocumentation","src":"21199:312:21","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6262,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:21","nodeType":"FunctionDefinition","parameters":{"id":6240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6239,"mutability":"mutable","name":"value","nameLocation":"21541:5:21","nodeType":"VariableDeclaration","scope":6262,"src":"21534:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6238,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:21"},"returnParameters":{"id":6243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6242,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:21","nodeType":"VariableDeclaration","scope":6262,"src":"21571:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6241,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:21","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:21"},"scope":6901,"src":"21516:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6287,"nodeType":"Block","src":"22137:150:21","statements":[{"expression":{"id":6275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6270,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6268,"src":"22147:10:21","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6265,"src":"22167:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6271,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:21","typeDescriptions":{}}},"id":6274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:21","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6276,"nodeType":"ExpressionStatement","src":"22147:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6277,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6268,"src":"22187:10:21","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6265,"src":"22201:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6286,"nodeType":"IfStatement","src":"22183:98:21","trueBody":{"id":6285,"nodeType":"Block","src":"22208:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:21","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6265,"src":"22264:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6280,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"22229:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6284,"nodeType":"RevertStatement","src":"22222:48:21"}]}}]},"documentation":{"id":6263,"nodeType":"StructuredDocumentation","src":"21746:312:21","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6288,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:21","nodeType":"FunctionDefinition","parameters":{"id":6266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6265,"mutability":"mutable","name":"value","nameLocation":"22088:5:21","nodeType":"VariableDeclaration","scope":6288,"src":"22081:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6264,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:21"},"returnParameters":{"id":6269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6268,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:21","nodeType":"VariableDeclaration","scope":6288,"src":"22118:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6267,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:21","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:21"},"scope":6901,"src":"22063:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6313,"nodeType":"Block","src":"22684:150:21","statements":[{"expression":{"id":6301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6296,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6294,"src":"22694:10:21","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6291,"src":"22714:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6297,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:21","typeDescriptions":{}}},"id":6300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:21","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6302,"nodeType":"ExpressionStatement","src":"22694:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6303,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6294,"src":"22734:10:21","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6304,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6291,"src":"22748:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6312,"nodeType":"IfStatement","src":"22730:98:21","trueBody":{"id":6311,"nodeType":"Block","src":"22755:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:21","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6291,"src":"22811:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6306,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"22776:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6310,"nodeType":"RevertStatement","src":"22769:48:21"}]}}]},"documentation":{"id":6289,"nodeType":"StructuredDocumentation","src":"22293:312:21","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6314,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:21","nodeType":"FunctionDefinition","parameters":{"id":6292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6291,"mutability":"mutable","name":"value","nameLocation":"22635:5:21","nodeType":"VariableDeclaration","scope":6314,"src":"22628:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6290,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:21"},"returnParameters":{"id":6295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6294,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:21","nodeType":"VariableDeclaration","scope":6314,"src":"22665:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6293,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:21","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:21"},"scope":6901,"src":"22610:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6339,"nodeType":"Block","src":"23231:150:21","statements":[{"expression":{"id":6327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6322,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"23241:10:21","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6317,"src":"23261:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6323,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:21","typeDescriptions":{}}},"id":6326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:21","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6328,"nodeType":"ExpressionStatement","src":"23241:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6329,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"23281:10:21","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6317,"src":"23295:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6338,"nodeType":"IfStatement","src":"23277:98:21","trueBody":{"id":6337,"nodeType":"Block","src":"23302:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:21","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6317,"src":"23358:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6332,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"23323:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6336,"nodeType":"RevertStatement","src":"23316:48:21"}]}}]},"documentation":{"id":6315,"nodeType":"StructuredDocumentation","src":"22840:312:21","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6340,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:21","nodeType":"FunctionDefinition","parameters":{"id":6318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6317,"mutability":"mutable","name":"value","nameLocation":"23182:5:21","nodeType":"VariableDeclaration","scope":6340,"src":"23175:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6316,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:21"},"returnParameters":{"id":6321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6320,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:21","nodeType":"VariableDeclaration","scope":6340,"src":"23212:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6319,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:21","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:21"},"scope":6901,"src":"23157:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6365,"nodeType":"Block","src":"23778:150:21","statements":[{"expression":{"id":6353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6348,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6346,"src":"23788:10:21","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6343,"src":"23808:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6349,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:21","typeDescriptions":{}}},"id":6352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:21","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6354,"nodeType":"ExpressionStatement","src":"23788:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6355,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6346,"src":"23828:10:21","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6343,"src":"23842:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6364,"nodeType":"IfStatement","src":"23824:98:21","trueBody":{"id":6363,"nodeType":"Block","src":"23849:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:21","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6343,"src":"23905:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6358,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"23870:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6362,"nodeType":"RevertStatement","src":"23863:48:21"}]}}]},"documentation":{"id":6341,"nodeType":"StructuredDocumentation","src":"23387:312:21","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6366,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:21","nodeType":"FunctionDefinition","parameters":{"id":6344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6343,"mutability":"mutable","name":"value","nameLocation":"23729:5:21","nodeType":"VariableDeclaration","scope":6366,"src":"23722:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6342,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:21"},"returnParameters":{"id":6347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6346,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:21","nodeType":"VariableDeclaration","scope":6366,"src":"23759:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6345,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:21","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:21"},"scope":6901,"src":"23704:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6391,"nodeType":"Block","src":"24325:150:21","statements":[{"expression":{"id":6379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6374,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"24335:10:21","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6369,"src":"24355:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6375,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:21","typeDescriptions":{}}},"id":6378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:21","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6380,"nodeType":"ExpressionStatement","src":"24335:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6381,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"24375:10:21","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6369,"src":"24389:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6390,"nodeType":"IfStatement","src":"24371:98:21","trueBody":{"id":6389,"nodeType":"Block","src":"24396:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:21","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6369,"src":"24452:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6384,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"24417:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6388,"nodeType":"RevertStatement","src":"24410:48:21"}]}}]},"documentation":{"id":6367,"nodeType":"StructuredDocumentation","src":"23934:312:21","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6392,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:21","nodeType":"FunctionDefinition","parameters":{"id":6370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6369,"mutability":"mutable","name":"value","nameLocation":"24276:5:21","nodeType":"VariableDeclaration","scope":6392,"src":"24269:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6368,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:21"},"returnParameters":{"id":6373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6372,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:21","nodeType":"VariableDeclaration","scope":6392,"src":"24306:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6371,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:21","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:21"},"scope":6901,"src":"24251:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6417,"nodeType":"Block","src":"24872:150:21","statements":[{"expression":{"id":6405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6400,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6398,"src":"24882:10:21","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"24902:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6401,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:21","typeDescriptions":{}}},"id":6404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:21","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6406,"nodeType":"ExpressionStatement","src":"24882:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6407,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6398,"src":"24922:10:21","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"24936:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6416,"nodeType":"IfStatement","src":"24918:98:21","trueBody":{"id":6415,"nodeType":"Block","src":"24943:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:21","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"24999:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6410,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"24964:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6414,"nodeType":"RevertStatement","src":"24957:48:21"}]}}]},"documentation":{"id":6393,"nodeType":"StructuredDocumentation","src":"24481:312:21","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6418,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:21","nodeType":"FunctionDefinition","parameters":{"id":6396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6395,"mutability":"mutable","name":"value","nameLocation":"24823:5:21","nodeType":"VariableDeclaration","scope":6418,"src":"24816:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6394,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:21"},"returnParameters":{"id":6399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6398,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:21","nodeType":"VariableDeclaration","scope":6418,"src":"24853:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6397,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:21","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:21"},"scope":6901,"src":"24798:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6443,"nodeType":"Block","src":"25419:150:21","statements":[{"expression":{"id":6431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6426,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6424,"src":"25429:10:21","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6421,"src":"25449:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6427,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:21","typeDescriptions":{}}},"id":6430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:21","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6432,"nodeType":"ExpressionStatement","src":"25429:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6433,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6424,"src":"25469:10:21","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6421,"src":"25483:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6442,"nodeType":"IfStatement","src":"25465:98:21","trueBody":{"id":6441,"nodeType":"Block","src":"25490:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:21","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6421,"src":"25546:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6436,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"25511:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6440,"nodeType":"RevertStatement","src":"25504:48:21"}]}}]},"documentation":{"id":6419,"nodeType":"StructuredDocumentation","src":"25028:312:21","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6444,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:21","nodeType":"FunctionDefinition","parameters":{"id":6422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6421,"mutability":"mutable","name":"value","nameLocation":"25370:5:21","nodeType":"VariableDeclaration","scope":6444,"src":"25363:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6420,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:21"},"returnParameters":{"id":6425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6424,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:21","nodeType":"VariableDeclaration","scope":6444,"src":"25400:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6423,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:21","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:21"},"scope":6901,"src":"25345:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6469,"nodeType":"Block","src":"25966:150:21","statements":[{"expression":{"id":6457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6452,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6450,"src":"25976:10:21","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"25996:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6453,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:21","typeDescriptions":{}}},"id":6456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:21","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6458,"nodeType":"ExpressionStatement","src":"25976:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6459,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6450,"src":"26016:10:21","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"26030:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6468,"nodeType":"IfStatement","src":"26012:98:21","trueBody":{"id":6467,"nodeType":"Block","src":"26037:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"26093:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6462,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"26058:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6466,"nodeType":"RevertStatement","src":"26051:48:21"}]}}]},"documentation":{"id":6445,"nodeType":"StructuredDocumentation","src":"25575:312:21","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6470,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:21","nodeType":"FunctionDefinition","parameters":{"id":6448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6447,"mutability":"mutable","name":"value","nameLocation":"25917:5:21","nodeType":"VariableDeclaration","scope":6470,"src":"25910:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6446,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:21"},"returnParameters":{"id":6451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6450,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:21","nodeType":"VariableDeclaration","scope":6470,"src":"25947:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6449,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:21","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:21"},"scope":6901,"src":"25892:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6495,"nodeType":"Block","src":"26513:150:21","statements":[{"expression":{"id":6483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6478,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6476,"src":"26523:10:21","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"26543:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6479,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:21","typeDescriptions":{}}},"id":6482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:21","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6484,"nodeType":"ExpressionStatement","src":"26523:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6485,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6476,"src":"26563:10:21","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6486,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"26577:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6494,"nodeType":"IfStatement","src":"26559:98:21","trueBody":{"id":6493,"nodeType":"Block","src":"26584:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:21","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"26640:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6488,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"26605:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6492,"nodeType":"RevertStatement","src":"26598:48:21"}]}}]},"documentation":{"id":6471,"nodeType":"StructuredDocumentation","src":"26122:312:21","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6496,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:21","nodeType":"FunctionDefinition","parameters":{"id":6474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6473,"mutability":"mutable","name":"value","nameLocation":"26464:5:21","nodeType":"VariableDeclaration","scope":6496,"src":"26457:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6472,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:21"},"returnParameters":{"id":6477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6476,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:21","nodeType":"VariableDeclaration","scope":6496,"src":"26494:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6475,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:21","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:21"},"scope":6901,"src":"26439:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6521,"nodeType":"Block","src":"27060:150:21","statements":[{"expression":{"id":6509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6504,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"27070:10:21","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6499,"src":"27090:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6505,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:21","typeDescriptions":{}}},"id":6508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:21","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6510,"nodeType":"ExpressionStatement","src":"27070:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6511,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"27110:10:21","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6499,"src":"27124:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6520,"nodeType":"IfStatement","src":"27106:98:21","trueBody":{"id":6519,"nodeType":"Block","src":"27131:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:21","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6499,"src":"27187:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6514,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"27152:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6518,"nodeType":"RevertStatement","src":"27145:48:21"}]}}]},"documentation":{"id":6497,"nodeType":"StructuredDocumentation","src":"26669:312:21","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6522,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:21","nodeType":"FunctionDefinition","parameters":{"id":6500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6499,"mutability":"mutable","name":"value","nameLocation":"27011:5:21","nodeType":"VariableDeclaration","scope":6522,"src":"27004:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6498,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:21"},"returnParameters":{"id":6503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6502,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:21","nodeType":"VariableDeclaration","scope":6522,"src":"27041:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6501,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:21","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:21"},"scope":6901,"src":"26986:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6547,"nodeType":"Block","src":"27607:150:21","statements":[{"expression":{"id":6535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6530,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6528,"src":"27617:10:21","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6525,"src":"27637:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6531,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:21","typeDescriptions":{}}},"id":6534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:21","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6536,"nodeType":"ExpressionStatement","src":"27617:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6537,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6528,"src":"27657:10:21","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6525,"src":"27671:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6546,"nodeType":"IfStatement","src":"27653:98:21","trueBody":{"id":6545,"nodeType":"Block","src":"27678:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:21","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6525,"src":"27734:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6540,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"27699:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6544,"nodeType":"RevertStatement","src":"27692:48:21"}]}}]},"documentation":{"id":6523,"nodeType":"StructuredDocumentation","src":"27216:312:21","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6548,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:21","nodeType":"FunctionDefinition","parameters":{"id":6526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6525,"mutability":"mutable","name":"value","nameLocation":"27558:5:21","nodeType":"VariableDeclaration","scope":6548,"src":"27551:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6524,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:21"},"returnParameters":{"id":6529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6528,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:21","nodeType":"VariableDeclaration","scope":6548,"src":"27588:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6527,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:21","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:21"},"scope":6901,"src":"27533:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6573,"nodeType":"Block","src":"28147:148:21","statements":[{"expression":{"id":6561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6556,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6554,"src":"28157:10:21","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"28176:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6557,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:21","typeDescriptions":{}}},"id":6560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:21","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6562,"nodeType":"ExpressionStatement","src":"28157:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6563,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6554,"src":"28196:10:21","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6564,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"28210:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6572,"nodeType":"IfStatement","src":"28192:97:21","trueBody":{"id":6571,"nodeType":"Block","src":"28217:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:21","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"28272:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6566,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"28238:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6570,"nodeType":"RevertStatement","src":"28231:47:21"}]}}]},"documentation":{"id":6549,"nodeType":"StructuredDocumentation","src":"27763:307:21","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6574,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:21","nodeType":"FunctionDefinition","parameters":{"id":6552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6551,"mutability":"mutable","name":"value","nameLocation":"28099:5:21","nodeType":"VariableDeclaration","scope":6574,"src":"28092:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6550,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:21"},"returnParameters":{"id":6555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6554,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:21","nodeType":"VariableDeclaration","scope":6574,"src":"28129:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6553,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:21","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:21"},"scope":6901,"src":"28075:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6599,"nodeType":"Block","src":"28685:148:21","statements":[{"expression":{"id":6587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6582,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6580,"src":"28695:10:21","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6577,"src":"28714:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6583,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:21","typeDescriptions":{}}},"id":6586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:21","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6588,"nodeType":"ExpressionStatement","src":"28695:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6589,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6580,"src":"28734:10:21","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6577,"src":"28748:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6598,"nodeType":"IfStatement","src":"28730:97:21","trueBody":{"id":6597,"nodeType":"Block","src":"28755:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:21","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6577,"src":"28810:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6592,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"28776:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6596,"nodeType":"RevertStatement","src":"28769:47:21"}]}}]},"documentation":{"id":6575,"nodeType":"StructuredDocumentation","src":"28301:307:21","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6600,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:21","nodeType":"FunctionDefinition","parameters":{"id":6578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6577,"mutability":"mutable","name":"value","nameLocation":"28637:5:21","nodeType":"VariableDeclaration","scope":6600,"src":"28630:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6576,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:21"},"returnParameters":{"id":6581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6580,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:21","nodeType":"VariableDeclaration","scope":6600,"src":"28667:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6579,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:21","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:21"},"scope":6901,"src":"28613:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6625,"nodeType":"Block","src":"29223:148:21","statements":[{"expression":{"id":6613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6608,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6606,"src":"29233:10:21","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6603,"src":"29252:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6609,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:21","typeDescriptions":{}}},"id":6612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:21","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6614,"nodeType":"ExpressionStatement","src":"29233:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6615,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6606,"src":"29272:10:21","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6603,"src":"29286:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6624,"nodeType":"IfStatement","src":"29268:97:21","trueBody":{"id":6623,"nodeType":"Block","src":"29293:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:21","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6603,"src":"29348:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6618,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"29314:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6622,"nodeType":"RevertStatement","src":"29307:47:21"}]}}]},"documentation":{"id":6601,"nodeType":"StructuredDocumentation","src":"28839:307:21","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6626,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:21","nodeType":"FunctionDefinition","parameters":{"id":6604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6603,"mutability":"mutable","name":"value","nameLocation":"29175:5:21","nodeType":"VariableDeclaration","scope":6626,"src":"29168:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6602,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:21"},"returnParameters":{"id":6607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6606,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:21","nodeType":"VariableDeclaration","scope":6626,"src":"29205:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6605,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:21","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:21"},"scope":6901,"src":"29151:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6651,"nodeType":"Block","src":"29761:148:21","statements":[{"expression":{"id":6639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6634,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6632,"src":"29771:10:21","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6629,"src":"29790:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6635,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:21","typeDescriptions":{}}},"id":6638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:21","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6640,"nodeType":"ExpressionStatement","src":"29771:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6641,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6632,"src":"29810:10:21","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6629,"src":"29824:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6650,"nodeType":"IfStatement","src":"29806:97:21","trueBody":{"id":6649,"nodeType":"Block","src":"29831:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:21","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6629,"src":"29886:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6644,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"29852:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6648,"nodeType":"RevertStatement","src":"29845:47:21"}]}}]},"documentation":{"id":6627,"nodeType":"StructuredDocumentation","src":"29377:307:21","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6652,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:21","nodeType":"FunctionDefinition","parameters":{"id":6630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6629,"mutability":"mutable","name":"value","nameLocation":"29713:5:21","nodeType":"VariableDeclaration","scope":6652,"src":"29706:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6628,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:21"},"returnParameters":{"id":6633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6632,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:21","nodeType":"VariableDeclaration","scope":6652,"src":"29743:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6631,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:21","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:21"},"scope":6901,"src":"29689:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6677,"nodeType":"Block","src":"30299:148:21","statements":[{"expression":{"id":6665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6660,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6658,"src":"30309:10:21","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"30328:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6661,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:21","typeDescriptions":{}}},"id":6664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:21","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6666,"nodeType":"ExpressionStatement","src":"30309:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6667,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6658,"src":"30348:10:21","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"30362:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6676,"nodeType":"IfStatement","src":"30344:97:21","trueBody":{"id":6675,"nodeType":"Block","src":"30369:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"30424:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6670,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"30390:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6674,"nodeType":"RevertStatement","src":"30383:47:21"}]}}]},"documentation":{"id":6653,"nodeType":"StructuredDocumentation","src":"29915:307:21","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6678,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:21","nodeType":"FunctionDefinition","parameters":{"id":6656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6655,"mutability":"mutable","name":"value","nameLocation":"30251:5:21","nodeType":"VariableDeclaration","scope":6678,"src":"30244:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6654,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:21"},"returnParameters":{"id":6659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6658,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:21","nodeType":"VariableDeclaration","scope":6678,"src":"30281:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6657,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:21","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:21"},"scope":6901,"src":"30227:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6703,"nodeType":"Block","src":"30837:148:21","statements":[{"expression":{"id":6691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6686,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"30847:10:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6681,"src":"30866:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6687,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:21","typeDescriptions":{}}},"id":6690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6692,"nodeType":"ExpressionStatement","src":"30847:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6693,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"30886:10:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6681,"src":"30900:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6702,"nodeType":"IfStatement","src":"30882:97:21","trueBody":{"id":6701,"nodeType":"Block","src":"30907:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:21","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6681,"src":"30962:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6696,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"30928:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6700,"nodeType":"RevertStatement","src":"30921:47:21"}]}}]},"documentation":{"id":6679,"nodeType":"StructuredDocumentation","src":"30453:307:21","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6704,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:21","nodeType":"FunctionDefinition","parameters":{"id":6682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6681,"mutability":"mutable","name":"value","nameLocation":"30789:5:21","nodeType":"VariableDeclaration","scope":6704,"src":"30782:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6680,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:21"},"returnParameters":{"id":6685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6684,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:21","nodeType":"VariableDeclaration","scope":6704,"src":"30819:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6683,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:21"},"scope":6901,"src":"30765:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6729,"nodeType":"Block","src":"31375:148:21","statements":[{"expression":{"id":6717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6712,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6710,"src":"31385:10:21","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6707,"src":"31404:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6713,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:21","typeDescriptions":{}}},"id":6716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:21","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6718,"nodeType":"ExpressionStatement","src":"31385:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6719,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6710,"src":"31424:10:21","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6707,"src":"31438:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6728,"nodeType":"IfStatement","src":"31420:97:21","trueBody":{"id":6727,"nodeType":"Block","src":"31445:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:21","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6707,"src":"31500:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6722,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"31466:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6726,"nodeType":"RevertStatement","src":"31459:47:21"}]}}]},"documentation":{"id":6705,"nodeType":"StructuredDocumentation","src":"30991:307:21","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6730,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:21","nodeType":"FunctionDefinition","parameters":{"id":6708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6707,"mutability":"mutable","name":"value","nameLocation":"31327:5:21","nodeType":"VariableDeclaration","scope":6730,"src":"31320:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6706,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:21"},"returnParameters":{"id":6711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6710,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:21","nodeType":"VariableDeclaration","scope":6730,"src":"31357:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6709,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:21","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:21"},"scope":6901,"src":"31303:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6755,"nodeType":"Block","src":"31913:148:21","statements":[{"expression":{"id":6743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6738,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6736,"src":"31923:10:21","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6733,"src":"31942:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6739,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:21","typeDescriptions":{}}},"id":6742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:21","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6744,"nodeType":"ExpressionStatement","src":"31923:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6745,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6736,"src":"31962:10:21","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6733,"src":"31976:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6754,"nodeType":"IfStatement","src":"31958:97:21","trueBody":{"id":6753,"nodeType":"Block","src":"31983:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:21","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6733,"src":"32038:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6748,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"32004:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6752,"nodeType":"RevertStatement","src":"31997:47:21"}]}}]},"documentation":{"id":6731,"nodeType":"StructuredDocumentation","src":"31529:307:21","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6756,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:21","nodeType":"FunctionDefinition","parameters":{"id":6734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6733,"mutability":"mutable","name":"value","nameLocation":"31865:5:21","nodeType":"VariableDeclaration","scope":6756,"src":"31858:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6732,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:21"},"returnParameters":{"id":6737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6736,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:21","nodeType":"VariableDeclaration","scope":6756,"src":"31895:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6735,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:21","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:21"},"scope":6901,"src":"31841:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6781,"nodeType":"Block","src":"32451:148:21","statements":[{"expression":{"id":6769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6764,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6762,"src":"32461:10:21","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6759,"src":"32480:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6765,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:21","typeDescriptions":{}}},"id":6768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:21","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6770,"nodeType":"ExpressionStatement","src":"32461:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6771,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6762,"src":"32500:10:21","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6759,"src":"32514:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6780,"nodeType":"IfStatement","src":"32496:97:21","trueBody":{"id":6779,"nodeType":"Block","src":"32521:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6759,"src":"32576:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6774,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"32542:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6778,"nodeType":"RevertStatement","src":"32535:47:21"}]}}]},"documentation":{"id":6757,"nodeType":"StructuredDocumentation","src":"32067:307:21","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6782,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:21","nodeType":"FunctionDefinition","parameters":{"id":6760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6759,"mutability":"mutable","name":"value","nameLocation":"32403:5:21","nodeType":"VariableDeclaration","scope":6782,"src":"32396:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6758,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:21"},"returnParameters":{"id":6763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6762,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:21","nodeType":"VariableDeclaration","scope":6782,"src":"32433:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6761,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:21","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:21"},"scope":6901,"src":"32379:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6807,"nodeType":"Block","src":"32989:148:21","statements":[{"expression":{"id":6795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6790,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6788,"src":"32999:10:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6785,"src":"33018:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6791,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:21","typeDescriptions":{}}},"id":6794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6796,"nodeType":"ExpressionStatement","src":"32999:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6797,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6788,"src":"33038:10:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6785,"src":"33052:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6806,"nodeType":"IfStatement","src":"33034:97:21","trueBody":{"id":6805,"nodeType":"Block","src":"33059:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:21","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6785,"src":"33114:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6800,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"33080:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6804,"nodeType":"RevertStatement","src":"33073:47:21"}]}}]},"documentation":{"id":6783,"nodeType":"StructuredDocumentation","src":"32605:307:21","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6808,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:21","nodeType":"FunctionDefinition","parameters":{"id":6786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6785,"mutability":"mutable","name":"value","nameLocation":"32941:5:21","nodeType":"VariableDeclaration","scope":6808,"src":"32934:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6784,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:21"},"returnParameters":{"id":6789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6788,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:21","nodeType":"VariableDeclaration","scope":6808,"src":"32971:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6787,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:21"},"scope":6901,"src":"32917:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6833,"nodeType":"Block","src":"33527:148:21","statements":[{"expression":{"id":6821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6816,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6814,"src":"33537:10:21","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6811,"src":"33556:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6817,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:21","typeDescriptions":{}}},"id":6820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:21","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6822,"nodeType":"ExpressionStatement","src":"33537:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6823,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6814,"src":"33576:10:21","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6811,"src":"33590:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6832,"nodeType":"IfStatement","src":"33572:97:21","trueBody":{"id":6831,"nodeType":"Block","src":"33597:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6811,"src":"33652:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6826,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"33618:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6830,"nodeType":"RevertStatement","src":"33611:47:21"}]}}]},"documentation":{"id":6809,"nodeType":"StructuredDocumentation","src":"33143:307:21","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6834,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:21","nodeType":"FunctionDefinition","parameters":{"id":6812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6811,"mutability":"mutable","name":"value","nameLocation":"33479:5:21","nodeType":"VariableDeclaration","scope":6834,"src":"33472:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6810,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:21"},"returnParameters":{"id":6815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6814,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:21","nodeType":"VariableDeclaration","scope":6834,"src":"33509:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6813,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:21","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:21"},"scope":6901,"src":"33455:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6859,"nodeType":"Block","src":"34058:146:21","statements":[{"expression":{"id":6847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6842,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6840,"src":"34068:10:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6837,"src":"34086:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6843,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:21","typeDescriptions":{}}},"id":6846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6848,"nodeType":"ExpressionStatement","src":"34068:24:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6849,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6840,"src":"34106:10:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6837,"src":"34120:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6858,"nodeType":"IfStatement","src":"34102:96:21","trueBody":{"id":6857,"nodeType":"Block","src":"34127:71:21","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6837,"src":"34181:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6852,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"34148:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6856,"nodeType":"RevertStatement","src":"34141:46:21"}]}}]},"documentation":{"id":6835,"nodeType":"StructuredDocumentation","src":"33681:302:21","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6860,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:21","nodeType":"FunctionDefinition","parameters":{"id":6838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6837,"mutability":"mutable","name":"value","nameLocation":"34011:5:21","nodeType":"VariableDeclaration","scope":6860,"src":"34004:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6836,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:21"},"returnParameters":{"id":6841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6840,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:21","nodeType":"VariableDeclaration","scope":6860,"src":"34041:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6839,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:21"},"scope":6901,"src":"33988:216:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6889,"nodeType":"Block","src":"34444:250:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6863,"src":"34557:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6872,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6871,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:21","memberName":"max","nodeType":"MemberAccess","src":"34573:16:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6869,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:21","typeDescriptions":{}}},"id":6876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6883,"nodeType":"IfStatement","src":"34553:105:21","trueBody":{"id":6882,"nodeType":"Block","src":"34592:66:21","statements":[{"errorCall":{"arguments":[{"id":6879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6863,"src":"34641:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6878,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"34613:27:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6881,"nodeType":"RevertStatement","src":"34606:41:21"}]}},{"expression":{"arguments":[{"id":6886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6863,"src":"34681:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6884,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:21","typeDescriptions":{}}},"id":6887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6867,"id":6888,"nodeType":"Return","src":"34667:20:21"}]},"documentation":{"id":6861,"nodeType":"StructuredDocumentation","src":"34210:165:21","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6890,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:21","nodeType":"FunctionDefinition","parameters":{"id":6864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6863,"mutability":"mutable","name":"value","nameLocation":"34406:5:21","nodeType":"VariableDeclaration","scope":6890,"src":"34398:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6862,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:21"},"returnParameters":{"id":6867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6890,"src":"34436:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6865,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:21"},"scope":6901,"src":"34380:314:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6899,"nodeType":"Block","src":"34853:87:21","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:21","statements":[{"nodeType":"YulAssignment","src":"34902:22:21","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:21"},"nodeType":"YulFunctionCall","src":"34914:9:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:21"},"nodeType":"YulFunctionCall","src":"34907:17:21"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6893,"isOffset":false,"isSlot":false,"src":"34921:1:21","valueSize":1},{"declaration":6896,"isOffset":false,"isSlot":false,"src":"34902:1:21","valueSize":1}],"flags":["memory-safe"],"id":6898,"nodeType":"InlineAssembly","src":"34863:71:21"}]},"documentation":{"id":6891,"nodeType":"StructuredDocumentation","src":"34700:90:21","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6900,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:21","nodeType":"FunctionDefinition","parameters":{"id":6894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6893,"mutability":"mutable","name":"b","nameLocation":"34816:1:21","nodeType":"VariableDeclaration","scope":6900,"src":"34811:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6892,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:21"},"returnParameters":{"id":6897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6896,"mutability":"mutable","name":"u","nameLocation":"34850:1:21","nodeType":"VariableDeclaration","scope":6900,"src":"34842:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6895,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:21"},"scope":6901,"src":"34795:145:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6902,"src":"769:34173:21","usedErrors":[5146,5151,5158,5163],"usedEvents":[]}],"src":"192:34751:21"},"id":21},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6901],"SignedMath":[7045]},"id":7046,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6903,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6905,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7046,"sourceUnit":6902,"src":"135:40:22","symbolAliases":[{"foreign":{"id":6904,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"143:8:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6906,"nodeType":"StructuredDocumentation","src":"177:80:22","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7045,"linearizedBaseContracts":[7045],"name":"SignedMath","nameLocation":"266:10:22","nodeType":"ContractDefinition","nodes":[{"body":{"id":6935,"nodeType":"Block","src":"746:215:22","statements":[{"id":6934,"nodeType":"UncheckedBlock","src":"756:199:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6918,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6913,"src":"894:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6919,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6911,"src":"900:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6920,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6913,"src":"904:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6922,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":6927,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6909,"src":"932:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6925,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"916:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6901_$","typeString":"type(library SafeCast)"}},"id":6926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6900,"src":"916:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6923,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:22","typeDescriptions":{}}},"id":6929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6931,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6917,"id":6933,"nodeType":"Return","src":"887:57:22"}]}]},"documentation":{"id":6907,"nodeType":"StructuredDocumentation","src":"283:374:22","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6936,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:22","nodeType":"FunctionDefinition","parameters":{"id":6914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6909,"mutability":"mutable","name":"condition","nameLocation":"684:9:22","nodeType":"VariableDeclaration","scope":6936,"src":"679:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6908,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6911,"mutability":"mutable","name":"a","nameLocation":"702:1:22","nodeType":"VariableDeclaration","scope":6936,"src":"695:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6910,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6913,"mutability":"mutable","name":"b","nameLocation":"712:1:22","nodeType":"VariableDeclaration","scope":6936,"src":"705:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6912,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:22"},"returnParameters":{"id":6917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6936,"src":"738:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6915,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:22"},"scope":7045,"src":"662:299:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6954,"nodeType":"Block","src":"1102:44:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6947,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6939,"src":"1127:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6948,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6941,"src":"1131:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6950,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6939,"src":"1134:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6951,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6941,"src":"1137:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6946,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6936,"src":"1119:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6945,"id":6953,"nodeType":"Return","src":"1112:27:22"}]},"documentation":{"id":6937,"nodeType":"StructuredDocumentation","src":"967:66:22","text":" @dev Returns the largest of two signed numbers."},"id":6955,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:22","nodeType":"FunctionDefinition","parameters":{"id":6942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6939,"mutability":"mutable","name":"a","nameLocation":"1058:1:22","nodeType":"VariableDeclaration","scope":6955,"src":"1051:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6938,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6941,"mutability":"mutable","name":"b","nameLocation":"1068:1:22","nodeType":"VariableDeclaration","scope":6955,"src":"1061:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6940,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:22"},"returnParameters":{"id":6945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6955,"src":"1094:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6943,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:22"},"scope":7045,"src":"1038:108:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6973,"nodeType":"Block","src":"1288:44:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6966,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"1313:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6967,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"1317:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6969,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"1320:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6970,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"1323:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6965,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6936,"src":"1305:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6964,"id":6972,"nodeType":"Return","src":"1298:27:22"}]},"documentation":{"id":6956,"nodeType":"StructuredDocumentation","src":"1152:67:22","text":" @dev Returns the smallest of two signed numbers."},"id":6974,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:22","nodeType":"FunctionDefinition","parameters":{"id":6961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6958,"mutability":"mutable","name":"a","nameLocation":"1244:1:22","nodeType":"VariableDeclaration","scope":6974,"src":"1237:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6957,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6960,"mutability":"mutable","name":"b","nameLocation":"1254:1:22","nodeType":"VariableDeclaration","scope":6974,"src":"1247:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6959,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:22"},"returnParameters":{"id":6964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6974,"src":"1280:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6962,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:22"},"scope":7045,"src":"1224:108:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7017,"nodeType":"Block","src":"1537:162:22","statements":[{"assignments":[6985],"declarations":[{"constant":false,"id":6985,"mutability":"mutable","name":"x","nameLocation":"1606:1:22","nodeType":"VariableDeclaration","scope":7017,"src":"1599:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6984,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6998,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6986,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"1611:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6987,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"1615:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6989,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6990,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"1622:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6991,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"1626:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6993,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6996,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:22"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6999,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"1651:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7004,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"1671:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7002,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:22","typeDescriptions":{}}},"id":7005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7000,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:22","typeDescriptions":{}}},"id":7008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7009,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"1685:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7010,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"1689:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7012,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7014,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6983,"id":7016,"nodeType":"Return","src":"1644:48:22"}]},"documentation":{"id":6975,"nodeType":"StructuredDocumentation","src":"1338:126:22","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7018,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:22","nodeType":"FunctionDefinition","parameters":{"id":6980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6977,"mutability":"mutable","name":"a","nameLocation":"1493:1:22","nodeType":"VariableDeclaration","scope":7018,"src":"1486:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6976,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6979,"mutability":"mutable","name":"b","nameLocation":"1503:1:22","nodeType":"VariableDeclaration","scope":7018,"src":"1496:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6978,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:22"},"returnParameters":{"id":6983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7018,"src":"1529:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6981,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:22"},"scope":7045,"src":"1469:230:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7043,"nodeType":"Block","src":"1843:767:22","statements":[{"id":7042,"nodeType":"UncheckedBlock","src":"1853:751:22","statements":[{"assignments":[7027],"declarations":[{"constant":false,"id":7027,"mutability":"mutable","name":"mask","nameLocation":"2424:4:22","nodeType":"VariableDeclaration","scope":7042,"src":"2417:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7026,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7031,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7028,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7021,"src":"2431:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7034,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7021,"src":"2576:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7035,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7027,"src":"2580:4:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7037,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7038,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7027,"src":"2588:4:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7032,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:22","typeDescriptions":{}}},"id":7040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7025,"id":7041,"nodeType":"Return","src":"2560:33:22"}]}]},"documentation":{"id":7019,"nodeType":"StructuredDocumentation","src":"1705:78:22","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7044,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:22","nodeType":"FunctionDefinition","parameters":{"id":7022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7021,"mutability":"mutable","name":"n","nameLocation":"1808:1:22","nodeType":"VariableDeclaration","scope":7044,"src":"1801:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7020,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:22"},"returnParameters":{"id":7025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7044,"src":"1834:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7023,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:22"},"scope":7045,"src":"1788:822:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7046,"src":"258:2354:22","usedErrors":[],"usedEvents":[]}],"src":"109:2504:22"},"id":22},"contracts/MemeContest.sol":{"ast":{"absolutePath":"contracts/MemeContest.sol","exportedSymbols":{"Context":[2242],"ERC721":[1846],"ERC721URIStorage":[2107],"IERC1363":[229],"IERC165":[3530],"IERC20":[480],"IERC4906":[261],"MemeContest":[7515],"Ownable":[147],"SafeERC20":[889],"Strings":[3494]},"id":7516,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7047,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:23"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":7048,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7516,"sourceUnit":2108,"src":"58:78:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":7049,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7516,"sourceUnit":481,"src":"137:56:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":7050,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7516,"sourceUnit":890,"src":"194:65:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7051,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7516,"sourceUnit":148,"src":"260:52:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7052,"name":"ERC721URIStorage","nameLocations":["338:16:23"],"nodeType":"IdentifierPath","referencedDeclaration":2107,"src":"338:16:23"},"id":7053,"nodeType":"InheritanceSpecifier","src":"338:16:23"},{"baseName":{"id":7054,"name":"Ownable","nameLocations":["356:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"356:7:23"},"id":7055,"nodeType":"InheritanceSpecifier","src":"356:7:23"}],"canonicalName":"MemeContest","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7515,"linearizedBaseContracts":[7515,147,2107,1846,355,2135,261,1963,3518,3530,2242],"name":"MemeContest","nameLocation":"323:11:23","nodeType":"ContractDefinition","nodes":[{"global":false,"id":7059,"libraryName":{"id":7056,"name":"SafeERC20","nameLocations":["376:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":889,"src":"376:9:23"},"nodeType":"UsingForDirective","src":"370:27:23","typeName":{"id":7058,"nodeType":"UserDefinedTypeName","pathNode":{"id":7057,"name":"IERC20","nameLocations":["390:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":480,"src":"390:6:23"},"referencedDeclaration":480,"src":"390:6:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}}},{"constant":false,"functionSelector":"b24c4fa0","id":7062,"mutability":"mutable","name":"nguToken","nameLocation":"465:8:23","nodeType":"VariableDeclaration","scope":7515,"src":"451:22:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"},"typeName":{"id":7061,"nodeType":"UserDefinedTypeName","pathNode":{"id":7060,"name":"IERC20","nameLocations":["451:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":480,"src":"451:6:23"},"referencedDeclaration":480,"src":"451:6:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"dce0b4e4","id":7064,"mutability":"mutable","name":"creationFee","nameLocation":"577:11:23","nodeType":"VariableDeclaration","scope":7515,"src":"562:26:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7063,"name":"uint256","nodeType":"ElementaryTypeName","src":"562:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"5a64ad95","id":7066,"mutability":"mutable","name":"mintingFee","nameLocation":"649:10:23","nodeType":"VariableDeclaration","scope":7515,"src":"634:25:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7065,"name":"uint256","nodeType":"ElementaryTypeName","src":"634:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"e8888942","id":7068,"mutability":"mutable","name":"submissionFee","nameLocation":"714:13:23","nodeType":"VariableDeclaration","scope":7515,"src":"699:28:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7067,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"da2b4c1e","id":7070,"mutability":"mutable","name":"voteFee","nameLocation":"789:7:23","nodeType":"VariableDeclaration","scope":7515,"src":"774:22:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7069,"name":"uint256","nodeType":"ElementaryTypeName","src":"774:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"009a9b7b","id":7072,"mutability":"mutable","name":"currentTokenId","nameLocation":"875:14:23","nodeType":"VariableDeclaration","scope":7515,"src":"860:29:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7071,"name":"uint256","nodeType":"ElementaryTypeName","src":"860:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"canonicalName":"MemeContest.Meme","id":7085,"members":[{"constant":false,"id":7074,"mutability":"mutable","name":"tokenId","nameLocation":"965:7:23","nodeType":"VariableDeclaration","scope":7085,"src":"957:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7073,"name":"uint256","nodeType":"ElementaryTypeName","src":"957:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7076,"mutability":"mutable","name":"creator","nameLocation":"990:7:23","nodeType":"VariableDeclaration","scope":7085,"src":"982:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7075,"name":"address","nodeType":"ElementaryTypeName","src":"982:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7078,"mutability":"mutable","name":"memeURI","nameLocation":"1014:7:23","nodeType":"VariableDeclaration","scope":7085,"src":"1007:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7077,"name":"string","nodeType":"ElementaryTypeName","src":"1007:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7080,"mutability":"mutable","name":"voteCount","nameLocation":"1039:9:23","nodeType":"VariableDeclaration","scope":7085,"src":"1031:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7079,"name":"uint256","nodeType":"ElementaryTypeName","src":"1031:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7082,"mutability":"mutable","name":"minted","nameLocation":"1063:6:23","nodeType":"VariableDeclaration","scope":7085,"src":"1058:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7081,"name":"bool","nodeType":"ElementaryTypeName","src":"1058:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7084,"mutability":"mutable","name":"submitted","nameLocation":"1132:9:23","nodeType":"VariableDeclaration","scope":7085,"src":"1127:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7083,"name":"bool","nodeType":"ElementaryTypeName","src":"1127:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Meme","nameLocation":"942:4:23","nodeType":"StructDefinition","scope":7515,"src":"935:268:23","visibility":"public"},{"constant":false,"functionSelector":"388f6064","id":7090,"mutability":"mutable","name":"memes","nameLocation":"1282:5:23","nodeType":"VariableDeclaration","scope":7515,"src":"1250:37:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Meme_$7085_storage_$","typeString":"mapping(uint256 => struct MemeContest.Meme)"},"typeName":{"id":7089,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7086,"name":"uint256","nodeType":"ElementaryTypeName","src":"1258:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1250:24:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Meme_$7085_storage_$","typeString":"mapping(uint256 => struct MemeContest.Meme)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7088,"nodeType":"UserDefinedTypeName","pathNode":{"id":7087,"name":"Meme","nameLocations":["1269:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":7085,"src":"1269:4:23"},"referencedDeclaration":7085,"src":"1269:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_Meme_$7085_storage_ptr","typeString":"struct MemeContest.Meme"}}},"visibility":"public"},{"constant":false,"functionSelector":"2f5b6ffe","id":7094,"mutability":"mutable","name":"isGalacticG","nameLocation":"1411:11:23","nodeType":"VariableDeclaration","scope":7515,"src":"1379:43:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":7093,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7091,"name":"address","nodeType":"ElementaryTypeName","src":"1387:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1379:24:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7092,"name":"bool","nodeType":"ElementaryTypeName","src":"1398:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"5a20ab1d9dc88654ce4b0ecd06dbbb66115f3e86cfe70f6717102bcae2a4a5c0","id":7102,"name":"MemeSubmitted","nameLocation":"1472:13:23","nodeType":"EventDefinition","parameters":{"id":7101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7096,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1502:7:23","nodeType":"VariableDeclaration","scope":7102,"src":"1486:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7095,"name":"uint256","nodeType":"ElementaryTypeName","src":"1486:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7098,"indexed":true,"mutability":"mutable","name":"creator","nameLocation":"1527:7:23","nodeType":"VariableDeclaration","scope":7102,"src":"1511:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7097,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7100,"indexed":false,"mutability":"mutable","name":"memeURI","nameLocation":"1543:7:23","nodeType":"VariableDeclaration","scope":7102,"src":"1536:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7099,"name":"string","nodeType":"ElementaryTypeName","src":"1536:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1485:66:23"},"src":"1466:86:23"},{"anonymous":false,"eventSelector":"b2ba4c72a840d1937561f5018e205ce84b4ee1fbafccfa1a2c56fed4b4faed58","id":7108,"name":"MemeMinted","nameLocation":"1563:10:23","nodeType":"EventDefinition","parameters":{"id":7107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7104,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1590:7:23","nodeType":"VariableDeclaration","scope":7108,"src":"1574:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7103,"name":"uint256","nodeType":"ElementaryTypeName","src":"1574:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7106,"indexed":true,"mutability":"mutable","name":"creator","nameLocation":"1615:7:23","nodeType":"VariableDeclaration","scope":7108,"src":"1599:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7105,"name":"address","nodeType":"ElementaryTypeName","src":"1599:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1573:50:23"},"src":"1557:67:23"},{"anonymous":false,"eventSelector":"903d955ffc4c7d3ae887133f90927b5c2a5177cbe7af0c949b0bf110a86af0b1","id":7116,"name":"MemeVoted","nameLocation":"1635:9:23","nodeType":"EventDefinition","parameters":{"id":7115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7110,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1661:7:23","nodeType":"VariableDeclaration","scope":7116,"src":"1645:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7109,"name":"uint256","nodeType":"ElementaryTypeName","src":"1645:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7112,"indexed":true,"mutability":"mutable","name":"voter","nameLocation":"1686:5:23","nodeType":"VariableDeclaration","scope":7116,"src":"1670:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7111,"name":"address","nodeType":"ElementaryTypeName","src":"1670:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7114,"indexed":false,"mutability":"mutable","name":"voteCount","nameLocation":"1701:9:23","nodeType":"VariableDeclaration","scope":7116,"src":"1693:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7113,"name":"uint256","nodeType":"ElementaryTypeName","src":"1693:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1644:67:23"},"src":"1629:83:23"},{"body":{"id":7175,"nodeType":"Block","src":"1968:377:23","statements":[{"expression":{"id":7133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7131,"name":"nguToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7062,"src":"1978:8:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7132,"name":"_nguToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7120,"src":"1989:9:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}},"src":"1978:20:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}},"id":7134,"nodeType":"ExpressionStatement","src":"1978:20:23"},{"expression":{"id":7142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7135,"name":"creationFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"2059:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000_by_1","typeString":"int_const 10000000000000000000"},"id":7141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2076:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":7139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2082:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":7138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2088:2:23","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"2082:8:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}}],"id":7140,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2081:10:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"2076:15:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000_by_1","typeString":"int_const 10000000000000000000"}},"src":"2059:32:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7143,"nodeType":"ExpressionStatement","src":"2059:32:23"},{"expression":{"id":7151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7144,"name":"mintingFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7066,"src":"2123:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_5000000000000000000_by_1","typeString":"int_const 5000000000000000000"},"id":7150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"35","id":7145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2140:1:23","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":7148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2146:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":7147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2152:2:23","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"2146:8:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}}],"id":7149,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2145:10:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"2140:15:23","typeDescriptions":{"typeIdentifier":"t_rational_5000000000000000000_by_1","typeString":"int_const 5000000000000000000"}},"src":"2123:32:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7152,"nodeType":"ExpressionStatement","src":"2123:32:23"},{"expression":{"id":7160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7153,"name":"submissionFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7068,"src":"2186:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_2000000000000000000_by_1","typeString":"int_const 2000000000000000000"},"id":7159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":7154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2203:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":7157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2209:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":7156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2215:2:23","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"2209:8:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}}],"id":7158,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2208:10:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"2203:15:23","typeDescriptions":{"typeIdentifier":"t_rational_2000000000000000000_by_1","typeString":"int_const 2000000000000000000"}},"src":"2186:32:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7161,"nodeType":"ExpressionStatement","src":"2186:32:23"},{"expression":{"id":7169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7162,"name":"voteFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7070,"src":"2249:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":7168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2266:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":7166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2272:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":7165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:2:23","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"2272:8:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}}],"id":7167,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2271:10:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"2266:15:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"2249:32:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7170,"nodeType":"ExpressionStatement","src":"2249:32:23"},{"expression":{"id":7173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7171,"name":"currentTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"2320:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":7172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2337:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2320:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7174,"nodeType":"ExpressionStatement","src":"2320:18:23"}]},"documentation":{"id":7117,"nodeType":"StructuredDocumentation","src":"1718:168:23","text":" @dev Constructor sets the NGU token address and default fee amounts.\n Adjust the fee values based on NGU token decimals (commonly 18 decimals)."},"id":7176,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4e4755204d656d65","id":7123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1928:10:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_2cfa515f119c603efe1e516df34ebd092b7a2e84ed121bf1b3314345d0f2c58d","typeString":"literal_string \"NGU Meme\""},"value":"NGU Meme"},{"hexValue":"4e47554d","id":7124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1940:6:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_a644944547fabf6f9068935c841fbc7de25c394f596e367654cfa3a582bc2ff0","typeString":"literal_string \"NGUM\""},"value":"NGUM"}],"id":7125,"kind":"baseConstructorSpecifier","modifierName":{"id":7122,"name":"ERC721","nameLocations":["1921:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":1846,"src":"1921:6:23"},"nodeType":"ModifierInvocation","src":"1921:26:23"},{"arguments":[{"expression":{"id":7127,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1956:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1960:6:23","memberName":"sender","nodeType":"MemberAccess","src":"1956:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7129,"kind":"baseConstructorSpecifier","modifierName":{"id":7126,"name":"Ownable","nameLocations":["1948:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1948:7:23"},"nodeType":"ModifierInvocation","src":"1948:19:23"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7120,"mutability":"mutable","name":"_nguToken","nameLocation":"1910:9:23","nodeType":"VariableDeclaration","scope":7176,"src":"1903:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"},"typeName":{"id":7119,"nodeType":"UserDefinedTypeName","pathNode":{"id":7118,"name":"IERC20","nameLocations":["1903:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":480,"src":"1903:6:23"},"referencedDeclaration":480,"src":"1903:6:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"1902:18:23"},"returnParameters":{"id":7130,"nodeType":"ParameterList","parameters":[],"src":"1968:0:23"},"scope":7515,"src":"1891:454:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7188,"nodeType":"Block","src":"2467:99:23","statements":[{"expression":{"arguments":[{"baseExpression":{"id":7180,"name":"isGalacticG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7094,"src":"2485:11:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7183,"indexExpression":{"expression":{"id":7181,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2497:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2501:6:23","memberName":"sender","nodeType":"MemberAccess","src":"2497:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2485:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792047616c6163746963204720726f6c65206f776e65727320616c6c6f776564","id":7184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2510:37:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_53a04e33854b42e7e6aa2cc3ebfba2d4fe5e3493a53cdce37f5154aefb6af936","typeString":"literal_string \"Only Galactic G role owners allowed\""},"value":"Only Galactic G role owners allowed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_53a04e33854b42e7e6aa2cc3ebfba2d4fe5e3493a53cdce37f5154aefb6af936","typeString":"literal_string \"Only Galactic G role owners allowed\""}],"id":7179,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2477:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2477:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7186,"nodeType":"ExpressionStatement","src":"2477:71:23"},{"id":7187,"nodeType":"PlaceholderStatement","src":"2558:1:23"}]},"documentation":{"id":7177,"nodeType":"StructuredDocumentation","src":"2351:82:23","text":" @dev Modifier to restrict functions to Galactic G role holders."},"id":7189,"name":"onlyGalacticGRole","nameLocation":"2447:17:23","nodeType":"ModifierDefinition","parameters":{"id":7178,"nodeType":"ParameterList","parameters":[],"src":"2464:2:23"},"src":"2438:128:23","virtual":false,"visibility":"internal"},{"body":{"id":7203,"nodeType":"Block","src":"2721:42:23","statements":[{"expression":{"id":7201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7197,"name":"isGalacticG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7094,"src":"2731:11:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7199,"indexExpression":{"id":7198,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7192,"src":"2743:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2731:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2752:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2731:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7202,"nodeType":"ExpressionStatement","src":"2731:25:23"}]},"documentation":{"id":7190,"nodeType":"StructuredDocumentation","src":"2572:88:23","text":" @dev Owner can add or remove addresses that have the Galactic G role."},"functionSelector":"1809b5f5","id":7204,"implemented":true,"kind":"function","modifiers":[{"id":7195,"kind":"modifierInvocation","modifierName":{"id":7194,"name":"onlyOwner","nameLocations":["2711:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2711:9:23"},"nodeType":"ModifierInvocation","src":"2711:9:23"}],"name":"addGalacticG","nameLocation":"2674:12:23","nodeType":"FunctionDefinition","parameters":{"id":7193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7192,"mutability":"mutable","name":"_user","nameLocation":"2695:5:23","nodeType":"VariableDeclaration","scope":7204,"src":"2687:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7191,"name":"address","nodeType":"ElementaryTypeName","src":"2687:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2686:15:23"},"returnParameters":{"id":7196,"nodeType":"ParameterList","parameters":[],"src":"2721:0:23"},"scope":7515,"src":"2665:98:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7217,"nodeType":"Block","src":"2832:43:23","statements":[{"expression":{"id":7215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7211,"name":"isGalacticG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7094,"src":"2842:11:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7213,"indexExpression":{"id":7212,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7206,"src":"2854:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2842:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":7214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2863:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2842:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7216,"nodeType":"ExpressionStatement","src":"2842:26:23"}]},"functionSelector":"dc185604","id":7218,"implemented":true,"kind":"function","modifiers":[{"id":7209,"kind":"modifierInvocation","modifierName":{"id":7208,"name":"onlyOwner","nameLocations":["2822:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2822:9:23"},"nodeType":"ModifierInvocation","src":"2822:9:23"}],"name":"removeGalacticG","nameLocation":"2782:15:23","nodeType":"FunctionDefinition","parameters":{"id":7207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7206,"mutability":"mutable","name":"_user","nameLocation":"2806:5:23","nodeType":"VariableDeclaration","scope":7218,"src":"2798:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7205,"name":"address","nodeType":"ElementaryTypeName","src":"2798:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2797:15:23"},"returnParameters":{"id":7210,"nodeType":"ParameterList","parameters":[],"src":"2832:0:23"},"scope":7515,"src":"2773:102:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7248,"nodeType":"Block","src":"3106:160:23","statements":[{"expression":{"id":7234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7232,"name":"creationFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"3116:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7233,"name":"_creationFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7221,"src":"3133:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3116:29:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7235,"nodeType":"ExpressionStatement","src":"3116:29:23"},{"expression":{"id":7238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7236,"name":"mintingFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7066,"src":"3155:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7237,"name":"_mintingFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7223,"src":"3172:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3155:28:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7239,"nodeType":"ExpressionStatement","src":"3155:28:23"},{"expression":{"id":7242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7240,"name":"submissionFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7068,"src":"3193:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7241,"name":"_submissionFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"3210:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3193:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7243,"nodeType":"ExpressionStatement","src":"3193:31:23"},{"expression":{"id":7246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7244,"name":"voteFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7070,"src":"3234:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7245,"name":"_voteFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7227,"src":"3251:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3234:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7247,"nodeType":"ExpressionStatement","src":"3234:25:23"}]},"documentation":{"id":7219,"nodeType":"StructuredDocumentation","src":"2881:61:23","text":" @dev Owner function to update fee amounts."},"functionSelector":"6fcba377","id":7249,"implemented":true,"kind":"function","modifiers":[{"id":7230,"kind":"modifierInvocation","modifierName":{"id":7229,"name":"onlyOwner","nameLocations":["3096:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3096:9:23"},"nodeType":"ModifierInvocation","src":"3096:9:23"}],"name":"setFees","nameLocation":"2956:7:23","nodeType":"FunctionDefinition","parameters":{"id":7228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7221,"mutability":"mutable","name":"_creationFee","nameLocation":"2981:12:23","nodeType":"VariableDeclaration","scope":7249,"src":"2973:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7220,"name":"uint256","nodeType":"ElementaryTypeName","src":"2973:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7223,"mutability":"mutable","name":"_mintingFee","nameLocation":"3011:11:23","nodeType":"VariableDeclaration","scope":7249,"src":"3003:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7222,"name":"uint256","nodeType":"ElementaryTypeName","src":"3003:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7225,"mutability":"mutable","name":"_submissionFee","nameLocation":"3040:14:23","nodeType":"VariableDeclaration","scope":7249,"src":"3032:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7224,"name":"uint256","nodeType":"ElementaryTypeName","src":"3032:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7227,"mutability":"mutable","name":"_voteFee","nameLocation":"3072:8:23","nodeType":"VariableDeclaration","scope":7249,"src":"3064:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7226,"name":"uint256","nodeType":"ElementaryTypeName","src":"3064:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2963:123:23"},"returnParameters":{"id":7231,"nodeType":"ParameterList","parameters":[],"src":"3106:0:23"},"scope":7515,"src":"2947:319:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7293,"nodeType":"Block","src":"3533:533:23","statements":[{"expression":{"arguments":[{"expression":{"id":7260,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3635:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3639:6:23","memberName":"sender","nodeType":"MemberAccess","src":"3635:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7264,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3655:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_MemeContest_$7515","typeString":"contract MemeContest"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MemeContest_$7515","typeString":"contract MemeContest"}],"id":7263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3647:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7262,"name":"address","nodeType":"ElementaryTypeName","src":"3647:7:23","typeDescriptions":{}}},"id":7265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3647:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7266,"name":"submissionFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7068,"src":"3662:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7257,"name":"nguToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7062,"src":"3609:8:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}},"id":7259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3618:16:23","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":552,"src":"3609:25:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$480_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$480_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":7267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3609:67:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7268,"nodeType":"ExpressionStatement","src":"3609:67:23"},{"expression":{"id":7270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3745:16:23","subExpression":{"id":7269,"name":"currentTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"3745:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7271,"nodeType":"ExpressionStatement","src":"3745:16:23"},{"expression":{"id":7284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7272,"name":"memes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7090,"src":"3771:5:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Meme_$7085_storage_$","typeString":"mapping(uint256 => struct MemeContest.Meme storage ref)"}},"id":7274,"indexExpression":{"id":7273,"name":"currentTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"3777:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3771:21:23","typeDescriptions":{"typeIdentifier":"t_struct$_Meme_$7085_storage","typeString":"struct MemeContest.Meme storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7276,"name":"currentTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"3823:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7277,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3860:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3864:6:23","memberName":"sender","nodeType":"MemberAccess","src":"3860:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7279,"name":"memeURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7252,"src":"3893:7:23","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"hexValue":"30","id":7280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3925:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"66616c7365","id":7281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3948:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"74727565","id":7282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3978:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7275,"name":"Meme","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"3795:4:23","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Meme_$7085_storage_ptr_$","typeString":"type(struct MemeContest.Meme storage pointer)"}},"id":7283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3814:7:23","3851:7:23","3884:7:23","3914:9:23","3940:6:23","3967:9:23"],"names":["tokenId","creator","memeURI","voteCount","minted","submitted"],"nodeType":"FunctionCall","src":"3795:198:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Meme_$7085_memory_ptr","typeString":"struct MemeContest.Meme memory"}},"src":"3771:222:23","typeDescriptions":{"typeIdentifier":"t_struct$_Meme_$7085_storage","typeString":"struct MemeContest.Meme storage ref"}},"id":7285,"nodeType":"ExpressionStatement","src":"3771:222:23"},{"eventCall":{"arguments":[{"id":7287,"name":"currentTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"4023:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7288,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4039:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4043:6:23","memberName":"sender","nodeType":"MemberAccess","src":"4039:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7290,"name":"memeURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7252,"src":"4051:7:23","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":7286,"name":"MemeSubmitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"4009:13:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,string memory)"}},"id":7291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4009:50:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7292,"nodeType":"EmitStatement","src":"4004:55:23"}]},"documentation":{"id":7250,"nodeType":"StructuredDocumentation","src":"3272:184:23","text":" @dev Submit a meme for contest participation.\n The caller must pay the submission fee in NGU tokens.\n Only whitelisted Galactic G users can submit memes."},"functionSelector":"7e39cb2b","id":7294,"implemented":true,"kind":"function","modifiers":[{"id":7255,"kind":"modifierInvocation","modifierName":{"id":7254,"name":"onlyGalacticGRole","nameLocations":["3515:17:23"],"nodeType":"IdentifierPath","referencedDeclaration":7189,"src":"3515:17:23"},"nodeType":"ModifierInvocation","src":"3515:17:23"}],"name":"submitMeme","nameLocation":"3470:10:23","nodeType":"FunctionDefinition","parameters":{"id":7253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7252,"mutability":"mutable","name":"memeURI","nameLocation":"3497:7:23","nodeType":"VariableDeclaration","scope":7294,"src":"3481:23:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":7251,"name":"string","nodeType":"ElementaryTypeName","src":"3481:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3480:25:23"},"returnParameters":{"id":7256,"nodeType":"ParameterList","parameters":[],"src":"3533:0:23"},"scope":7515,"src":"3461:605:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7367,"nodeType":"Block","src":"4267:551:23","statements":[{"assignments":[7304],"declarations":[{"constant":false,"id":7304,"mutability":"mutable","name":"meme","nameLocation":"4290:4:23","nodeType":"VariableDeclaration","scope":7367,"src":"4277:17:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Meme_$7085_storage_ptr","typeString":"struct MemeContest.Meme"},"typeName":{"id":7303,"nodeType":"UserDefinedTypeName","pathNode":{"id":7302,"name":"Meme","nameLocations":["4277:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":7085,"src":"4277:4:23"},"referencedDeclaration":7085,"src":"4277:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_Meme_$7085_storage_ptr","typeString":"struct MemeContest.Meme"}},"visibility":"internal"}],"id":7308,"initialValue":{"baseExpression":{"id":7305,"name":"memes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7090,"src":"4297:5:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Meme_$7085_storage_$","typeString":"mapping(uint256 => struct MemeContest.Meme storage ref)"}},"id":7307,"indexExpression":{"id":7306,"name":"memeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7297,"src":"4303:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4297:13:23","typeDescriptions":{"typeIdentifier":"t_struct$_Meme_$7085_storage","typeString":"struct MemeContest.Meme storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4277:33:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7310,"name":"meme","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"4328:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_Meme_$7085_storage_ptr","typeString":"struct MemeContest.Meme storage pointer"}},"id":7311,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4333:7:23","memberName":"creator","nodeType":"MemberAccess","referencedDeclaration":7076,"src":"4328:12:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7312,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4344:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4348:6:23","memberName":"sender","nodeType":"MemberAccess","src":"4344:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4328:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792063726561746f722063616e206d696e74","id":7315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4356:23:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_f35b27dac5c6c5c70979437e786589e609929f2a486ae3e25e09885c3767053e","typeString":"literal_string \"Only creator can mint\""},"value":"Only creator can mint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f35b27dac5c6c5c70979437e786589e609929f2a486ae3e25e09885c3767053e","typeString":"literal_string \"Only creator can mint\""}],"id":7309,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4320:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4320:60:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7317,"nodeType":"ExpressionStatement","src":"4320:60:23"},{"expression":{"arguments":[{"expression":{"id":7319,"name":"meme","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"4398:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_Meme_$7085_storage_ptr","typeString":"struct MemeContest.Meme storage pointer"}},"id":7320,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4403:9:23","memberName":"submitted","nodeType":"MemberAccess","referencedDeclaration":7084,"src":"4398:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d656d65206e6f74207375626d6974746564","id":7321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4414:20:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_855024f5c4a5b0efabcd6daea3ba466bc9b46313116a5000814122b9ef4ee96e","typeString":"literal_string \"Meme not submitted\""},"value":"Meme not submitted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_855024f5c4a5b0efabcd6daea3ba466bc9b46313116a5000814122b9ef4ee96e","typeString":"literal_string \"Meme not submitted\""}],"id":7318,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4390:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4390:45:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7323,"nodeType":"ExpressionStatement","src":"4390:45:23"},{"expression":{"arguments":[{"id":7327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4453:12:23","subExpression":{"expression":{"id":7325,"name":"meme","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"4454:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_Meme_$7085_storage_ptr","typeString":"struct MemeContest.Meme storage pointer"}},"id":7326,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4459:6:23","memberName":"minted","nodeType":"MemberAccess","referencedDeclaration":7082,"src":"4454:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d656d6520616c7265616479206d696e746564","id":7328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4467:21:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_be55e3527e41bc700964ae5d57e43d215583aefa75e094d5905e663544120409","typeString":"literal_string \"Meme already minted\""},"value":"Meme already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be55e3527e41bc700964ae5d57e43d215583aefa75e094d5905e663544120409","typeString":"literal_string \"Meme already minted\""}],"id":7324,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4445:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4445:44:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7330,"nodeType":"ExpressionStatement","src":"4445:44:23"},{"expression":{"arguments":[{"expression":{"id":7334,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4572:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4576:6:23","memberName":"sender","nodeType":"MemberAccess","src":"4572:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7338,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4592:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_MemeContest_$7515","typeString":"contract MemeContest"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MemeContest_$7515","typeString":"contract MemeContest"}],"id":7337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4584:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7336,"name":"address","nodeType":"ElementaryTypeName","src":"4584:7:23","typeDescriptions":{}}},"id":7339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4584:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7340,"name":"mintingFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7066,"src":"4599:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7331,"name":"nguToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7062,"src":"4546:8:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}},"id":7333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4555:16:23","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":552,"src":"4546:25:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$480_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$480_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":7341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4546:64:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7342,"nodeType":"ExpressionStatement","src":"4546:64:23"},{"expression":{"arguments":[{"expression":{"id":7344,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4674:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4678:6:23","memberName":"sender","nodeType":"MemberAccess","src":"4674:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7346,"name":"memeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7297,"src":"4686:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7343,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1524,1554],"referencedDeclaration":1524,"src":"4664:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4664:29:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7348,"nodeType":"ExpressionStatement","src":"4664:29:23"},{"expression":{"arguments":[{"id":7350,"name":"memeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7297,"src":"4716:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7351,"name":"meme","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"4724:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_Meme_$7085_storage_ptr","typeString":"struct MemeContest.Meme storage pointer"}},"id":7352,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4729:7:23","memberName":"memeURI","nodeType":"MemberAccess","referencedDeclaration":7078,"src":"4724:12:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":7349,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"4703:12:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":7353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4703:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7354,"nodeType":"ExpressionStatement","src":"4703:34:23"},{"expression":{"id":7359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7355,"name":"meme","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"4747:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_Meme_$7085_storage_ptr","typeString":"struct MemeContest.Meme storage pointer"}},"id":7357,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4752:6:23","memberName":"minted","nodeType":"MemberAccess","referencedDeclaration":7082,"src":"4747:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4761:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4747:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7360,"nodeType":"ExpressionStatement","src":"4747:18:23"},{"eventCall":{"arguments":[{"id":7362,"name":"memeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7297,"src":"4792:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7363,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4800:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4804:6:23","memberName":"sender","nodeType":"MemberAccess","src":"4800:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7361,"name":"MemeMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7108,"src":"4781:10:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":7365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4781:30:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7366,"nodeType":"EmitStatement","src":"4776:35:23"}]},"documentation":{"id":7295,"nodeType":"StructuredDocumentation","src":"4072:129:23","text":" @dev Mint an NFT for a submitted meme.\n The caller must be the original creator and pay the minting fee."},"functionSelector":"eb3a9ef7","id":7368,"implemented":true,"kind":"function","modifiers":[{"id":7300,"kind":"modifierInvocation","modifierName":{"id":7299,"name":"onlyGalacticGRole","nameLocations":["4249:17:23"],"nodeType":"IdentifierPath","referencedDeclaration":7189,"src":"4249:17:23"},"nodeType":"ModifierInvocation","src":"4249:17:23"}],"name":"mintMeme","nameLocation":"4215:8:23","nodeType":"FunctionDefinition","parameters":{"id":7298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7297,"mutability":"mutable","name":"memeId","nameLocation":"4232:6:23","nodeType":"VariableDeclaration","scope":7368,"src":"4224:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7296,"name":"uint256","nodeType":"ElementaryTypeName","src":"4224:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4223:16:23"},"returnParameters":{"id":7301,"nodeType":"ParameterList","parameters":[],"src":"4267:0:23"},"scope":7515,"src":"4206:612:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7415,"nodeType":"Block","src":"5019:343:23","statements":[{"expression":{"arguments":[{"expression":{"id":7379,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5099:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5103:6:23","memberName":"sender","nodeType":"MemberAccess","src":"5099:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7383,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5119:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_MemeContest_$7515","typeString":"contract MemeContest"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MemeContest_$7515","typeString":"contract MemeContest"}],"id":7382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5111:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7381,"name":"address","nodeType":"ElementaryTypeName","src":"5111:7:23","typeDescriptions":{}}},"id":7384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5111:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7385,"name":"voteFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7070,"src":"5126:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7376,"name":"nguToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7062,"src":"5073:8:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}},"id":7378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5082:16:23","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":552,"src":"5073:25:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$480_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$480_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":7386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5073:61:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7387,"nodeType":"ExpressionStatement","src":"5073:61:23"},{"assignments":[7390],"declarations":[{"constant":false,"id":7390,"mutability":"mutable","name":"meme","nameLocation":"5157:4:23","nodeType":"VariableDeclaration","scope":7415,"src":"5144:17:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Meme_$7085_storage_ptr","typeString":"struct MemeContest.Meme"},"typeName":{"id":7389,"nodeType":"UserDefinedTypeName","pathNode":{"id":7388,"name":"Meme","nameLocations":["5144:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":7085,"src":"5144:4:23"},"referencedDeclaration":7085,"src":"5144:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_Meme_$7085_storage_ptr","typeString":"struct MemeContest.Meme"}},"visibility":"internal"}],"id":7394,"initialValue":{"baseExpression":{"id":7391,"name":"memes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7090,"src":"5164:5:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Meme_$7085_storage_$","typeString":"mapping(uint256 => struct MemeContest.Meme storage ref)"}},"id":7393,"indexExpression":{"id":7392,"name":"memeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"5170:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5164:13:23","typeDescriptions":{"typeIdentifier":"t_struct$_Meme_$7085_storage","typeString":"struct MemeContest.Meme storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5144:33:23"},{"expression":{"arguments":[{"expression":{"id":7396,"name":"meme","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7390,"src":"5195:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_Meme_$7085_storage_ptr","typeString":"struct MemeContest.Meme storage pointer"}},"id":7397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5200:9:23","memberName":"submitted","nodeType":"MemberAccess","referencedDeclaration":7084,"src":"5195:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d656d65206e6f74207375626d6974746564","id":7398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5211:20:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_855024f5c4a5b0efabcd6daea3ba466bc9b46313116a5000814122b9ef4ee96e","typeString":"literal_string \"Meme not submitted\""},"value":"Meme not submitted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_855024f5c4a5b0efabcd6daea3ba466bc9b46313116a5000814122b9ef4ee96e","typeString":"literal_string \"Meme not submitted\""}],"id":7395,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5187:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5187:45:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7400,"nodeType":"ExpressionStatement","src":"5187:45:23"},{"expression":{"id":7405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7401,"name":"meme","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7390,"src":"5275:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_Meme_$7085_storage_ptr","typeString":"struct MemeContest.Meme storage pointer"}},"id":7403,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5280:9:23","memberName":"voteCount","nodeType":"MemberAccess","referencedDeclaration":7080,"src":"5275:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":7404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5293:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5275:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7406,"nodeType":"ExpressionStatement","src":"5275:19:23"},{"eventCall":{"arguments":[{"id":7408,"name":"memeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"5320:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7409,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5328:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5332:6:23","memberName":"sender","nodeType":"MemberAccess","src":"5328:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7411,"name":"meme","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7390,"src":"5340:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_Meme_$7085_storage_ptr","typeString":"struct MemeContest.Meme storage pointer"}},"id":7412,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5345:9:23","memberName":"voteCount","nodeType":"MemberAccess","referencedDeclaration":7080,"src":"5340:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7407,"name":"MemeVoted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7116,"src":"5310:9:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":7413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5310:45:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7414,"nodeType":"EmitStatement","src":"5305:50:23"}]},"documentation":{"id":7369,"nodeType":"StructuredDocumentation","src":"4824:129:23","text":" @dev Vote on a submitted meme by paying the vote fee.\n Each call increases the meme's vote count by one."},"functionSelector":"867d6073","id":7416,"implemented":true,"kind":"function","modifiers":[{"id":7374,"kind":"modifierInvocation","modifierName":{"id":7373,"name":"onlyGalacticGRole","nameLocations":["5001:17:23"],"nodeType":"IdentifierPath","referencedDeclaration":7189,"src":"5001:17:23"},"nodeType":"ModifierInvocation","src":"5001:17:23"}],"name":"voteMeme","nameLocation":"4967:8:23","nodeType":"FunctionDefinition","parameters":{"id":7372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7371,"mutability":"mutable","name":"memeId","nameLocation":"4984:6:23","nodeType":"VariableDeclaration","scope":7416,"src":"4976:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7370,"name":"uint256","nodeType":"ElementaryTypeName","src":"4976:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4975:16:23"},"returnParameters":{"id":7375,"nodeType":"ParameterList","parameters":[],"src":"5019:0:23"},"scope":7515,"src":"4958:404:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7496,"nodeType":"Block","src":"5556:448:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7429,"name":"winners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7420,"src":"5574:7:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5582:6:23","memberName":"length","nodeType":"MemberAccess","src":"5574:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7431,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7423,"src":"5592:7:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5600:6:23","memberName":"length","nodeType":"MemberAccess","src":"5592:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5574:32:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d69736d617463686564206172726179206c656e67746873","id":7434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5608:26:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085","typeString":"literal_string \"Mismatched array lengths\""},"value":"Mismatched array lengths"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085","typeString":"literal_string \"Mismatched array lengths\""}],"id":7428,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5566:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5566:69:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7436,"nodeType":"ExpressionStatement","src":"5566:69:23"},{"assignments":[7438],"declarations":[{"constant":false,"id":7438,"mutability":"mutable","name":"totalReward","nameLocation":"5654:11:23","nodeType":"VariableDeclaration","scope":7496,"src":"5646:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7437,"name":"uint256","nodeType":"ElementaryTypeName","src":"5646:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7439,"nodeType":"VariableDeclarationStatement","src":"5646:19:23"},{"body":{"id":7457,"nodeType":"Block","src":"5720:50:23","statements":[{"expression":{"id":7455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7451,"name":"totalReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7438,"src":"5734:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":7452,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7423,"src":"5749:7:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7454,"indexExpression":{"id":7453,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7441,"src":"5757:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5749:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5734:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7456,"nodeType":"ExpressionStatement","src":"5734:25:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7444,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7441,"src":"5695:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7445,"name":"winners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7420,"src":"5699:7:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5707:6:23","memberName":"length","nodeType":"MemberAccess","src":"5699:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5695:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7458,"initializationExpression":{"assignments":[7441],"declarations":[{"constant":false,"id":7441,"mutability":"mutable","name":"i","nameLocation":"5688:1:23","nodeType":"VariableDeclaration","scope":7458,"src":"5680:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7440,"name":"uint256","nodeType":"ElementaryTypeName","src":"5680:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7443,"initialValue":{"hexValue":"30","id":7442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5692:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5680:13:23"},"loopExpression":{"expression":{"id":7449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5715:3:23","subExpression":{"id":7448,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7441,"src":"5715:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7450,"nodeType":"ExpressionStatement","src":"5715:3:23"},"nodeType":"ForStatement","src":"5675:95:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":7464,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5814:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_MemeContest_$7515","typeString":"contract MemeContest"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MemeContest_$7515","typeString":"contract MemeContest"}],"id":7463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5806:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7462,"name":"address","nodeType":"ElementaryTypeName","src":"5806:7:23","typeDescriptions":{}}},"id":7465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5806:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7460,"name":"nguToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7062,"src":"5787:8:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}},"id":7461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5796:9:23","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":437,"src":"5787:18:23","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":7466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5787:33:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7467,"name":"totalReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7438,"src":"5824:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5787:48:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e636520666f722072657761726473","id":7469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5837:34:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_a11bbde2fe764af74e1d4459d264f972380a8fc71ad8f10b8306caf307e5d50a","typeString":"literal_string \"Insufficient balance for rewards\""},"value":"Insufficient balance for rewards"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a11bbde2fe764af74e1d4459d264f972380a8fc71ad8f10b8306caf307e5d50a","typeString":"literal_string \"Insufficient balance for rewards\""}],"id":7459,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5779:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5779:93:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7471,"nodeType":"ExpressionStatement","src":"5779:93:23"},{"body":{"id":7494,"nodeType":"Block","src":"5928:70:23","statements":[{"expression":{"arguments":[{"baseExpression":{"id":7486,"name":"winners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7420,"src":"5964:7:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7488,"indexExpression":{"id":7487,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7473,"src":"5972:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5964:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":7489,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7423,"src":"5976:7:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7491,"indexExpression":{"id":7490,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7473,"src":"5984:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5976:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7483,"name":"nguToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7062,"src":"5942:8:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}},"id":7485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5951:12:23","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":525,"src":"5942:21:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$480_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$480_$","typeString":"function (contract IERC20,address,uint256)"}},"id":7492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5942:45:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7493,"nodeType":"ExpressionStatement","src":"5942:45:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7476,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7473,"src":"5903:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7477,"name":"winners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7420,"src":"5907:7:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5915:6:23","memberName":"length","nodeType":"MemberAccess","src":"5907:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5903:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7495,"initializationExpression":{"assignments":[7473],"declarations":[{"constant":false,"id":7473,"mutability":"mutable","name":"i","nameLocation":"5896:1:23","nodeType":"VariableDeclaration","scope":7495,"src":"5888:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7472,"name":"uint256","nodeType":"ElementaryTypeName","src":"5888:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7475,"initialValue":{"hexValue":"30","id":7474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5900:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5888:13:23"},"loopExpression":{"expression":{"id":7481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5923:3:23","subExpression":{"id":7480,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7473,"src":"5923:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7482,"nodeType":"ExpressionStatement","src":"5923:3:23"},"nodeType":"ForStatement","src":"5883:115:23"}]},"documentation":{"id":7417,"nodeType":"StructuredDocumentation","src":"5368:81:23","text":" @dev Admin function to distribute rewards from collected fees."},"functionSelector":"143ba4f3","id":7497,"implemented":true,"kind":"function","modifiers":[{"id":7426,"kind":"modifierInvocation","modifierName":{"id":7425,"name":"onlyOwner","nameLocations":["5546:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"5546:9:23"},"nodeType":"ModifierInvocation","src":"5546:9:23"}],"name":"distributeRewards","nameLocation":"5463:17:23","nodeType":"FunctionDefinition","parameters":{"id":7424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7420,"mutability":"mutable","name":"winners","nameLocation":"5500:7:23","nodeType":"VariableDeclaration","scope":7497,"src":"5481:26:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7418,"name":"address","nodeType":"ElementaryTypeName","src":"5481:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7419,"nodeType":"ArrayTypeName","src":"5481:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":7423,"mutability":"mutable","name":"rewards","nameLocation":"5528:7:23","nodeType":"VariableDeclaration","scope":7497,"src":"5509:26:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7421,"name":"uint256","nodeType":"ElementaryTypeName","src":"5509:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7422,"nodeType":"ArrayTypeName","src":"5509:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5480:56:23"},"returnParameters":{"id":7427,"nodeType":"ParameterList","parameters":[],"src":"5556:0:23"},"scope":7515,"src":"5454:550:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7513,"nodeType":"Block","src":"6163:55:23","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":7508,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"6195:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6195:7:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7510,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7500,"src":"6204:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7505,"name":"nguToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7062,"src":"6173:8:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$480","typeString":"contract IERC20"}},"id":7507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6182:12:23","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":525,"src":"6173:21:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$480_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$480_$","typeString":"function (contract IERC20,address,uint256)"}},"id":7511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6173:38:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7512,"nodeType":"ExpressionStatement","src":"6173:38:23"}]},"documentation":{"id":7498,"nodeType":"StructuredDocumentation","src":"6010:91:23","text":" @dev Owner can withdraw accumulated NGU tokens (fees) from the contract."},"functionSelector":"5e318e07","id":7514,"implemented":true,"kind":"function","modifiers":[{"id":7503,"kind":"modifierInvocation","modifierName":{"id":7502,"name":"onlyOwner","nameLocations":["6153:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"6153:9:23"},"nodeType":"ModifierInvocation","src":"6153:9:23"}],"name":"withdrawFees","nameLocation":"6115:12:23","nodeType":"FunctionDefinition","parameters":{"id":7501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7500,"mutability":"mutable","name":"amount","nameLocation":"6136:6:23","nodeType":"VariableDeclaration","scope":7514,"src":"6128:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7499,"name":"uint256","nodeType":"ElementaryTypeName","src":"6128:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6127:16:23"},"returnParameters":{"id":7504,"nodeType":"ParameterList","parameters":[],"src":"6163:0:23"},"scope":7515,"src":"6106:112:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":7516,"src":"314:5906:23","usedErrors":[13,18,313,318,327,332,337,344,349,354,492],"usedEvents":[24,253,260,1862,1871,1880,7102,7108,7116]}],"src":"32:6188:23"},"id":23},"contracts/SBT.sol":{"ast":{"absolutePath":"contracts/SBT.sol","exportedSymbols":{"Context":[2242],"ERC165":[3518],"ERC721":[1846],"ERC721Utils":[2212],"IERC165":[3530],"IERC721":[1963],"IERC721Errors":[355],"IERC721Metadata":[2135],"Ownable":[147],"SoulBoundToken":[7621],"Strings":[3494]},"id":7622,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7517,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:24"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":7518,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7622,"sourceUnit":1847,"src":"58:57:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7519,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7622,"sourceUnit":148,"src":"116:52:24","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7520,"name":"ERC721","nameLocations":["197:6:24"],"nodeType":"IdentifierPath","referencedDeclaration":1846,"src":"197:6:24"},"id":7521,"nodeType":"InheritanceSpecifier","src":"197:6:24"},{"baseName":{"id":7522,"name":"Ownable","nameLocations":["205:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"205:7:24"},"id":7523,"nodeType":"InheritanceSpecifier","src":"205:7:24"}],"canonicalName":"SoulBoundToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7621,"linearizedBaseContracts":[7621,147,1846,355,2135,1963,3518,3530,2242],"name":"SoulBoundToken","nameLocation":"179:14:24","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7525,"mutability":"mutable","name":"_tokenIdCounter","nameLocation":"235:15:24","nodeType":"VariableDeclaration","scope":7621,"src":"219:31:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7524,"name":"uint256","nodeType":"ElementaryTypeName","src":"219:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":7529,"mutability":"mutable","name":"_hasMinted","nameLocation":"289:10:24","nodeType":"VariableDeclaration","scope":7621,"src":"256:43:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":7528,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7526,"name":"address","nodeType":"ElementaryTypeName","src":"264:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"256:24:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7527,"name":"bool","nodeType":"ElementaryTypeName","src":"275:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"body":{"id":7544,"nodeType":"Block","src":"381:36:24","statements":[{"expression":{"id":7542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7540,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7525,"src":"391:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":7541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"409:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"391:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7543,"nodeType":"ExpressionStatement","src":"391:19:24"}]},"id":7545,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4e475520536f756c20426f756e6420546f6b656e","id":7532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"327:22:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_e427e7cf020fe563fe738648ebec9814c725c7c2e8bfc39631bd9e6966edab0c","typeString":"literal_string \"NGU Soul Bound Token\""},"value":"NGU Soul Bound Token"},{"hexValue":"4e4755534254","id":7533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"351:8:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_d2c669cff90f1b4d52cc5b0b3d3dba6ee608f4c12853a1ae72c61a7249674e0a","typeString":"literal_string \"NGUSBT\""},"value":"NGUSBT"}],"id":7534,"kind":"baseConstructorSpecifier","modifierName":{"id":7531,"name":"ERC721","nameLocations":["320:6:24"],"nodeType":"IdentifierPath","referencedDeclaration":1846,"src":"320:6:24"},"nodeType":"ModifierInvocation","src":"320:40:24"},{"arguments":[{"expression":{"id":7536,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"369:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"373:6:24","memberName":"sender","nodeType":"MemberAccess","src":"369:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7538,"kind":"baseConstructorSpecifier","modifierName":{"id":7535,"name":"Ownable","nameLocations":["361:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"361:7:24"},"nodeType":"ModifierInvocation","src":"361:19:24"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7530,"nodeType":"ParameterList","parameters":[],"src":"317:2:24"},"returnParameters":{"id":7539,"nodeType":"ParameterList","parameters":[],"src":"381:0:24"},"scope":7621,"src":"306:111:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7575,"nodeType":"Block","src":"466:175:24","statements":[{"expression":{"arguments":[{"id":7556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"484:15:24","subExpression":{"baseExpression":{"id":7553,"name":"_hasMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7529,"src":"485:10:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7555,"indexExpression":{"id":7554,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7547,"src":"496:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"485:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573732068617320616c7265616479206d696e74656420616e20534254","id":7557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"501:35:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_e3b737c0f4e11dbbe996f8c49d6412d2a2d006b0d7072d02a885755268728a3c","typeString":"literal_string \"Address has already minted an SBT\""},"value":"Address has already minted an SBT"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e3b737c0f4e11dbbe996f8c49d6412d2a2d006b0d7072d02a885755268728a3c","typeString":"literal_string \"Address has already minted an SBT\""}],"id":7552,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"476:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"476:61:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7559,"nodeType":"ExpressionStatement","src":"476:61:24"},{"expression":{"id":7562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7560,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7525,"src":"547:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":7561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"566:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"547:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7563,"nodeType":"ExpressionStatement","src":"547:20:24"},{"expression":{"arguments":[{"id":7565,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7547,"src":"583:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7566,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7525,"src":"587:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7564,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"577:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"577:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7568,"nodeType":"ExpressionStatement","src":"577:26:24"},{"expression":{"id":7573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7569,"name":"_hasMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7529,"src":"613:10:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7571,"indexExpression":{"id":7570,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7547,"src":"624:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"613:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"630:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"613:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7574,"nodeType":"ExpressionStatement","src":"613:21:24"}]},"functionSelector":"6a627842","id":7576,"implemented":true,"kind":"function","modifiers":[{"id":7550,"kind":"modifierInvocation","modifierName":{"id":7549,"name":"onlyOwner","nameLocations":["456:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"456:9:24"},"nodeType":"ModifierInvocation","src":"456:9:24"}],"name":"mint","nameLocation":"432:4:24","nodeType":"FunctionDefinition","parameters":{"id":7548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7547,"mutability":"mutable","name":"to","nameLocation":"445:2:24","nodeType":"VariableDeclaration","scope":7576,"src":"437:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7546,"name":"address","nodeType":"ElementaryTypeName","src":"437:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"436:12:24"},"returnParameters":{"id":7551,"nodeType":"ParameterList","parameters":[],"src":"466:0:24"},"scope":7621,"src":"423:218:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1206],"body":{"id":7590,"nodeType":"Block","src":"751:70:24","statements":[{"expression":{"arguments":[{"hexValue":"536f756c426f756e64546f6b656e3a20546f6b656e7320617265206e6f6e2d7472616e7366657261626c65","id":7587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"768:45:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_2597068d33a295edc85a1ae1f52030e1853f79ea98290f0d7046806186b0c635","typeString":"literal_string \"SoulBoundToken: Tokens are non-transferable\""},"value":"SoulBoundToken: Tokens are non-transferable"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_2597068d33a295edc85a1ae1f52030e1853f79ea98290f0d7046806186b0c635","typeString":"literal_string \"SoulBoundToken: Tokens are non-transferable\""}],"id":7586,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"761:6:24","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":7588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"761:53:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7589,"nodeType":"ExpressionStatement","src":"761:53:24"}]},"functionSelector":"23b872dd","id":7591,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"656:12:24","nodeType":"FunctionDefinition","overrides":{"id":7584,"nodeType":"OverrideSpecifier","overrides":[],"src":"742:8:24"},"parameters":{"id":7583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7591,"src":"669:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7577,"name":"address","nodeType":"ElementaryTypeName","src":"669:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7591,"src":"689:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7579,"name":"address","nodeType":"ElementaryTypeName","src":"689:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7591,"src":"707:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7581,"name":"uint256","nodeType":"ElementaryTypeName","src":"707:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"668:61:24"},"returnParameters":{"id":7585,"nodeType":"ParameterList","parameters":[],"src":"751:0:24"},"scope":7621,"src":"647:174:24","stateMutability":"pure","virtual":false,"visibility":"public"},{"baseFunctions":[1254],"body":{"id":7607,"nodeType":"Block","src":"960:70:24","statements":[{"expression":{"arguments":[{"hexValue":"536f756c426f756e64546f6b656e3a20546f6b656e7320617265206e6f6e2d7472616e7366657261626c65","id":7604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"977:45:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_2597068d33a295edc85a1ae1f52030e1853f79ea98290f0d7046806186b0c635","typeString":"literal_string \"SoulBoundToken: Tokens are non-transferable\""},"value":"SoulBoundToken: Tokens are non-transferable"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_2597068d33a295edc85a1ae1f52030e1853f79ea98290f0d7046806186b0c635","typeString":"literal_string \"SoulBoundToken: Tokens are non-transferable\""}],"id":7603,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"970:6:24","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":7605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"970:53:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7606,"nodeType":"ExpressionStatement","src":"970:53:24"}]},"functionSelector":"b88d4fde","id":7608,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"836:16:24","nodeType":"FunctionDefinition","overrides":{"id":7601,"nodeType":"OverrideSpecifier","overrides":[],"src":"951:8:24"},"parameters":{"id":7600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7593,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7608,"src":"853:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7592,"name":"address","nodeType":"ElementaryTypeName","src":"853:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7608,"src":"873:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7594,"name":"address","nodeType":"ElementaryTypeName","src":"873:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7608,"src":"891:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7596,"name":"uint256","nodeType":"ElementaryTypeName","src":"891:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7608,"src":"914:12:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7598,"name":"bytes","nodeType":"ElementaryTypeName","src":"914:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"852:86:24"},"returnParameters":{"id":7602,"nodeType":"ParameterList","parameters":[],"src":"960:0:24"},"scope":7621,"src":"827:203:24","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":7619,"nodeType":"Block","src":"1093:40:24","statements":[{"expression":{"baseExpression":{"id":7615,"name":"_hasMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7529,"src":"1110:10:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7617,"indexExpression":{"id":7616,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7610,"src":"1121:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1110:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7614,"id":7618,"nodeType":"Return","src":"1103:23:24"}]},"functionSelector":"56a9c454","id":7620,"implemented":true,"kind":"function","modifiers":[],"name":"hasSBT","nameLocation":"1045:6:24","nodeType":"FunctionDefinition","parameters":{"id":7611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7610,"mutability":"mutable","name":"user","nameLocation":"1060:4:24","nodeType":"VariableDeclaration","scope":7620,"src":"1052:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7609,"name":"address","nodeType":"ElementaryTypeName","src":"1052:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1051:14:24"},"returnParameters":{"id":7614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7620,"src":"1087:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7612,"name":"bool","nodeType":"ElementaryTypeName","src":"1087:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1086:6:24"},"scope":7621,"src":"1036:97:24","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":7622,"src":"170:965:24","usedErrors":[13,18,313,318,327,332,337,344,349,354],"usedEvents":[24,1862,1871,1880]}],"src":"32:1103:24"},"id":24}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"IERC4906":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203d364fd7ef49ba270f7802663c55ba9a23ec0081f61f33eaf9453452ec832c0364736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE CALLDATASIZE 0x4F 0xD7 0xEF 0x49 0xBA 0x27 0xF PUSH25 0x2663C55BA9A23EC0081F61F33EAF9453452EC832C0364736F PUSH13 0x63430008140033000000000000 ","sourceMap":"698:8692:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203d364fd7ef49ba270f7802663c55ba9a23ec0081f61f33eaf9453452ec832c0364736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE CALLDATASIZE 0x4F 0xD7 0xEF 0x49 0xBA 0x27 0xF PUSH25 0x2663C55BA9A23EC0081F61F33EAF9453452EC832C0364736F PUSH13 0x63430008140033000000000000 ","sourceMap":"698:8692:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xe52813067c6d5838eeb34e1da8beb2514371a7d778266013b04ca3be1dda7100\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53fb552d625eb5f60ef9dce439c826bb780952cbbafc985db6e48ac6382a5585\",\"dweb:/ipfs/QmSEbLqEWN1SqsWekfqt6RWC4oEajFWtZ5j8i6gKaGdtKr\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122094a564e6a87c47303b64da925a5efccb7f3eb052eeef7b82a5440c296b82d8bd64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xA5 PUSH5 0xE6A87C4730 EXTCODESIZE PUSH5 0xDA925A5EFC 0xCB PUSH32 0x3EB052EEEF7B82A5440C296B82D8BD64736F6C63430008140033000000000000 ","sourceMap":"431:1480:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122094a564e6a87c47303b64da925a5efccb7f3eb052eeef7b82a5440c296b82d8bd64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xA5 PUSH5 0xE6A87C4730 EXTCODESIZE PUSH5 0xDA925A5EFC 0xCB PUSH32 0x3EB052EEEF7B82A5440C296B82D8BD64736F6C63430008140033000000000000 ","sourceMap":"431:1480:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220324c39d5297afb136187e0a02fa806c282a2d4d9d4ba345dc57f45522daa24fb64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0x4C CODECOPY 0xD5 0x29 PUSH27 0xFB136187E0A02FA806C282A2D4D9D4BA345DC57F45522DAA24FB64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"297:16541:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220324c39d5297afb136187e0a02fa806c282a2d4d9d4ba345dc57f45522daa24fb64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0x4C CODECOPY 0xD5 0x29 PUSH27 0xFB136187E0A02FA806C282A2D4D9D4BA345DC57F45522DAA24FB64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"297:16541:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122077b13a6b811363169a34dc3026c435f66e1a245ec08d364ff325e78b6f413bd064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xB13A6B811363169A34DC3026C435F66E1A245EC08D364FF3 0x25 0xE7 DUP12 PUSH16 0x413BD064736F6C634300081400330000 ","sourceMap":"281:28026:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122077b13a6b811363169a34dc3026c435f66e1a245ec08d364ff325e78b6f413bd064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xB13A6B811363169A34DC3026C435F66E1A245EC08D364FF3 0x25 0xE7 DUP12 PUSH16 0x413BD064736F6C634300081400330000 ","sourceMap":"281:28026:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/MemeContest.sol":{"MemeContest":{"abi":[{"inputs":[{"internalType":"contract IERC20","name":"_nguToken","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"creator","type":"address"}],"name":"MemeMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"creator","type":"address"},{"indexed":false,"internalType":"string","name":"memeURI","type":"string"}],"name":"MemeSubmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"voteCount","type":"uint256"}],"name":"MemeVoted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"addGalacticG","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"creationFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"winners","type":"address[]"},{"internalType":"uint256[]","name":"rewards","type":"uint256[]"}],"name":"distributeRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isGalacticG","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"memes","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"creator","type":"address"},{"internalType":"string","name":"memeURI","type":"string"},{"internalType":"uint256","name":"voteCount","type":"uint256"},{"internalType":"bool","name":"minted","type":"bool"},{"internalType":"bool","name":"submitted","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"memeId","type":"uint256"}],"name":"mintMeme","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"mintingFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nguToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"removeGalacticG","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_creationFee","type":"uint256"},{"internalType":"uint256","name":"_mintingFee","type":"uint256"},{"internalType":"uint256","name":"_submissionFee","type":"uint256"},{"internalType":"uint256","name":"_voteFee","type":"uint256"}],"name":"setFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"submissionFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"memeURI","type":"string"}],"name":"submitMeme","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"voteFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"memeId","type":"uint256"}],"name":"voteMeme","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawFees","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_7176":{"entryPoint":null,"id":7176,"parameterSlots":1,"returnSlots":0},"@_959":{"entryPoint":null,"id":959,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":477,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_t_contract$_IERC20_$480_fromMemory":{"entryPoint":778,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IERC20_$480_fromMemory":{"entryPoint":801,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1716,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1733,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1009,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":851,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1330,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":712,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IERC20_$480":{"entryPoint":732,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":680,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1145,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1291,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1165,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1485,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1030,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":956,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1455,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":1155,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1423,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":909,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":862,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1205,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":675,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_dynamic":{"entryPoint":1046,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1410,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1263,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1059,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1215,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_contract$_IERC20_$480":{"entryPoint":752,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1258,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6978:25","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:25","statements":[{"nodeType":"YulAssignment","src":"57:19:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:25"},"nodeType":"YulFunctionCall","src":"67:9:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:25"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:25","type":""}],"src":"7:75:25"},{"body":{"nodeType":"YulBlock","src":"177:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:25"},"nodeType":"YulFunctionCall","src":"187:12:25"},"nodeType":"YulExpressionStatement","src":"187:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:25"},{"body":{"nodeType":"YulBlock","src":"300:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:25"},"nodeType":"YulFunctionCall","src":"310:12:25"},"nodeType":"YulExpressionStatement","src":"310:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:25"},{"body":{"nodeType":"YulBlock","src":"379:81:25","statements":[{"nodeType":"YulAssignment","src":"389:65:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:25"},"nodeType":"YulFunctionCall","src":"400:54:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:25"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:25","type":""}],"src":"334:126:25"},{"body":{"nodeType":"YulBlock","src":"511:51:25","statements":[{"nodeType":"YulAssignment","src":"521:35:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:25"},"nodeType":"YulFunctionCall","src":"532:24:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:25"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:25","type":""}],"src":"466:96:25"},{"body":{"nodeType":"YulBlock","src":"627:51:25","statements":[{"nodeType":"YulAssignment","src":"637:35:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"666:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"648:17:25"},"nodeType":"YulFunctionCall","src":"648:24:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"637:7:25"}]}]},"name":"cleanup_t_contract$_IERC20_$480","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"609:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"619:7:25","type":""}],"src":"568:110:25"},{"body":{"nodeType":"YulBlock","src":"741:93:25","statements":[{"body":{"nodeType":"YulBlock","src":"812:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"821:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"824:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"814:6:25"},"nodeType":"YulFunctionCall","src":"814:12:25"},"nodeType":"YulExpressionStatement","src":"814:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"764:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"803:5:25"}],"functionName":{"name":"cleanup_t_contract$_IERC20_$480","nodeType":"YulIdentifier","src":"771:31:25"},"nodeType":"YulFunctionCall","src":"771:38:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"761:2:25"},"nodeType":"YulFunctionCall","src":"761:49:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"754:6:25"},"nodeType":"YulFunctionCall","src":"754:57:25"},"nodeType":"YulIf","src":"751:77:25"}]},"name":"validator_revert_t_contract$_IERC20_$480","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"734:5:25","type":""}],"src":"684:150:25"},{"body":{"nodeType":"YulBlock","src":"917:94:25","statements":[{"nodeType":"YulAssignment","src":"927:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"942:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"936:5:25"},"nodeType":"YulFunctionCall","src":"936:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"927:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"999:5:25"}],"functionName":{"name":"validator_revert_t_contract$_IERC20_$480","nodeType":"YulIdentifier","src":"958:40:25"},"nodeType":"YulFunctionCall","src":"958:47:25"},"nodeType":"YulExpressionStatement","src":"958:47:25"}]},"name":"abi_decode_t_contract$_IERC20_$480_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"895:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"903:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"911:5:25","type":""}],"src":"840:171:25"},{"body":{"nodeType":"YulBlock","src":"1108:288:25","statements":[{"body":{"nodeType":"YulBlock","src":"1154:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1156:77:25"},"nodeType":"YulFunctionCall","src":"1156:79:25"},"nodeType":"YulExpressionStatement","src":"1156:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1129:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"1138:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1125:3:25"},"nodeType":"YulFunctionCall","src":"1125:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"1150:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1121:3:25"},"nodeType":"YulFunctionCall","src":"1121:32:25"},"nodeType":"YulIf","src":"1118:119:25"},{"nodeType":"YulBlock","src":"1247:142:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1262:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"1276:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1266:6:25","type":""}]},{"nodeType":"YulAssignment","src":"1291:88:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1351:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"1362:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1347:3:25"},"nodeType":"YulFunctionCall","src":"1347:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1371:7:25"}],"functionName":{"name":"abi_decode_t_contract$_IERC20_$480_fromMemory","nodeType":"YulIdentifier","src":"1301:45:25"},"nodeType":"YulFunctionCall","src":"1301:78:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1291:6:25"}]}]}]},"name":"abi_decode_tuple_t_contract$_IERC20_$480_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1078:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1089:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1101:6:25","type":""}],"src":"1017:379:25"},{"body":{"nodeType":"YulBlock","src":"1461:40:25","statements":[{"nodeType":"YulAssignment","src":"1472:22:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1488:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1482:5:25"},"nodeType":"YulFunctionCall","src":"1482:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1472:6:25"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1444:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1454:6:25","type":""}],"src":"1402:99:25"},{"body":{"nodeType":"YulBlock","src":"1535:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1552:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1555:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1545:6:25"},"nodeType":"YulFunctionCall","src":"1545:88:25"},"nodeType":"YulExpressionStatement","src":"1545:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1649:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1652:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1642:6:25"},"nodeType":"YulFunctionCall","src":"1642:15:25"},"nodeType":"YulExpressionStatement","src":"1642:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1673:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1676:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1666:6:25"},"nodeType":"YulFunctionCall","src":"1666:15:25"},"nodeType":"YulExpressionStatement","src":"1666:15:25"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1507:180:25"},{"body":{"nodeType":"YulBlock","src":"1721:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1738:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1741:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1731:6:25"},"nodeType":"YulFunctionCall","src":"1731:88:25"},"nodeType":"YulExpressionStatement","src":"1731:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1835:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1838:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1828:6:25"},"nodeType":"YulFunctionCall","src":"1828:15:25"},"nodeType":"YulExpressionStatement","src":"1828:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1859:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1862:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1852:6:25"},"nodeType":"YulFunctionCall","src":"1852:15:25"},"nodeType":"YulExpressionStatement","src":"1852:15:25"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"1693:180:25"},{"body":{"nodeType":"YulBlock","src":"1930:269:25","statements":[{"nodeType":"YulAssignment","src":"1940:22:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1954:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"1960:1:25","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1950:3:25"},"nodeType":"YulFunctionCall","src":"1950:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1940:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"1971:38:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2001:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"2007:1:25","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1997:3:25"},"nodeType":"YulFunctionCall","src":"1997:12:25"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1975:18:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"2048:51:25","statements":[{"nodeType":"YulAssignment","src":"2062:27:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2076:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"2084:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2072:3:25"},"nodeType":"YulFunctionCall","src":"2072:17:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2062:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2028:18:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2021:6:25"},"nodeType":"YulFunctionCall","src":"2021:26:25"},"nodeType":"YulIf","src":"2018:81:25"},{"body":{"nodeType":"YulBlock","src":"2151:42:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"2165:16:25"},"nodeType":"YulFunctionCall","src":"2165:18:25"},"nodeType":"YulExpressionStatement","src":"2165:18:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2115:18:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2138:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"2146:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2135:2:25"},"nodeType":"YulFunctionCall","src":"2135:14:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2112:2:25"},"nodeType":"YulFunctionCall","src":"2112:38:25"},"nodeType":"YulIf","src":"2109:84:25"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1914:4:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1923:6:25","type":""}],"src":"1879:320:25"},{"body":{"nodeType":"YulBlock","src":"2259:87:25","statements":[{"nodeType":"YulAssignment","src":"2269:11:25","value":{"name":"ptr","nodeType":"YulIdentifier","src":"2277:3:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2269:4:25"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2297:1:25","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2300:3:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2290:6:25"},"nodeType":"YulFunctionCall","src":"2290:14:25"},"nodeType":"YulExpressionStatement","src":"2290:14:25"},{"nodeType":"YulAssignment","src":"2313:26:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2331:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2334:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2321:9:25"},"nodeType":"YulFunctionCall","src":"2321:18:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2313:4:25"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2246:3:25","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2254:4:25","type":""}],"src":"2205:141:25"},{"body":{"nodeType":"YulBlock","src":"2396:49:25","statements":[{"nodeType":"YulAssignment","src":"2406:33:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2424:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"2431:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2420:3:25"},"nodeType":"YulFunctionCall","src":"2420:14:25"},{"kind":"number","nodeType":"YulLiteral","src":"2436:2:25","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2416:3:25"},"nodeType":"YulFunctionCall","src":"2416:23:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2406:6:25"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2379:5:25","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2389:6:25","type":""}],"src":"2352:93:25"},{"body":{"nodeType":"YulBlock","src":"2504:54:25","statements":[{"nodeType":"YulAssignment","src":"2514:37:25","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"2539:4:25"},{"name":"value","nodeType":"YulIdentifier","src":"2545:5:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2535:3:25"},"nodeType":"YulFunctionCall","src":"2535:16:25"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"2514:8:25"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"2479:4:25","type":""},{"name":"value","nodeType":"YulTypedName","src":"2485:5:25","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"2495:8:25","type":""}],"src":"2451:107:25"},{"body":{"nodeType":"YulBlock","src":"2640:317:25","statements":[{"nodeType":"YulVariableDeclaration","src":"2650:35:25","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"2671:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"2683:1:25","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2667:3:25"},"nodeType":"YulFunctionCall","src":"2667:18:25"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"2654:9:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2694:109:25","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2725:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2736:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2706:18:25"},"nodeType":"YulFunctionCall","src":"2706:97:25"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"2698:4:25","type":""}]},{"nodeType":"YulAssignment","src":"2812:51:25","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2843:9:25"},{"name":"toInsert","nodeType":"YulIdentifier","src":"2854:8:25"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2824:18:25"},"nodeType":"YulFunctionCall","src":"2824:39:25"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2812:8:25"}]},{"nodeType":"YulAssignment","src":"2872:30:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2885:5:25"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"2896:4:25"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2892:3:25"},"nodeType":"YulFunctionCall","src":"2892:9:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2881:3:25"},"nodeType":"YulFunctionCall","src":"2881:21:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2872:5:25"}]},{"nodeType":"YulAssignment","src":"2911:40:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2924:5:25"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2935:8:25"},{"name":"mask","nodeType":"YulIdentifier","src":"2945:4:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2931:3:25"},"nodeType":"YulFunctionCall","src":"2931:19:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2921:2:25"},"nodeType":"YulFunctionCall","src":"2921:30:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2911:6:25"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2601:5:25","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"2608:10:25","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"2620:8:25","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2633:6:25","type":""}],"src":"2564:393:25"},{"body":{"nodeType":"YulBlock","src":"3008:32:25","statements":[{"nodeType":"YulAssignment","src":"3018:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"3029:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3018:7:25"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2990:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3000:7:25","type":""}],"src":"2963:77:25"},{"body":{"nodeType":"YulBlock","src":"3078:28:25","statements":[{"nodeType":"YulAssignment","src":"3088:12:25","value":{"name":"value","nodeType":"YulIdentifier","src":"3095:5:25"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3088:3:25"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3064:5:25","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3074:3:25","type":""}],"src":"3046:60:25"},{"body":{"nodeType":"YulBlock","src":"3172:82:25","statements":[{"nodeType":"YulAssignment","src":"3182:66:25","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3240:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3222:17:25"},"nodeType":"YulFunctionCall","src":"3222:24:25"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"3213:8:25"},"nodeType":"YulFunctionCall","src":"3213:34:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3195:17:25"},"nodeType":"YulFunctionCall","src":"3195:53:25"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3182:9:25"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3152:5:25","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3162:9:25","type":""}],"src":"3112:142:25"},{"body":{"nodeType":"YulBlock","src":"3307:28:25","statements":[{"nodeType":"YulAssignment","src":"3317:12:25","value":{"name":"value","nodeType":"YulIdentifier","src":"3324:5:25"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3317:3:25"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3293:5:25","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3303:3:25","type":""}],"src":"3260:75:25"},{"body":{"nodeType":"YulBlock","src":"3417:193:25","statements":[{"nodeType":"YulVariableDeclaration","src":"3427:63:25","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"3482:7:25"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3451:30:25"},"nodeType":"YulFunctionCall","src":"3451:39:25"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"3431:16:25","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3506:4:25"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3546:4:25"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3540:5:25"},"nodeType":"YulFunctionCall","src":"3540:11:25"},{"name":"offset","nodeType":"YulIdentifier","src":"3553:6:25"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"3585:16:25"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"3561:23:25"},"nodeType":"YulFunctionCall","src":"3561:41:25"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"3512:27:25"},"nodeType":"YulFunctionCall","src":"3512:91:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3499:6:25"},"nodeType":"YulFunctionCall","src":"3499:105:25"},"nodeType":"YulExpressionStatement","src":"3499:105:25"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3394:4:25","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3400:6:25","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"3408:7:25","type":""}],"src":"3341:269:25"},{"body":{"nodeType":"YulBlock","src":"3665:24:25","statements":[{"nodeType":"YulAssignment","src":"3675:8:25","value":{"kind":"number","nodeType":"YulLiteral","src":"3682:1:25","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3675:3:25"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3661:3:25","type":""}],"src":"3616:73:25"},{"body":{"nodeType":"YulBlock","src":"3748:136:25","statements":[{"nodeType":"YulVariableDeclaration","src":"3758:46:25","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"3772:30:25"},"nodeType":"YulFunctionCall","src":"3772:32:25"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"3762:6:25","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3857:4:25"},{"name":"offset","nodeType":"YulIdentifier","src":"3863:6:25"},{"name":"zero_0","nodeType":"YulIdentifier","src":"3871:6:25"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3813:43:25"},"nodeType":"YulFunctionCall","src":"3813:65:25"},"nodeType":"YulExpressionStatement","src":"3813:65:25"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3734:4:25","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3740:6:25","type":""}],"src":"3695:189:25"},{"body":{"nodeType":"YulBlock","src":"3940:136:25","statements":[{"body":{"nodeType":"YulBlock","src":"4007:63:25","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4051:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"4058:1:25","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"4021:29:25"},"nodeType":"YulFunctionCall","src":"4021:39:25"},"nodeType":"YulExpressionStatement","src":"4021:39:25"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3960:5:25"},{"name":"end","nodeType":"YulIdentifier","src":"3967:3:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3957:2:25"},"nodeType":"YulFunctionCall","src":"3957:14:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3972:26:25","statements":[{"nodeType":"YulAssignment","src":"3974:22:25","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3987:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"3994:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3983:3:25"},"nodeType":"YulFunctionCall","src":"3983:13:25"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"3974:5:25"}]}]},"pre":{"nodeType":"YulBlock","src":"3954:2:25","statements":[]},"src":"3950:120:25"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"3928:5:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"3935:3:25","type":""}],"src":"3890:186:25"},{"body":{"nodeType":"YulBlock","src":"4161:464:25","statements":[{"body":{"nodeType":"YulBlock","src":"4187:431:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4201:54:25","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4249:5:25"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4217:31:25"},"nodeType":"YulFunctionCall","src":"4217:38:25"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"4205:8:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4268:63:25","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4291:8:25"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4319:10:25"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4301:17:25"},"nodeType":"YulFunctionCall","src":"4301:29:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4287:3:25"},"nodeType":"YulFunctionCall","src":"4287:44:25"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"4272:11:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"4488:27:25","statements":[{"nodeType":"YulAssignment","src":"4490:23:25","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"4505:8:25"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4490:11:25"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4472:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"4484:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4469:2:25"},"nodeType":"YulFunctionCall","src":"4469:18:25"},"nodeType":"YulIf","src":"4466:49:25"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4557:11:25"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4574:8:25"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4602:3:25"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4584:17:25"},"nodeType":"YulFunctionCall","src":"4584:22:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4570:3:25"},"nodeType":"YulFunctionCall","src":"4570:37:25"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"4528:28:25"},"nodeType":"YulFunctionCall","src":"4528:80:25"},"nodeType":"YulExpressionStatement","src":"4528:80:25"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4178:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"4183:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4175:2:25"},"nodeType":"YulFunctionCall","src":"4175:11:25"},"nodeType":"YulIf","src":"4172:446:25"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"4137:5:25","type":""},{"name":"len","nodeType":"YulTypedName","src":"4144:3:25","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"4149:10:25","type":""}],"src":"4082:543:25"},{"body":{"nodeType":"YulBlock","src":"4694:54:25","statements":[{"nodeType":"YulAssignment","src":"4704:37:25","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4729:4:25"},{"name":"value","nodeType":"YulIdentifier","src":"4735:5:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4725:3:25"},"nodeType":"YulFunctionCall","src":"4725:16:25"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4704:8:25"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4669:4:25","type":""},{"name":"value","nodeType":"YulTypedName","src":"4675:5:25","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4685:8:25","type":""}],"src":"4631:117:25"},{"body":{"nodeType":"YulBlock","src":"4805:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4815:68:25","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4864:1:25","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"4867:5:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4860:3:25"},"nodeType":"YulFunctionCall","src":"4860:13:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4879:1:25","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4875:3:25"},"nodeType":"YulFunctionCall","src":"4875:6:25"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"4831:28:25"},"nodeType":"YulFunctionCall","src":"4831:51:25"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4827:3:25"},"nodeType":"YulFunctionCall","src":"4827:56:25"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4819:4:25","type":""}]},{"nodeType":"YulAssignment","src":"4892:25:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4906:4:25"},{"name":"mask","nodeType":"YulIdentifier","src":"4912:4:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4902:3:25"},"nodeType":"YulFunctionCall","src":"4902:15:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4892:6:25"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4782:4:25","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"4788:5:25","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4798:6:25","type":""}],"src":"4754:169:25"},{"body":{"nodeType":"YulBlock","src":"5009:214:25","statements":[{"nodeType":"YulAssignment","src":"5142:37:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5169:4:25"},{"name":"len","nodeType":"YulIdentifier","src":"5175:3:25"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"5150:18:25"},"nodeType":"YulFunctionCall","src":"5150:29:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5142:4:25"}]},{"nodeType":"YulAssignment","src":"5188:29:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5199:4:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5209:1:25","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"5212:3:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5205:3:25"},"nodeType":"YulFunctionCall","src":"5205:11:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5196:2:25"},"nodeType":"YulFunctionCall","src":"5196:21:25"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"5188:4:25"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4990:4:25","type":""},{"name":"len","nodeType":"YulTypedName","src":"4996:3:25","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"5004:4:25","type":""}],"src":"4928:295:25"},{"body":{"nodeType":"YulBlock","src":"5320:1303:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5331:51:25","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5378:3:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5345:32:25"},"nodeType":"YulFunctionCall","src":"5345:37:25"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"5335:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"5467:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5469:16:25"},"nodeType":"YulFunctionCall","src":"5469:18:25"},"nodeType":"YulExpressionStatement","src":"5469:18:25"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5439:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"5447:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5436:2:25"},"nodeType":"YulFunctionCall","src":"5436:30:25"},"nodeType":"YulIf","src":"5433:56:25"},{"nodeType":"YulVariableDeclaration","src":"5499:52:25","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5545:4:25"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5539:5:25"},"nodeType":"YulFunctionCall","src":"5539:11:25"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"5513:25:25"},"nodeType":"YulFunctionCall","src":"5513:38:25"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"5503:6:25","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5644:4:25"},{"name":"oldLen","nodeType":"YulIdentifier","src":"5650:6:25"},{"name":"newLen","nodeType":"YulIdentifier","src":"5658:6:25"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"5598:45:25"},"nodeType":"YulFunctionCall","src":"5598:67:25"},"nodeType":"YulExpressionStatement","src":"5598:67:25"},{"nodeType":"YulVariableDeclaration","src":"5675:18:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5692:1:25","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"5679:9:25","type":""}]},{"nodeType":"YulAssignment","src":"5703:17:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5716:4:25","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5703:9:25"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"5767:611:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5781:37:25","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5800:6:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5812:4:25","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5808:3:25"},"nodeType":"YulFunctionCall","src":"5808:9:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5796:3:25"},"nodeType":"YulFunctionCall","src":"5796:22:25"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"5785:7:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5832:51:25","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5878:4:25"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"5846:31:25"},"nodeType":"YulFunctionCall","src":"5846:37:25"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"5836:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5896:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5905:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5900:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"5964:163:25","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5989:6:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6007:3:25"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6012:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6003:3:25"},"nodeType":"YulFunctionCall","src":"6003:19:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5997:5:25"},"nodeType":"YulFunctionCall","src":"5997:26:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5982:6:25"},"nodeType":"YulFunctionCall","src":"5982:42:25"},"nodeType":"YulExpressionStatement","src":"5982:42:25"},{"nodeType":"YulAssignment","src":"6041:24:25","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6055:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"6063:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6051:3:25"},"nodeType":"YulFunctionCall","src":"6051:14:25"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6041:6:25"}]},{"nodeType":"YulAssignment","src":"6082:31:25","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6099:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6110:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6095:3:25"},"nodeType":"YulFunctionCall","src":"6095:18:25"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6082:9:25"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5930:1:25"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"5933:7:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5927:2:25"},"nodeType":"YulFunctionCall","src":"5927:14:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5942:21:25","statements":[{"nodeType":"YulAssignment","src":"5944:17:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5953:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"5956:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5949:3:25"},"nodeType":"YulFunctionCall","src":"5949:12:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5944:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"5923:3:25","statements":[]},"src":"5919:208:25"},{"body":{"nodeType":"YulBlock","src":"6163:156:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6181:43:25","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6208:3:25"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6213:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6204:3:25"},"nodeType":"YulFunctionCall","src":"6204:19:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6198:5:25"},"nodeType":"YulFunctionCall","src":"6198:26:25"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"6185:9:25","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6248:6:25"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"6275:9:25"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6290:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"6298:4:25","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6286:3:25"},"nodeType":"YulFunctionCall","src":"6286:17:25"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"6256:18:25"},"nodeType":"YulFunctionCall","src":"6256:48:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6241:6:25"},"nodeType":"YulFunctionCall","src":"6241:64:25"},"nodeType":"YulExpressionStatement","src":"6241:64:25"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"6146:7:25"},{"name":"newLen","nodeType":"YulIdentifier","src":"6155:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6143:2:25"},"nodeType":"YulFunctionCall","src":"6143:19:25"},"nodeType":"YulIf","src":"6140:179:25"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6339:4:25"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6353:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"6361:1:25","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6349:3:25"},"nodeType":"YulFunctionCall","src":"6349:14:25"},{"kind":"number","nodeType":"YulLiteral","src":"6365:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6345:3:25"},"nodeType":"YulFunctionCall","src":"6345:22:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6332:6:25"},"nodeType":"YulFunctionCall","src":"6332:36:25"},"nodeType":"YulExpressionStatement","src":"6332:36:25"}]},"nodeType":"YulCase","src":"5760:618:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5765:1:25","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"6395:222:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6409:14:25","value":{"kind":"number","nodeType":"YulLiteral","src":"6422:1:25","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6413:5:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"6446:67:25","statements":[{"nodeType":"YulAssignment","src":"6464:35:25","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6483:3:25"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6488:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6479:3:25"},"nodeType":"YulFunctionCall","src":"6479:19:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6473:5:25"},"nodeType":"YulFunctionCall","src":"6473:26:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6464:5:25"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"6439:6:25"},"nodeType":"YulIf","src":"6436:77:25"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6533:4:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6592:5:25"},{"name":"newLen","nodeType":"YulIdentifier","src":"6599:6:25"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"6539:52:25"},"nodeType":"YulFunctionCall","src":"6539:67:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6526:6:25"},"nodeType":"YulFunctionCall","src":"6526:81:25"},"nodeType":"YulExpressionStatement","src":"6526:81:25"}]},"nodeType":"YulCase","src":"6387:230:25","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5740:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"5748:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5737:2:25"},"nodeType":"YulFunctionCall","src":"5737:14:25"},"nodeType":"YulSwitch","src":"5730:887:25"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5309:4:25","type":""},{"name":"src","nodeType":"YulTypedName","src":"5315:3:25","type":""}],"src":"5228:1395:25"},{"body":{"nodeType":"YulBlock","src":"6694:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6711:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6734:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6716:17:25"},"nodeType":"YulFunctionCall","src":"6716:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6704:6:25"},"nodeType":"YulFunctionCall","src":"6704:37:25"},"nodeType":"YulExpressionStatement","src":"6704:37:25"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6682:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6689:3:25","type":""}],"src":"6629:118:25"},{"body":{"nodeType":"YulBlock","src":"6851:124:25","statements":[{"nodeType":"YulAssignment","src":"6861:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6873:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6884:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6869:3:25"},"nodeType":"YulFunctionCall","src":"6869:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6861:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6941:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6954:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6965:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6950:3:25"},"nodeType":"YulFunctionCall","src":"6950:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6897:43:25"},"nodeType":"YulFunctionCall","src":"6897:71:25"},"nodeType":"YulExpressionStatement","src":"6897:71:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6823:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6835:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6846:4:25","type":""}],"src":"6753:222:25"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$480(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$480(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$480(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$480_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$480(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$480_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$480_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620043e3380380620043e3833981810160405281019062000037919062000321565b336040518060400160405280600881526020017f4e4755204d656d650000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f4e47554d000000000000000000000000000000000000000000000000000000008152508160009081620000b59190620005cd565b508060019081620000c79190620005cd565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200013f5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620001369190620006c5565b60405180910390fd5b6200015081620001dd60201b60201c565b5080600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550678ac7230489e80000600981905550674563918244f40000600a81905550671bc16d674ec80000600b81905550670de0b6b3a7640000600c819055506000600d8190555050620006e2565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002d582620002a8565b9050919050565b6000620002e982620002c8565b9050919050565b620002fb81620002dc565b81146200030757600080fd5b50565b6000815190506200031b81620002f0565b92915050565b6000602082840312156200033a5762000339620002a3565b5b60006200034a848285016200030a565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620003d557607f821691505b602082108103620003eb57620003ea6200038d565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004557fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000416565b62000461868362000416565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620004ae620004a8620004a28462000479565b62000483565b62000479565b9050919050565b6000819050919050565b620004ca836200048d565b620004e2620004d982620004b5565b84845462000423565b825550505050565b600090565b620004f9620004ea565b62000506818484620004bf565b505050565b5b818110156200052e5762000522600082620004ef565b6001810190506200050c565b5050565b601f8211156200057d576200054781620003f1565b620005528462000406565b8101602085101562000562578190505b6200057a620005718562000406565b8301826200050b565b50505b505050565b600082821c905092915050565b6000620005a26000198460080262000582565b1980831691505092915050565b6000620005bd83836200058f565b9150826002028217905092915050565b620005d88262000353565b67ffffffffffffffff811115620005f457620005f36200035e565b5b620006008254620003bc565b6200060d82828562000532565b600060209050601f83116001811462000645576000841562000630578287015190505b6200063c8582620005af565b865550620006ac565b601f1984166200065586620003f1565b60005b828110156200067f5784890151825560018201915060208501945060208101905062000658565b868310156200069f57848901516200069b601f8916826200058f565b8355505b6001600288020188555050505b505050505050565b620006bf81620002c8565b82525050565b6000602082019050620006dc6000830184620006b4565b92915050565b613cf180620006f26000396000f3fe608060405234801561001057600080fd5b50600436106101ef5760003560e01c8063715018a61161010f578063c87b56dd116100a2578063e888894211610071578063e888894214610593578063e985e9c5146105b1578063eb3a9ef7146105e1578063f2fde38b146105fd576101ef565b8063c87b56dd1461050b578063da2b4c1e1461053b578063dc18560414610559578063dce0b4e414610575576101ef565b806395d89b41116100de57806395d89b4114610497578063a22cb465146104b5578063b24c4fa0146104d1578063b88d4fde146104ef576101ef565b8063715018a6146104375780637e39cb2b14610441578063867d60731461045d5780638da5cb5b14610479576101ef565b80632f5b6ffe116101875780635e318e07116101565780635e318e071461039f5780636352211e146103bb5780636fcba377146103eb57806370a0823114610407576101ef565b80632f5b6ffe14610300578063388f60641461033057806342842e0e146103655780635a64ad9514610381576101ef565b8063095ea7b3116101c3578063095ea7b314610290578063143ba4f3146102ac5780631809b5f5146102c857806323b872dd146102e4576101ef565b80629a9b7b146101f457806301ffc9a71461021257806306fdde0314610242578063081812fc14610260575b600080fd5b6101fc610619565b6040516102099190612aff565b60405180910390f35b61022c60048036038101906102279190612b86565b61061f565b6040516102399190612bce565b60405180910390f35b61024a610680565b6040516102579190612c79565b60405180910390f35b61027a60048036038101906102759190612cc7565b610712565b6040516102879190612d35565b60405180910390f35b6102aa60048036038101906102a59190612d7c565b61072e565b005b6102c660048036038101906102c19190612e77565b610744565b005b6102e260048036038101906102dd9190612ef8565b610976565b005b6102fe60048036038101906102f99190612f25565b6109d9565b005b61031a60048036038101906103159190612ef8565b610adb565b6040516103279190612bce565b60405180910390f35b61034a60048036038101906103459190612cc7565b610afb565b60405161035c96959493929190612f78565b60405180910390f35b61037f600480360381019061037a9190612f25565b610bf9565b005b610389610c19565b6040516103969190612aff565b60405180910390f35b6103b960048036038101906103b49190612cc7565b610c1f565b005b6103d560048036038101906103d09190612cc7565b610c7e565b6040516103e29190612d35565b60405180910390f35b61040560048036038101906104009190612fe0565b610c90565b005b610421600480360381019061041c9190612ef8565b610cba565b60405161042e9190612aff565b60405180910390f35b61043f610d74565b005b61045b6004803603810190610456919061309d565b610d88565b005b61047760048036038101906104729190612cc7565b61102d565b005b6104816111e5565b60405161048e9190612d35565b60405180910390f35b61049f61120f565b6040516104ac9190612c79565b60405180910390f35b6104cf60048036038101906104ca9190613116565b6112a1565b005b6104d96112b7565b6040516104e691906131b5565b60405180910390f35b61050960048036038101906105049190613300565b6112dd565b005b61052560048036038101906105209190612cc7565b611302565b6040516105329190612c79565b60405180910390f35b610543611415565b6040516105509190612aff565b60405180910390f35b610573600480360381019061056e9190612ef8565b61141b565b005b61057d61147e565b60405161058a9190612aff565b60405180910390f35b61059b611484565b6040516105a89190612aff565b60405180910390f35b6105cb60048036038101906105c69190613383565b61148a565b6040516105d89190612bce565b60405180910390f35b6105fb60048036038101906105f69190612cc7565b61151e565b005b61061760048036038101906106129190612ef8565b61184c565b005b600d5481565b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806106795750610678826118d2565b5b9050919050565b60606000805461068f906133f2565b80601f01602080910402602001604051908101604052809291908181526020018280546106bb906133f2565b80156107085780601f106106dd57610100808354040283529160200191610708565b820191906000526020600020905b8154815290600101906020018083116106eb57829003601f168201915b5050505050905090565b600061071d826119b4565b5061072782611a3c565b9050919050565b610740828261073b611a79565b611a81565b5050565b61074c611a93565b818190508484905014610794576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078b9061346f565b60405180910390fd5b600080600090505b858590508110156107e1578383828181106107ba576107b961348f565b5b90506020020135826107cc91906134ed565b915080806107d990613521565b91505061079c565b5080600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161083e9190612d35565b602060405180830381865afa15801561085b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087f919061357e565b10156108c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b7906135f7565b60405180910390fd5b60005b8585905081101561096e5761095b8686838181106108e4576108e361348f565b5b90506020020160208101906108f99190612ef8565b85858481811061090c5761090b61348f565b5b90506020020135600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611b1a9092919063ffffffff16565b808061096690613521565b9150506108c3565b505050505050565b61097e611a93565b6001600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a4b5760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610a429190612d35565b60405180910390fd5b6000610a5f8383610a5a611a79565b611b99565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ad5578382826040517f64283d7b000000000000000000000000000000000000000000000000000000008152600401610acc93929190613617565b60405180910390fd5b50505050565b600f6020528060005260406000206000915054906101000a900460ff1681565b600e6020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002018054610b4a906133f2565b80601f0160208091040260200160405190810160405280929190818152602001828054610b76906133f2565b8015610bc35780601f10610b9857610100808354040283529160200191610bc3565b820191906000526020600020905b815481529060010190602001808311610ba657829003601f168201915b5050505050908060030154908060040160009054906101000a900460ff16908060040160019054906101000a900460ff16905086565b610c14838383604051806020016040528060008152506112dd565b505050565b600a5481565b610c27611a93565b610c7b610c326111e5565b82600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611b1a9092919063ffffffff16565b50565b6000610c89826119b4565b9050919050565b610c98611a93565b8360098190555082600a8190555081600b8190555080600c8190555050505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d2d5760006040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401610d249190612d35565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610d7c611a93565b610d866000611db3565b565b600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610e14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0b906136c0565b60405180910390fd5b610e653330600b54600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611e79909392919063ffffffff16565b600d6000815480929190610e7890613521565b91905055506040518060c00160405280600d5481526020013373ffffffffffffffffffffffffffffffffffffffff16815260200183838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020016000815260200160001515815260200160011515815250600e6000600d5481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019081610f889190613882565b506060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555060a08201518160040160016101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff16600d547f5a20ab1d9dc88654ce4b0ecd06dbbb66115f3e86cfe70f6717102bcae2a4a5c08484604051611021929190613981565b60405180910390a35050565b600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166110b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b0906136c0565b60405180910390fd5b61110a3330600c54600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611e79909392919063ffffffff16565b6000600e600083815260200190815260200160002090508060040160019054906101000a900460ff16611172576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611169906139f1565b60405180910390fd5b600181600301600082825461118791906134ed565b925050819055503373ffffffffffffffffffffffffffffffffffffffff16827f903d955ffc4c7d3ae887133f90927b5c2a5177cbe7af0c949b0bf110a86af0b183600301546040516111d99190612aff565b60405180910390a35050565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461121e906133f2565b80601f016020809104026020016040519081016040528092919081815260200182805461124a906133f2565b80156112975780601f1061126c57610100808354040283529160200191611297565b820191906000526020600020905b81548152906001019060200180831161127a57829003601f168201915b5050505050905090565b6112b36112ac611a79565b8383611efb565b5050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6112e88484846109d9565b6112fc6112f3611a79565b8585858561206a565b50505050565b606061130d826119b4565b50600060066000848152602001908152602001600020805461132e906133f2565b80601f016020809104026020016040519081016040528092919081815260200182805461135a906133f2565b80156113a75780601f1061137c576101008083540402835291602001916113a7565b820191906000526020600020905b81548152906001019060200180831161138a57829003601f168201915b5050505050905060006113b861221b565b905060008151036113cd578192505050611410565b6000825111156114025780826040516020016113ea929190613a4d565b60405160208183030381529060405292505050611410565b61140b84612232565b925050505b919050565b600c5481565b611423611a93565b6000600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60095481565b600b5481565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166115aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a1906136c0565b60405180910390fd5b6000600e600083815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611653576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164a90613abd565b60405180910390fd5b8060040160019054906101000a900460ff166116a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169b906139f1565b60405180910390fd5b8060040160009054906101000a900460ff16156116f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116ed90613b29565b60405180910390fd5b6117473330600a54600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611e79909392919063ffffffff16565b611751338361229b565b6117e782826002018054611764906133f2565b80601f0160208091040260200160405190810160405280929190818152602001828054611790906133f2565b80156117dd5780601f106117b2576101008083540402835291602001916117dd565b820191906000526020600020905b8154815290600101906020018083116117c057829003601f168201915b50505050506122b9565b60018160040160006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff16827fb2ba4c72a840d1937561f5018e205ce84b4ee1fbafccfa1a2c56fed4b4faed5860405160405180910390a35050565b611854611a93565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036118c65760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016118bd9190612d35565b60405180910390fd5b6118cf81611db3565b50565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061199d57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806119ad57506119ac82612315565b5b9050919050565b6000806119c08361237f565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611a3357826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611a2a9190612aff565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b611a8e83838360016123bc565b505050565b611a9b611a79565b73ffffffffffffffffffffffffffffffffffffffff16611ab96111e5565b73ffffffffffffffffffffffffffffffffffffffff1614611b1857611adc611a79565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611b0f9190612d35565b60405180910390fd5b565b611b94838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611b4d929190613b49565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612581565b505050565b600080611ba58461237f565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611be757611be6818486612623565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611c7857611c296000856000806123bc565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614611cfb576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611ef5848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401611eae93929190613b72565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612581565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611f6c57816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401611f639190612d35565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161205d9190612bce565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115612214578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b81526004016120c99493929190613bfe565b6020604051808303816000875af192505050801561210557506040513d601f19601f820116820180604052508101906121029190613c5f565b60015b612189573d8060008114612135576040519150601f19603f3d011682016040523d82523d6000602084013e61213a565b606091505b50600081510361218157836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016121789190612d35565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461221257836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016122099190612d35565b60405180910390fd5b505b5050505050565b606060405180602001604052806000815250905090565b606061223d826119b4565b50600061224861221b565b905060008151116122685760405180602001604052806000815250612293565b80612272846126e7565b604051602001612283929190613a4d565b6040516020818303038152906040525b915050919050565b6122b58282604051806020016040528060008152506127b5565b5050565b806006600084815260200190815260200160002090816122d99190613882565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516123099190612aff565b60405180910390a15050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806123f55750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15612529576000612405846119b4565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561247057508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156124835750612481818461148a565b155b156124c557826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016124bc9190612d35565b60405180910390fd5b811561252757838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b600080602060008451602086016000885af1806125a4576040513d6000823e3d81fd5b3d9250600051915050600082146125bf5760018114156125db565b60008473ffffffffffffffffffffffffffffffffffffffff163b145b1561261d57836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016126149190612d35565b60405180910390fd5b50505050565b61262e8383836127d9565b6126e257600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036126a357806040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161269a9190612aff565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016126d9929190613b49565b60405180910390fd5b505050565b6060600060016126f68461289a565b01905060008167ffffffffffffffff811115612715576127146131d5565b5b6040519080825280601f01601f1916602001820160405280156127475781602001600182028036833780820191505090505b509050600082602001820190505b6001156127aa578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161279e5761279d613c8c565b5b04945060008503612755575b819350505050919050565b6127bf83836129ed565b6127d46127ca611a79565b600085858561206a565b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561289157508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806128525750612851848461148a565b5b8061289057508273ffffffffffffffffffffffffffffffffffffffff1661287883611a3c565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106128f8577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816128ee576128ed613c8c565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310612935576d04ee2d6d415b85acef8100000000838161292b5761292a613c8c565b5b0492506020810190505b662386f26fc10000831061296457662386f26fc10000838161295a57612959613c8c565b5b0492506010810190505b6305f5e100831061298d576305f5e100838161298357612982613c8c565b5b0492506008810190505b61271083106129b25761271083816129a8576129a7613c8c565b5b0492506004810190505b606483106129d557606483816129cb576129ca613c8c565b5b0492506002810190505b600a83106129e4576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612a5f5760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401612a569190612d35565b60405180910390fd5b6000612a6d83836000611b99565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612ae15760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401612ad89190612d35565b60405180910390fd5b505050565b6000819050919050565b612af981612ae6565b82525050565b6000602082019050612b146000830184612af0565b92915050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612b6381612b2e565b8114612b6e57600080fd5b50565b600081359050612b8081612b5a565b92915050565b600060208284031215612b9c57612b9b612b24565b5b6000612baa84828501612b71565b91505092915050565b60008115159050919050565b612bc881612bb3565b82525050565b6000602082019050612be36000830184612bbf565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612c23578082015181840152602081019050612c08565b60008484015250505050565b6000601f19601f8301169050919050565b6000612c4b82612be9565b612c558185612bf4565b9350612c65818560208601612c05565b612c6e81612c2f565b840191505092915050565b60006020820190508181036000830152612c938184612c40565b905092915050565b612ca481612ae6565b8114612caf57600080fd5b50565b600081359050612cc181612c9b565b92915050565b600060208284031215612cdd57612cdc612b24565b5b6000612ceb84828501612cb2565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612d1f82612cf4565b9050919050565b612d2f81612d14565b82525050565b6000602082019050612d4a6000830184612d26565b92915050565b612d5981612d14565b8114612d6457600080fd5b50565b600081359050612d7681612d50565b92915050565b60008060408385031215612d9357612d92612b24565b5b6000612da185828601612d67565b9250506020612db285828601612cb2565b9150509250929050565b600080fd5b600080fd5b600080fd5b60008083601f840112612de157612de0612dbc565b5b8235905067ffffffffffffffff811115612dfe57612dfd612dc1565b5b602083019150836020820283011115612e1a57612e19612dc6565b5b9250929050565b60008083601f840112612e3757612e36612dbc565b5b8235905067ffffffffffffffff811115612e5457612e53612dc1565b5b602083019150836020820283011115612e7057612e6f612dc6565b5b9250929050565b60008060008060408587031215612e9157612e90612b24565b5b600085013567ffffffffffffffff811115612eaf57612eae612b29565b5b612ebb87828801612dcb565b9450945050602085013567ffffffffffffffff811115612ede57612edd612b29565b5b612eea87828801612e21565b925092505092959194509250565b600060208284031215612f0e57612f0d612b24565b5b6000612f1c84828501612d67565b91505092915050565b600080600060608486031215612f3e57612f3d612b24565b5b6000612f4c86828701612d67565b9350506020612f5d86828701612d67565b9250506040612f6e86828701612cb2565b9150509250925092565b600060c082019050612f8d6000830189612af0565b612f9a6020830188612d26565b8181036040830152612fac8187612c40565b9050612fbb6060830186612af0565b612fc86080830185612bbf565b612fd560a0830184612bbf565b979650505050505050565b60008060008060808587031215612ffa57612ff9612b24565b5b600061300887828801612cb2565b945050602061301987828801612cb2565b935050604061302a87828801612cb2565b925050606061303b87828801612cb2565b91505092959194509250565b60008083601f84011261305d5761305c612dbc565b5b8235905067ffffffffffffffff81111561307a57613079612dc1565b5b60208301915083600182028301111561309657613095612dc6565b5b9250929050565b600080602083850312156130b4576130b3612b24565b5b600083013567ffffffffffffffff8111156130d2576130d1612b29565b5b6130de85828601613047565b92509250509250929050565b6130f381612bb3565b81146130fe57600080fd5b50565b600081359050613110816130ea565b92915050565b6000806040838503121561312d5761312c612b24565b5b600061313b85828601612d67565b925050602061314c85828601613101565b9150509250929050565b6000819050919050565b600061317b61317661317184612cf4565b613156565b612cf4565b9050919050565b600061318d82613160565b9050919050565b600061319f82613182565b9050919050565b6131af81613194565b82525050565b60006020820190506131ca60008301846131a6565b92915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61320d82612c2f565b810181811067ffffffffffffffff8211171561322c5761322b6131d5565b5b80604052505050565b600061323f612b1a565b905061324b8282613204565b919050565b600067ffffffffffffffff82111561326b5761326a6131d5565b5b61327482612c2f565b9050602081019050919050565b82818337600083830152505050565b60006132a361329e84613250565b613235565b9050828152602081018484840111156132bf576132be6131d0565b5b6132ca848285613281565b509392505050565b600082601f8301126132e7576132e6612dbc565b5b81356132f7848260208601613290565b91505092915050565b6000806000806080858703121561331a57613319612b24565b5b600061332887828801612d67565b945050602061333987828801612d67565b935050604061334a87828801612cb2565b925050606085013567ffffffffffffffff81111561336b5761336a612b29565b5b613377878288016132d2565b91505092959194509250565b6000806040838503121561339a57613399612b24565b5b60006133a885828601612d67565b92505060206133b985828601612d67565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061340a57607f821691505b60208210810361341d5761341c6133c3565b5b50919050565b7f4d69736d617463686564206172726179206c656e677468730000000000000000600082015250565b6000613459601883612bf4565b915061346482613423565b602082019050919050565b600060208201905081810360008301526134888161344c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006134f882612ae6565b915061350383612ae6565b925082820190508082111561351b5761351a6134be565b5b92915050565b600061352c82612ae6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361355e5761355d6134be565b5b600182019050919050565b60008151905061357881612c9b565b92915050565b60006020828403121561359457613593612b24565b5b60006135a284828501613569565b91505092915050565b7f496e73756666696369656e742062616c616e636520666f722072657761726473600082015250565b60006135e1602083612bf4565b91506135ec826135ab565b602082019050919050565b60006020820190508181036000830152613610816135d4565b9050919050565b600060608201905061362c6000830186612d26565b6136396020830185612af0565b6136466040830184612d26565b949350505050565b7f4f6e6c792047616c6163746963204720726f6c65206f776e65727320616c6c6f60008201527f7765640000000000000000000000000000000000000000000000000000000000602082015250565b60006136aa602383612bf4565b91506136b58261364e565b604082019050919050565b600060208201905081810360008301526136d98161369d565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026137427fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613705565b61374c8683613705565b95508019841693508086168417925050509392505050565b600061377f61377a61377584612ae6565b613156565b612ae6565b9050919050565b6000819050919050565b61379983613764565b6137ad6137a582613786565b848454613712565b825550505050565b600090565b6137c26137b5565b6137cd818484613790565b505050565b5b818110156137f1576137e66000826137ba565b6001810190506137d3565b5050565b601f82111561383657613807816136e0565b613810846136f5565b8101602085101561381f578190505b61383361382b856136f5565b8301826137d2565b50505b505050565b600082821c905092915050565b60006138596000198460080261383b565b1980831691505092915050565b60006138728383613848565b9150826002028217905092915050565b61388b82612be9565b67ffffffffffffffff8111156138a4576138a36131d5565b5b6138ae82546133f2565b6138b98282856137f5565b600060209050601f8311600181146138ec57600084156138da578287015190505b6138e48582613866565b86555061394c565b601f1984166138fa866136e0565b60005b82811015613922578489015182556001820191506020850194506020810190506138fd565b8683101561393f578489015161393b601f891682613848565b8355505b6001600288020188555050505b505050505050565b60006139608385612bf4565b935061396d838584613281565b61397683612c2f565b840190509392505050565b6000602082019050818103600083015261399c818486613954565b90509392505050565b7f4d656d65206e6f74207375626d69747465640000000000000000000000000000600082015250565b60006139db601283612bf4565b91506139e6826139a5565b602082019050919050565b60006020820190508181036000830152613a0a816139ce565b9050919050565b600081905092915050565b6000613a2782612be9565b613a318185613a11565b9350613a41818560208601612c05565b80840191505092915050565b6000613a598285613a1c565b9150613a658284613a1c565b91508190509392505050565b7f4f6e6c792063726561746f722063616e206d696e740000000000000000000000600082015250565b6000613aa7601583612bf4565b9150613ab282613a71565b602082019050919050565b60006020820190508181036000830152613ad681613a9a565b9050919050565b7f4d656d6520616c7265616479206d696e74656400000000000000000000000000600082015250565b6000613b13601383612bf4565b9150613b1e82613add565b602082019050919050565b60006020820190508181036000830152613b4281613b06565b9050919050565b6000604082019050613b5e6000830185612d26565b613b6b6020830184612af0565b9392505050565b6000606082019050613b876000830186612d26565b613b946020830185612d26565b613ba16040830184612af0565b949350505050565b600081519050919050565b600082825260208201905092915050565b6000613bd082613ba9565b613bda8185613bb4565b9350613bea818560208601612c05565b613bf381612c2f565b840191505092915050565b6000608082019050613c136000830187612d26565b613c206020830186612d26565b613c2d6040830185612af0565b8181036060830152613c3f8184613bc5565b905095945050505050565b600081519050613c5981612b5a565b92915050565b600060208284031215613c7557613c74612b24565b5b6000613c8384828501613c4a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea26469706673582212206904fb05828c7846a54b24d4bbb4e2d865fe65dccc67ca86fa729add1055b4aa64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x43E3 CODESIZE SUB DUP1 PUSH3 0x43E3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x321 JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E4755204D656D65000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E47554D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0xB5 SWAP2 SWAP1 PUSH3 0x5CD JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xC7 SWAP2 SWAP1 PUSH3 0x5CD JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x13F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x136 SWAP2 SWAP1 PUSH3 0x6C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x150 DUP2 PUSH3 0x1DD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH8 0x8AC7230489E80000 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH8 0x4563918244F40000 PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH8 0x1BC16D674EC80000 PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH8 0xDE0B6B3A7640000 PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE POP POP PUSH3 0x6E2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2D5 DUP3 PUSH3 0x2A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2E9 DUP3 PUSH3 0x2C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2FB DUP2 PUSH3 0x2DC JUMP JUMPDEST DUP2 EQ PUSH3 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x31B DUP2 PUSH3 0x2F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x33A JUMPI PUSH3 0x339 PUSH3 0x2A3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x34A DUP5 DUP3 DUP6 ADD PUSH3 0x30A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x3D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x3EB JUMPI PUSH3 0x3EA PUSH3 0x38D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x455 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x416 JUMP JUMPDEST PUSH3 0x461 DUP7 DUP4 PUSH3 0x416 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4AE PUSH3 0x4A8 PUSH3 0x4A2 DUP5 PUSH3 0x479 JUMP JUMPDEST PUSH3 0x483 JUMP JUMPDEST PUSH3 0x479 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4CA DUP4 PUSH3 0x48D JUMP JUMPDEST PUSH3 0x4E2 PUSH3 0x4D9 DUP3 PUSH3 0x4B5 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x423 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x4F9 PUSH3 0x4EA JUMP JUMPDEST PUSH3 0x506 DUP2 DUP5 DUP5 PUSH3 0x4BF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x52E JUMPI PUSH3 0x522 PUSH1 0x0 DUP3 PUSH3 0x4EF JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x50C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x57D JUMPI PUSH3 0x547 DUP2 PUSH3 0x3F1 JUMP JUMPDEST PUSH3 0x552 DUP5 PUSH3 0x406 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x562 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x57A PUSH3 0x571 DUP6 PUSH3 0x406 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x50B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5A2 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x582 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5BD DUP4 DUP4 PUSH3 0x58F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x5D8 DUP3 PUSH3 0x353 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x5F4 JUMPI PUSH3 0x5F3 PUSH3 0x35E JUMP JUMPDEST JUMPDEST PUSH3 0x600 DUP3 SLOAD PUSH3 0x3BC JUMP JUMPDEST PUSH3 0x60D DUP3 DUP3 DUP6 PUSH3 0x532 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x645 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x630 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x63C DUP6 DUP3 PUSH3 0x5AF JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x6AC JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x655 DUP7 PUSH3 0x3F1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x67F JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x658 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x69F JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x69B PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x58F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x6BF DUP2 PUSH3 0x2C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x6DC PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x6B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3CF1 DUP1 PUSH3 0x6F2 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1EF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE8888942 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE8888942 EQ PUSH2 0x593 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x5B1 JUMPI DUP1 PUSH4 0xEB3A9EF7 EQ PUSH2 0x5E1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5FD JUMPI PUSH2 0x1EF JUMP JUMPDEST DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x50B JUMPI DUP1 PUSH4 0xDA2B4C1E EQ PUSH2 0x53B JUMPI DUP1 PUSH4 0xDC185604 EQ PUSH2 0x559 JUMPI DUP1 PUSH4 0xDCE0B4E4 EQ PUSH2 0x575 JUMPI PUSH2 0x1EF JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x497 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4B5 JUMPI DUP1 PUSH4 0xB24C4FA0 EQ PUSH2 0x4D1 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x4EF JUMPI PUSH2 0x1EF JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x7E39CB2B EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0x867D6073 EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x479 JUMPI PUSH2 0x1EF JUMP JUMPDEST DUP1 PUSH4 0x2F5B6FFE GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x5E318E07 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x5E318E07 EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0x6FCBA377 EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x407 JUMPI PUSH2 0x1EF JUMP JUMPDEST DUP1 PUSH4 0x2F5B6FFE EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x388F6064 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x5A64AD95 EQ PUSH2 0x381 JUMPI PUSH2 0x1EF JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x143BA4F3 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x1809B5F5 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2E4 JUMPI PUSH2 0x1EF JUMP JUMPDEST DUP1 PUSH3 0x9A9B7B EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x260 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FC PUSH2 0x619 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x2B86 JUMP JUMPDEST PUSH2 0x61F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x2BCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24A PUSH2 0x680 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x2C79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x2CC7 JUMP JUMPDEST PUSH2 0x712 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x2D7C JUMP JUMPDEST PUSH2 0x72E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x2E77 JUMP JUMPDEST PUSH2 0x744 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x2EF8 JUMP JUMPDEST PUSH2 0x976 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x2F25 JUMP JUMPDEST PUSH2 0x9D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x315 SWAP2 SWAP1 PUSH2 0x2EF8 JUMP JUMPDEST PUSH2 0xADB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x2BCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x2CC7 JUMP JUMPDEST PUSH2 0xAFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35C SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x2F25 JUMP JUMPDEST PUSH2 0xBF9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x389 PUSH2 0xC19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x2CC7 JUMP JUMPDEST PUSH2 0xC1F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x2CC7 JUMP JUMPDEST PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x405 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x400 SWAP2 SWAP1 PUSH2 0x2FE0 JUMP JUMPDEST PUSH2 0xC90 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x421 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41C SWAP2 SWAP1 PUSH2 0x2EF8 JUMP JUMPDEST PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43F PUSH2 0xD74 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x45B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x456 SWAP2 SWAP1 PUSH2 0x309D JUMP JUMPDEST PUSH2 0xD88 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x477 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x472 SWAP2 SWAP1 PUSH2 0x2CC7 JUMP JUMPDEST PUSH2 0x102D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x481 PUSH2 0x11E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48E SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49F PUSH2 0x120F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AC SWAP2 SWAP1 PUSH2 0x2C79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4CA SWAP2 SWAP1 PUSH2 0x3116 JUMP JUMPDEST PUSH2 0x12A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D9 PUSH2 0x12B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E6 SWAP2 SWAP1 PUSH2 0x31B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x509 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x504 SWAP2 SWAP1 PUSH2 0x3300 JUMP JUMPDEST PUSH2 0x12DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x525 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x520 SWAP2 SWAP1 PUSH2 0x2CC7 JUMP JUMPDEST PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x532 SWAP2 SWAP1 PUSH2 0x2C79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x543 PUSH2 0x1415 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x550 SWAP2 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x573 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x56E SWAP2 SWAP1 PUSH2 0x2EF8 JUMP JUMPDEST PUSH2 0x141B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x57D PUSH2 0x147E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58A SWAP2 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59B PUSH2 0x1484 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A8 SWAP2 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C6 SWAP2 SWAP1 PUSH2 0x3383 JUMP JUMPDEST PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D8 SWAP2 SWAP1 PUSH2 0x2BCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F6 SWAP2 SWAP1 PUSH2 0x2CC7 JUMP JUMPDEST PUSH2 0x151E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x617 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x612 SWAP2 SWAP1 PUSH2 0x2EF8 JUMP JUMPDEST PUSH2 0x184C JUMP JUMPDEST STOP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x679 JUMPI POP PUSH2 0x678 DUP3 PUSH2 0x18D2 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x68F SWAP1 PUSH2 0x33F2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6BB SWAP1 PUSH2 0x33F2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x708 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6DD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x708 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6EB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x71D DUP3 PUSH2 0x19B4 JUMP JUMPDEST POP PUSH2 0x727 DUP3 PUSH2 0x1A3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x740 DUP3 DUP3 PUSH2 0x73B PUSH2 0x1A79 JUMP JUMPDEST PUSH2 0x1A81 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x74C PUSH2 0x1A93 JUMP JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0x794 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78B SWAP1 PUSH2 0x346F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP6 DUP6 SWAP1 POP DUP2 LT ISZERO PUSH2 0x7E1 JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x7BA JUMPI PUSH2 0x7B9 PUSH2 0x348F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH2 0x7CC SWAP2 SWAP1 PUSH2 0x34ED JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x7D9 SWAP1 PUSH2 0x3521 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x79C JUMP JUMPDEST POP DUP1 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83E SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x85B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x87F SWAP2 SWAP1 PUSH2 0x357E JUMP JUMPDEST LT ISZERO PUSH2 0x8C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B7 SWAP1 PUSH2 0x35F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP6 SWAP1 POP DUP2 LT ISZERO PUSH2 0x96E JUMPI PUSH2 0x95B DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0x8E4 JUMPI PUSH2 0x8E3 PUSH2 0x348F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x8F9 SWAP2 SWAP1 PUSH2 0x2EF8 JUMP JUMPDEST DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x90C JUMPI PUSH2 0x90B PUSH2 0x348F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B1A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 DUP1 PUSH2 0x966 SWAP1 PUSH2 0x3521 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8C3 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x97E PUSH2 0x1A93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA4B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA42 SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA5F DUP4 DUP4 PUSH2 0xA5A PUSH2 0x1A79 JUMP JUMPDEST PUSH2 0x1B99 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAD5 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0xB4A SWAP1 PUSH2 0x33F2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB76 SWAP1 PUSH2 0x33F2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBC3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB98 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBC3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBA6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP7 JUMP JUMPDEST PUSH2 0xC14 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x12DD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC27 PUSH2 0x1A93 JUMP JUMPDEST PUSH2 0xC7B PUSH2 0xC32 PUSH2 0x11E5 JUMP JUMPDEST DUP3 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B1A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC89 DUP3 PUSH2 0x19B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC98 PUSH2 0x1A93 JUMP JUMPDEST DUP4 PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0xA DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xB DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xC DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD2D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD24 SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD7C PUSH2 0x1A93 JUMP JUMPDEST PUSH2 0xD86 PUSH1 0x0 PUSH2 0x1DB3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xE14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0B SWAP1 PUSH2 0x36C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE65 CALLER ADDRESS PUSH1 0xB SLOAD PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E79 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xE78 SWAP1 PUSH2 0x3521 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD SLOAD DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0xE PUSH1 0x0 PUSH1 0xD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0xF88 SWAP2 SWAP1 PUSH2 0x3882 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xD SLOAD PUSH32 0x5A20AB1D9DC88654CE4B0ECD06DBBB66115F3E86CFE70F6717102BCAE2A4A5C0 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1021 SWAP3 SWAP2 SWAP1 PUSH2 0x3981 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x10B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B0 SWAP1 PUSH2 0x36C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x110A CALLER ADDRESS PUSH1 0xC SLOAD PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E79 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1172 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1169 SWAP1 PUSH2 0x39F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1187 SWAP2 SWAP1 PUSH2 0x34ED JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0x903D955FFC4C7D3AE887133F90927B5C2A5177CBE7AF0C949B0BF110A86AF0B1 DUP4 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x11D9 SWAP2 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x121E SWAP1 PUSH2 0x33F2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x124A SWAP1 PUSH2 0x33F2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1297 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x126C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1297 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x127A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x12B3 PUSH2 0x12AC PUSH2 0x1A79 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1EFB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x12E8 DUP5 DUP5 DUP5 PUSH2 0x9D9 JUMP JUMPDEST PUSH2 0x12FC PUSH2 0x12F3 PUSH2 0x1A79 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x206A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x130D DUP3 PUSH2 0x19B4 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x132E SWAP1 PUSH2 0x33F2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x135A SWAP1 PUSH2 0x33F2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13A7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x137C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13A7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x138A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x13B8 PUSH2 0x221B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x13CD JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x1410 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1402 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x13EA SWAP3 SWAP2 SWAP1 PUSH2 0x3A4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x1410 JUMP JUMPDEST PUSH2 0x140B DUP5 PUSH2 0x2232 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1423 PUSH2 0x1A93 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x15AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15A1 SWAP1 PUSH2 0x36C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1653 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x164A SWAP1 PUSH2 0x3ABD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x16A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x169B SWAP1 PUSH2 0x39F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x16F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16ED SWAP1 PUSH2 0x3B29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1747 CALLER ADDRESS PUSH1 0xA SLOAD PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E79 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1751 CALLER DUP4 PUSH2 0x229B JUMP JUMPDEST PUSH2 0x17E7 DUP3 DUP3 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1764 SWAP1 PUSH2 0x33F2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1790 SWAP1 PUSH2 0x33F2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17DD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17B2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x17DD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x17C0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x22B9 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0xB2BA4C72A840D1937561F5018E205CE84B4EE1FBAFCCFA1A2C56FED4B4FAED58 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1854 PUSH2 0x1A93 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18C6 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18BD SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18CF DUP2 PUSH2 0x1DB3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x199D JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x19AD JUMPI POP PUSH2 0x19AC DUP3 PUSH2 0x2315 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x19C0 DUP4 PUSH2 0x237F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A33 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A2A SWAP2 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1A8E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x23BC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1A9B PUSH2 0x1A79 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AB9 PUSH2 0x11E5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B18 JUMPI PUSH2 0x1ADC PUSH2 0x1A79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B0F SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1B94 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1B4D SWAP3 SWAP2 SWAP1 PUSH2 0x3B49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2581 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1BA5 DUP5 PUSH2 0x237F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BE7 JUMPI PUSH2 0x1BE6 DUP2 DUP5 DUP7 PUSH2 0x2623 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C78 JUMPI PUSH2 0x1C29 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x23BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CFB JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1EF5 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1EAE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2581 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F6C JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F63 SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x205D SWAP2 SWAP1 PUSH2 0x2BCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x2214 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20C9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3BFE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2105 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2102 SWAP2 SWAP1 PUSH2 0x3C5F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2189 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2135 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x213A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x2181 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2178 SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x2212 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2209 SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x223D DUP3 PUSH2 0x19B4 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2248 PUSH2 0x221B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x2268 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2293 JUMP JUMPDEST DUP1 PUSH2 0x2272 DUP5 PUSH2 0x26E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2283 SWAP3 SWAP2 SWAP1 PUSH2 0x3A4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22B5 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x27B5 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x22D9 SWAP2 SWAP1 PUSH2 0x3882 JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2309 SWAP2 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x23F5 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2529 JUMPI PUSH1 0x0 PUSH2 0x2405 DUP5 PUSH2 0x19B4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2470 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2483 JUMPI POP PUSH2 0x2481 DUP2 DUP5 PUSH2 0x148A JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x24C5 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24BC SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x2527 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x25A4 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH1 0x0 MLOAD SWAP2 POP POP PUSH1 0x0 DUP3 EQ PUSH2 0x25BF JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x25DB JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x261D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2614 SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x262E DUP4 DUP4 DUP4 PUSH2 0x27D9 JUMP JUMPDEST PUSH2 0x26E2 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x26A3 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x269A SWAP2 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26D9 SWAP3 SWAP2 SWAP1 PUSH2 0x3B49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x26F6 DUP5 PUSH2 0x289A JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2715 JUMPI PUSH2 0x2714 PUSH2 0x31D5 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2747 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x27AA JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x279E JUMPI PUSH2 0x279D PUSH2 0x3C8C JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x2755 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27BF DUP4 DUP4 PUSH2 0x29ED JUMP JUMPDEST PUSH2 0x27D4 PUSH2 0x27CA PUSH2 0x1A79 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x206A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2891 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2852 JUMPI POP PUSH2 0x2851 DUP5 DUP5 PUSH2 0x148A JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x2890 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2878 DUP4 PUSH2 0x1A3C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x28F8 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x28EE JUMPI PUSH2 0x28ED PUSH2 0x3C8C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x2935 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x292B JUMPI PUSH2 0x292A PUSH2 0x3C8C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x2964 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x295A JUMPI PUSH2 0x2959 PUSH2 0x3C8C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x298D JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x2983 JUMPI PUSH2 0x2982 PUSH2 0x3C8C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x29B2 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x29A8 JUMPI PUSH2 0x29A7 PUSH2 0x3C8C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x29D5 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x29CB JUMPI PUSH2 0x29CA PUSH2 0x3C8C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x29E4 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2A5F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A56 SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2A6D DUP4 DUP4 PUSH1 0x0 PUSH2 0x1B99 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2AE1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AD8 SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AF9 DUP2 PUSH2 0x2AE6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B14 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2AF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B63 DUP2 PUSH2 0x2B2E JUMP JUMPDEST DUP2 EQ PUSH2 0x2B6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B80 DUP2 PUSH2 0x2B5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B9C JUMPI PUSH2 0x2B9B PUSH2 0x2B24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2BAA DUP5 DUP3 DUP6 ADD PUSH2 0x2B71 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BC8 DUP2 PUSH2 0x2BB3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2BE3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2BBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C23 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C08 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C4B DUP3 PUSH2 0x2BE9 JUMP JUMPDEST PUSH2 0x2C55 DUP2 DUP6 PUSH2 0x2BF4 JUMP JUMPDEST SWAP4 POP PUSH2 0x2C65 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2C05 JUMP JUMPDEST PUSH2 0x2C6E DUP2 PUSH2 0x2C2F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C93 DUP2 DUP5 PUSH2 0x2C40 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2CA4 DUP2 PUSH2 0x2AE6 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CC1 DUP2 PUSH2 0x2C9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CDD JUMPI PUSH2 0x2CDC PUSH2 0x2B24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CEB DUP5 DUP3 DUP6 ADD PUSH2 0x2CB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D1F DUP3 PUSH2 0x2CF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D2F DUP2 PUSH2 0x2D14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D4A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2D59 DUP2 PUSH2 0x2D14 JUMP JUMPDEST DUP2 EQ PUSH2 0x2D64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2D76 DUP2 PUSH2 0x2D50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D93 JUMPI PUSH2 0x2D92 PUSH2 0x2B24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DA1 DUP6 DUP3 DUP7 ADD PUSH2 0x2D67 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2DB2 DUP6 DUP3 DUP7 ADD PUSH2 0x2CB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2DE1 JUMPI PUSH2 0x2DE0 PUSH2 0x2DBC JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DFE JUMPI PUSH2 0x2DFD PUSH2 0x2DC1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2E1A JUMPI PUSH2 0x2E19 PUSH2 0x2DC6 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2E37 JUMPI PUSH2 0x2E36 PUSH2 0x2DBC JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E54 JUMPI PUSH2 0x2E53 PUSH2 0x2DC1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2E70 JUMPI PUSH2 0x2E6F PUSH2 0x2DC6 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2E91 JUMPI PUSH2 0x2E90 PUSH2 0x2B24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2EAF JUMPI PUSH2 0x2EAE PUSH2 0x2B29 JUMP JUMPDEST JUMPDEST PUSH2 0x2EBB DUP8 DUP3 DUP9 ADD PUSH2 0x2DCB JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2EDE JUMPI PUSH2 0x2EDD PUSH2 0x2B29 JUMP JUMPDEST JUMPDEST PUSH2 0x2EEA DUP8 DUP3 DUP9 ADD PUSH2 0x2E21 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F0E JUMPI PUSH2 0x2F0D PUSH2 0x2B24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F1C DUP5 DUP3 DUP6 ADD PUSH2 0x2D67 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2F3E JUMPI PUSH2 0x2F3D PUSH2 0x2B24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F4C DUP7 DUP3 DUP8 ADD PUSH2 0x2D67 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2F5D DUP7 DUP3 DUP8 ADD PUSH2 0x2D67 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2F6E DUP7 DUP3 DUP8 ADD PUSH2 0x2CB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2F8D PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x2AF0 JUMP JUMPDEST PUSH2 0x2F9A PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x2D26 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2FAC DUP2 DUP8 PUSH2 0x2C40 JUMP JUMPDEST SWAP1 POP PUSH2 0x2FBB PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2AF0 JUMP JUMPDEST PUSH2 0x2FC8 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2BBF JUMP JUMPDEST PUSH2 0x2FD5 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2BBF JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2FFA JUMPI PUSH2 0x2FF9 PUSH2 0x2B24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3008 DUP8 DUP3 DUP9 ADD PUSH2 0x2CB2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3019 DUP8 DUP3 DUP9 ADD PUSH2 0x2CB2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x302A DUP8 DUP3 DUP9 ADD PUSH2 0x2CB2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x303B DUP8 DUP3 DUP9 ADD PUSH2 0x2CB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x305D JUMPI PUSH2 0x305C PUSH2 0x2DBC JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x307A JUMPI PUSH2 0x3079 PUSH2 0x2DC1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x3096 JUMPI PUSH2 0x3095 PUSH2 0x2DC6 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x30B4 JUMPI PUSH2 0x30B3 PUSH2 0x2B24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x30D2 JUMPI PUSH2 0x30D1 PUSH2 0x2B29 JUMP JUMPDEST JUMPDEST PUSH2 0x30DE DUP6 DUP3 DUP7 ADD PUSH2 0x3047 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x30F3 DUP2 PUSH2 0x2BB3 JUMP JUMPDEST DUP2 EQ PUSH2 0x30FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3110 DUP2 PUSH2 0x30EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x312D JUMPI PUSH2 0x312C PUSH2 0x2B24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x313B DUP6 DUP3 DUP7 ADD PUSH2 0x2D67 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x314C DUP6 DUP3 DUP7 ADD PUSH2 0x3101 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x317B PUSH2 0x3176 PUSH2 0x3171 DUP5 PUSH2 0x2CF4 JUMP JUMPDEST PUSH2 0x3156 JUMP JUMPDEST PUSH2 0x2CF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x318D DUP3 PUSH2 0x3160 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x319F DUP3 PUSH2 0x3182 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31AF DUP2 PUSH2 0x3194 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x31CA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x31A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x320D DUP3 PUSH2 0x2C2F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x322C JUMPI PUSH2 0x322B PUSH2 0x31D5 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x323F PUSH2 0x2B1A JUMP JUMPDEST SWAP1 POP PUSH2 0x324B DUP3 DUP3 PUSH2 0x3204 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x326B JUMPI PUSH2 0x326A PUSH2 0x31D5 JUMP JUMPDEST JUMPDEST PUSH2 0x3274 DUP3 PUSH2 0x2C2F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32A3 PUSH2 0x329E DUP5 PUSH2 0x3250 JUMP JUMPDEST PUSH2 0x3235 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x32BF JUMPI PUSH2 0x32BE PUSH2 0x31D0 JUMP JUMPDEST JUMPDEST PUSH2 0x32CA DUP5 DUP3 DUP6 PUSH2 0x3281 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x32E7 JUMPI PUSH2 0x32E6 PUSH2 0x2DBC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x32F7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3290 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x331A JUMPI PUSH2 0x3319 PUSH2 0x2B24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3328 DUP8 DUP3 DUP9 ADD PUSH2 0x2D67 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3339 DUP8 DUP3 DUP9 ADD PUSH2 0x2D67 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x334A DUP8 DUP3 DUP9 ADD PUSH2 0x2CB2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x336B JUMPI PUSH2 0x336A PUSH2 0x2B29 JUMP JUMPDEST JUMPDEST PUSH2 0x3377 DUP8 DUP3 DUP9 ADD PUSH2 0x32D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x339A JUMPI PUSH2 0x3399 PUSH2 0x2B24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x33A8 DUP6 DUP3 DUP7 ADD PUSH2 0x2D67 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x33B9 DUP6 DUP3 DUP7 ADD PUSH2 0x2D67 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x340A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x341D JUMPI PUSH2 0x341C PUSH2 0x33C3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D69736D617463686564206172726179206C656E677468730000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3459 PUSH1 0x18 DUP4 PUSH2 0x2BF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3464 DUP3 PUSH2 0x3423 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3488 DUP2 PUSH2 0x344C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x34F8 DUP3 PUSH2 0x2AE6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3503 DUP4 PUSH2 0x2AE6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x351B JUMPI PUSH2 0x351A PUSH2 0x34BE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x352C DUP3 PUSH2 0x2AE6 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x355E JUMPI PUSH2 0x355D PUSH2 0x34BE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3578 DUP2 PUSH2 0x2C9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3594 JUMPI PUSH2 0x3593 PUSH2 0x2B24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35A2 DUP5 DUP3 DUP6 ADD PUSH2 0x3569 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E636520666F722072657761726473 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35E1 PUSH1 0x20 DUP4 PUSH2 0x2BF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x35EC DUP3 PUSH2 0x35AB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3610 DUP2 PUSH2 0x35D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x362C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2D26 JUMP JUMPDEST PUSH2 0x3639 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2AF0 JUMP JUMPDEST PUSH2 0x3646 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2D26 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792047616C6163746963204720726F6C65206F776E65727320616C6C6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7765640000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36AA PUSH1 0x23 DUP4 PUSH2 0x2BF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x36B5 DUP3 PUSH2 0x364E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36D9 DUP2 PUSH2 0x369D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x3742 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3705 JUMP JUMPDEST PUSH2 0x374C DUP7 DUP4 PUSH2 0x3705 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x377F PUSH2 0x377A PUSH2 0x3775 DUP5 PUSH2 0x2AE6 JUMP JUMPDEST PUSH2 0x3156 JUMP JUMPDEST PUSH2 0x2AE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3799 DUP4 PUSH2 0x3764 JUMP JUMPDEST PUSH2 0x37AD PUSH2 0x37A5 DUP3 PUSH2 0x3786 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x3712 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x37C2 PUSH2 0x37B5 JUMP JUMPDEST PUSH2 0x37CD DUP2 DUP5 DUP5 PUSH2 0x3790 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x37F1 JUMPI PUSH2 0x37E6 PUSH1 0x0 DUP3 PUSH2 0x37BA JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x37D3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3836 JUMPI PUSH2 0x3807 DUP2 PUSH2 0x36E0 JUMP JUMPDEST PUSH2 0x3810 DUP5 PUSH2 0x36F5 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x381F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3833 PUSH2 0x382B DUP6 PUSH2 0x36F5 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x37D2 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3859 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x383B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3872 DUP4 DUP4 PUSH2 0x3848 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x388B DUP3 PUSH2 0x2BE9 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x38A4 JUMPI PUSH2 0x38A3 PUSH2 0x31D5 JUMP JUMPDEST JUMPDEST PUSH2 0x38AE DUP3 SLOAD PUSH2 0x33F2 JUMP JUMPDEST PUSH2 0x38B9 DUP3 DUP3 DUP6 PUSH2 0x37F5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x38EC JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x38DA JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x38E4 DUP6 DUP3 PUSH2 0x3866 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x394C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x38FA DUP7 PUSH2 0x36E0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3922 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x38FD JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x393F JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x393B PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3848 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3960 DUP4 DUP6 PUSH2 0x2BF4 JUMP JUMPDEST SWAP4 POP PUSH2 0x396D DUP4 DUP6 DUP5 PUSH2 0x3281 JUMP JUMPDEST PUSH2 0x3976 DUP4 PUSH2 0x2C2F JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x399C DUP2 DUP5 DUP7 PUSH2 0x3954 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4D656D65206E6F74207375626D69747465640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39DB PUSH1 0x12 DUP4 PUSH2 0x2BF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x39E6 DUP3 PUSH2 0x39A5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A0A DUP2 PUSH2 0x39CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A27 DUP3 PUSH2 0x2BE9 JUMP JUMPDEST PUSH2 0x3A31 DUP2 DUP6 PUSH2 0x3A11 JUMP JUMPDEST SWAP4 POP PUSH2 0x3A41 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2C05 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A59 DUP3 DUP6 PUSH2 0x3A1C JUMP JUMPDEST SWAP2 POP PUSH2 0x3A65 DUP3 DUP5 PUSH2 0x3A1C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792063726561746F722063616E206D696E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AA7 PUSH1 0x15 DUP4 PUSH2 0x2BF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3AB2 DUP3 PUSH2 0x3A71 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3AD6 DUP2 PUSH2 0x3A9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D656D6520616C7265616479206D696E74656400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B13 PUSH1 0x13 DUP4 PUSH2 0x2BF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B1E DUP3 PUSH2 0x3ADD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B42 DUP2 PUSH2 0x3B06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3B5E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D26 JUMP JUMPDEST PUSH2 0x3B6B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2AF0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3B87 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2D26 JUMP JUMPDEST PUSH2 0x3B94 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2D26 JUMP JUMPDEST PUSH2 0x3BA1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2AF0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BD0 DUP3 PUSH2 0x3BA9 JUMP JUMPDEST PUSH2 0x3BDA DUP2 DUP6 PUSH2 0x3BB4 JUMP JUMPDEST SWAP4 POP PUSH2 0x3BEA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2C05 JUMP JUMPDEST PUSH2 0x3BF3 DUP2 PUSH2 0x2C2F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3C13 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2D26 JUMP JUMPDEST PUSH2 0x3C20 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2D26 JUMP JUMPDEST PUSH2 0x3C2D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2AF0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3C3F DUP2 DUP5 PUSH2 0x3BC5 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3C59 DUP2 PUSH2 0x2B5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C75 JUMPI PUSH2 0x3C74 PUSH2 0x2B24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3C83 DUP5 DUP3 DUP6 ADD PUSH2 0x3C4A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x4FB05828C7846A54B24 0xD4 0xBB 0xB4 0xE2 0xD8 PUSH6 0xFE65DCCC67CA DUP7 STATICCALL PUSH19 0x9ADD1055B4AA64736F6C634300081400330000 ","sourceMap":"314:5906:23:-:0;;;1891:454;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1956:10;1380:113:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1454:5;1446;:13;;;;;;:::i;:::-;;1479:7;1469;:17;;;;;;:::i;:::-;;1380:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1989:9:23::2;1978:8;;:20;;;;;;;;;;;;;;;;;;2076:15;2059:11;:32;;;;2140:15;2123:10;:32;;;;2203:15;2186:13;:32;;;;2266:15;2249:7;:32;;;;2337:1;2320:14;:18;;;;1891:454:::0;314:5906;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:25:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;911:5;942:6;936:13;927:22;;958:47;999:5;958:47;:::i;:::-;840:171;;;;:::o;1017:379::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:78;1371:7;1362:6;1351:9;1347:22;1301:78;:::i;:::-;1291:88;;1247:142;1017:379;;;;:::o;1402:99::-;1454:6;1488:5;1482:12;1472:22;;1402:99;;;:::o;1507:180::-;1555:77;1552:1;1545:88;1652:4;1649:1;1642:15;1676:4;1673:1;1666:15;1693:180;1741:77;1738:1;1731:88;1838:4;1835:1;1828:15;1862:4;1859:1;1852:15;1879:320;1923:6;1960:1;1954:4;1950:12;1940:22;;2007:1;2001:4;1997:12;2028:18;2018:81;;2084:4;2076:6;2072:17;2062:27;;2018:81;2146:2;2138:6;2135:14;2115:18;2112:38;2109:84;;2165:18;;:::i;:::-;2109:84;1930:269;1879:320;;;:::o;2205:141::-;2254:4;2277:3;2269:11;;2300:3;2297:1;2290:14;2334:4;2331:1;2321:18;2313:26;;2205:141;;;:::o;2352:93::-;2389:6;2436:2;2431;2424:5;2420:14;2416:23;2406:33;;2352:93;;;:::o;2451:107::-;2495:8;2545:5;2539:4;2535:16;2514:37;;2451:107;;;;:::o;2564:393::-;2633:6;2683:1;2671:10;2667:18;2706:97;2736:66;2725:9;2706:97;:::i;:::-;2824:39;2854:8;2843:9;2824:39;:::i;:::-;2812:51;;2896:4;2892:9;2885:5;2881:21;2872:30;;2945:4;2935:8;2931:19;2924:5;2921:30;2911:40;;2640:317;;2564:393;;;;;:::o;2963:77::-;3000:7;3029:5;3018:16;;2963:77;;;:::o;3046:60::-;3074:3;3095:5;3088:12;;3046:60;;;:::o;3112:142::-;3162:9;3195:53;3213:34;3222:24;3240:5;3222:24;:::i;:::-;3213:34;:::i;:::-;3195:53;:::i;:::-;3182:66;;3112:142;;;:::o;3260:75::-;3303:3;3324:5;3317:12;;3260:75;;;:::o;3341:269::-;3451:39;3482:7;3451:39;:::i;:::-;3512:91;3561:41;3585:16;3561:41;:::i;:::-;3553:6;3546:4;3540:11;3512:91;:::i;:::-;3506:4;3499:105;3417:193;3341:269;;;:::o;3616:73::-;3661:3;3616:73;:::o;3695:189::-;3772:32;;:::i;:::-;3813:65;3871:6;3863;3857:4;3813:65;:::i;:::-;3748:136;3695:189;;:::o;3890:186::-;3950:120;3967:3;3960:5;3957:14;3950:120;;;4021:39;4058:1;4051:5;4021:39;:::i;:::-;3994:1;3987:5;3983:13;3974:22;;3950:120;;;3890:186;;:::o;4082:543::-;4183:2;4178:3;4175:11;4172:446;;;4217:38;4249:5;4217:38;:::i;:::-;4301:29;4319:10;4301:29;:::i;:::-;4291:8;4287:44;4484:2;4472:10;4469:18;4466:49;;;4505:8;4490:23;;4466:49;4528:80;4584:22;4602:3;4584:22;:::i;:::-;4574:8;4570:37;4557:11;4528:80;:::i;:::-;4187:431;;4172:446;4082:543;;;:::o;4631:117::-;4685:8;4735:5;4729:4;4725:16;4704:37;;4631:117;;;;:::o;4754:169::-;4798:6;4831:51;4879:1;4875:6;4867:5;4864:1;4860:13;4831:51;:::i;:::-;4827:56;4912:4;4906;4902:15;4892:25;;4805:118;4754:169;;;;:::o;4928:295::-;5004:4;5150:29;5175:3;5169:4;5150:29;:::i;:::-;5142:37;;5212:3;5209:1;5205:11;5199:4;5196:21;5188:29;;4928:295;;;;:::o;5228:1395::-;5345:37;5378:3;5345:37;:::i;:::-;5447:18;5439:6;5436:30;5433:56;;;5469:18;;:::i;:::-;5433:56;5513:38;5545:4;5539:11;5513:38;:::i;:::-;5598:67;5658:6;5650;5644:4;5598:67;:::i;:::-;5692:1;5716:4;5703:17;;5748:2;5740:6;5737:14;5765:1;5760:618;;;;6422:1;6439:6;6436:77;;;6488:9;6483:3;6479:19;6473:26;6464:35;;6436:77;6539:67;6599:6;6592:5;6539:67;:::i;:::-;6533:4;6526:81;6395:222;5730:887;;5760:618;5812:4;5808:9;5800:6;5796:22;5846:37;5878:4;5846:37;:::i;:::-;5905:1;5919:208;5933:7;5930:1;5927:14;5919:208;;;6012:9;6007:3;6003:19;5997:26;5989:6;5982:42;6063:1;6055:6;6051:14;6041:24;;6110:2;6099:9;6095:18;6082:31;;5956:4;5953:1;5949:12;5944:17;;5919:208;;;6155:6;6146:7;6143:19;6140:179;;;6213:9;6208:3;6204:19;6198:26;6256:48;6298:4;6290:6;6286:17;6275:9;6256:48;:::i;:::-;6248:6;6241:64;6163:156;6140:179;6365:1;6361;6353:6;6349:14;6345:22;6339:4;6332:36;5767:611;;;5730:887;;5320:1303;;;5228:1395;;:::o;6629:118::-;6716:24;6734:5;6716:24;:::i;:::-;6711:3;6704:37;6629:118;;:::o;6753:222::-;6846:4;6884:2;6873:9;6869:18;6861:26;;6897:71;6965:1;6954:9;6950:17;6941:6;6897:71;:::i;:::-;6753:222;;;;:::o;314:5906:23:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_1713":{"entryPoint":6785,"id":1713,"parameterSlots":3,"returnSlots":0},"@_approve_1779":{"entryPoint":9148,"id":1779,"parameterSlots":4,"returnSlots":0},"@_baseURI_1094":{"entryPoint":8731,"id":1094,"parameterSlots":0,"returnSlots":1},"@_callOptionalReturn_847":{"entryPoint":9601,"id":847,"parameterSlots":2,"returnSlots":0},"@_checkAuthorized_1353":{"entryPoint":9763,"id":1353,"parameterSlots":3,"returnSlots":0},"@_checkOwner_84":{"entryPoint":6803,"id":84,"parameterSlots":0,"returnSlots":0},"@_getApproved_1280":{"entryPoint":6716,"id":1280,"parameterSlots":1,"returnSlots":1},"@_isAuthorized_1316":{"entryPoint":10201,"id":1316,"parameterSlots":3,"returnSlots":1},"@_mint_1509":{"entryPoint":10733,"id":1509,"parameterSlots":2,"returnSlots":0},"@_msgSender_2224":{"entryPoint":6777,"id":2224,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1267":{"entryPoint":9087,"id":1267,"parameterSlots":1,"returnSlots":1},"@_requireOwned_1845":{"entryPoint":6580,"id":1845,"parameterSlots":1,"returnSlots":1},"@_safeMint_1524":{"entryPoint":8859,"id":1524,"parameterSlots":2,"returnSlots":0},"@_safeMint_1554":{"entryPoint":10165,"id":1554,"parameterSlots":3,"returnSlots":0},"@_setApprovalForAll_1816":{"entryPoint":7931,"id":1816,"parameterSlots":3,"returnSlots":0},"@_setTokenURI_2106":{"entryPoint":8889,"id":2106,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":7603,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_1459":{"entryPoint":7065,"id":1459,"parameterSlots":3,"returnSlots":1},"@addGalacticG_7204":{"entryPoint":2422,"id":7204,"parameterSlots":1,"returnSlots":0},"@approve_1110":{"entryPoint":1838,"id":1110,"parameterSlots":2,"returnSlots":0},"@balanceOf_1018":{"entryPoint":3258,"id":1018,"parameterSlots":1,"returnSlots":1},"@checkOnERC721Received_2211":{"entryPoint":8298,"id":2211,"parameterSlots":5,"returnSlots":0},"@creationFee_7064":{"entryPoint":5246,"id":7064,"parameterSlots":0,"returnSlots":0},"@currentTokenId_7072":{"entryPoint":1561,"id":7072,"parameterSlots":0,"returnSlots":0},"@distributeRewards_7497":{"entryPoint":1860,"id":7497,"parameterSlots":4,"returnSlots":0},"@getApproved_1127":{"entryPoint":1810,"id":1127,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_1160":{"entryPoint":5258,"id":1160,"parameterSlots":2,"returnSlots":1},"@isGalacticG_7094":{"entryPoint":2779,"id":7094,"parameterSlots":0,"returnSlots":0},"@log10_4908":{"entryPoint":10394,"id":4908,"parameterSlots":1,"returnSlots":1},"@memes_7090":{"entryPoint":2811,"id":7090,"parameterSlots":0,"returnSlots":0},"@mintMeme_7368":{"entryPoint":5406,"id":7368,"parameterSlots":1,"returnSlots":0},"@mintingFee_7066":{"entryPoint":3097,"id":7066,"parameterSlots":0,"returnSlots":0},"@name_1040":{"entryPoint":1664,"id":1040,"parameterSlots":0,"returnSlots":1},"@nguToken_7062":{"entryPoint":4791,"id":7062,"parameterSlots":0,"returnSlots":0},"@ownerOf_1031":{"entryPoint":3198,"id":1031,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":4581,"id":67,"parameterSlots":0,"returnSlots":1},"@removeGalacticG_7218":{"entryPoint":5147,"id":7218,"parameterSlots":1,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":3444,"id":98,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_1224":{"entryPoint":3065,"id":1224,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1254":{"entryPoint":4829,"id":1254,"parameterSlots":4,"returnSlots":0},"@safeTransferFrom_552":{"entryPoint":7801,"id":552,"parameterSlots":4,"returnSlots":0},"@safeTransfer_525":{"entryPoint":6938,"id":525,"parameterSlots":3,"returnSlots":0},"@setApprovalForAll_1143":{"entryPoint":4769,"id":1143,"parameterSlots":2,"returnSlots":0},"@setFees_7249":{"entryPoint":3216,"id":7249,"parameterSlots":4,"returnSlots":0},"@submissionFee_7068":{"entryPoint":5252,"id":7068,"parameterSlots":0,"returnSlots":0},"@submitMeme_7294":{"entryPoint":3464,"id":7294,"parameterSlots":2,"returnSlots":0},"@supportsInterface_2030":{"entryPoint":1567,"id":2030,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3517":{"entryPoint":8981,"id":3517,"parameterSlots":1,"returnSlots":1},"@supportsInterface_990":{"entryPoint":6354,"id":990,"parameterSlots":1,"returnSlots":1},"@symbol_1049":{"entryPoint":4623,"id":1049,"parameterSlots":0,"returnSlots":1},"@toString_2372":{"entryPoint":9959,"id":2372,"parameterSlots":1,"returnSlots":1},"@tokenURI_1085":{"entryPoint":8754,"id":1085,"parameterSlots":1,"returnSlots":1},"@tokenURI_2087":{"entryPoint":4866,"id":2087,"parameterSlots":1,"returnSlots":1},"@transferFrom_1206":{"entryPoint":2521,"id":1206,"parameterSlots":3,"returnSlots":0},"@transferOwnership_126":{"entryPoint":6220,"id":126,"parameterSlots":1,"returnSlots":0},"@voteFee_7070":{"entryPoint":5141,"id":7070,"parameterSlots":0,"returnSlots":0},"@voteMeme_7416":{"entryPoint":4141,"id":7416,"parameterSlots":1,"returnSlots":0},"@withdrawFees_7514":{"entryPoint":3103,"id":7514,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":12944,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":11623,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_calldata_ptr":{"entryPoint":11723,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr":{"entryPoint":11809,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bool":{"entryPoint":12545,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":11121,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":15434,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":13010,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_calldata_ptr":{"entryPoint":12359,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_uint256":{"entryPoint":11442,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":13673,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":12024,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":13187,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":12069,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":13056,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":12566,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":11644,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr":{"entryPoint":11895,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bytes4":{"entryPoint":11142,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":15455,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_calldata_ptr":{"entryPoint":12445,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":11463,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":13694,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256":{"entryPoint":12256,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":11558,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":11199,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":15301,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_IERC20_$480_to_t_address_fromStack":{"entryPoint":12710,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":14676,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":11328,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":14876,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_53a04e33854b42e7e6aa2cc3ebfba2d4fe5e3493a53cdce37f5154aefb6af936_to_t_string_memory_ptr_fromStack":{"entryPoint":13981,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_855024f5c4a5b0efabcd6daea3ba466bc9b46313116a5000814122b9ef4ee96e_to_t_string_memory_ptr_fromStack":{"entryPoint":14798,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a11bbde2fe764af74e1d4459d264f972380a8fc71ad8f10b8306caf307e5d50a_to_t_string_memory_ptr_fromStack":{"entryPoint":13780,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085_to_t_string_memory_ptr_fromStack":{"entryPoint":13388,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_be55e3527e41bc700964ae5d57e43d215583aefa75e094d5905e663544120409_to_t_string_memory_ptr_fromStack":{"entryPoint":15110,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f35b27dac5c6c5c70979437e786589e609929f2a486ae3e25e09885c3767053e_to_t_string_memory_ptr_fromStack":{"entryPoint":15002,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":10992,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":14925,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":11573,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":15218,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":15358,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":15177,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":13847,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":11214,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$480__to_t_address__fromStack_reversed":{"entryPoint":12725,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14721,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11385,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_53a04e33854b42e7e6aa2cc3ebfba2d4fe5e3493a53cdce37f5154aefb6af936__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14016,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_855024f5c4a5b0efabcd6daea3ba466bc9b46313116a5000814122b9ef4ee96e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14833,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a11bbde2fe764af74e1d4459d264f972380a8fc71ad8f10b8306caf307e5d50a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13815,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13423,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_be55e3527e41bc700964ae5d57e43d215583aefa75e094d5905e663544120409__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15145,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f35b27dac5c6c5c70979437e786589e609929f2a486ae3e25e09885c3767053e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15037,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":11007,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_bool_t_bool__to_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_bool_t_bool__fromStack_reversed":{"entryPoint":12152,"id":null,"parameterSlots":7,"returnSlots":1},"allocate_memory":{"entryPoint":12853,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":11034,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":12880,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":14048,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":15273,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":11241,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":15284,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":11252,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":14865,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":13549,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":14325,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":11540,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":11187,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":11054,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":11508,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":10982,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":14290,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_contract$_IERC20_$480_to_t_address":{"entryPoint":12692,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":12674,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":12640,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":14180,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":14466,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":12929,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":11269,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":14069,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":13298,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":14438,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":12804,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":12630,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":13601,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":14408,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":13502,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":15500,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":13251,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":13455,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":12757,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":14214,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":11713,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":11708,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":11718,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":12752,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":11049,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":11044,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":11311,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":14085,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":14395,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":14266,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_53a04e33854b42e7e6aa2cc3ebfba2d4fe5e3493a53cdce37f5154aefb6af936":{"entryPoint":13902,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_855024f5c4a5b0efabcd6daea3ba466bc9b46313116a5000814122b9ef4ee96e":{"entryPoint":14757,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a11bbde2fe764af74e1d4459d264f972380a8fc71ad8f10b8306caf307e5d50a":{"entryPoint":13739,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085":{"entryPoint":13347,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_be55e3527e41bc700964ae5d57e43d215583aefa75e094d5905e663544120409":{"entryPoint":15069,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f35b27dac5c6c5c70979437e786589e609929f2a486ae3e25e09885c3767053e":{"entryPoint":14961,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":14098,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":14224,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":11600,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":12522,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":11098,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":11419,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":14261,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:33383:25","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:25","statements":[{"nodeType":"YulAssignment","src":"62:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:25"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:25","type":""}],"src":"7:77:25"},{"body":{"nodeType":"YulBlock","src":"155:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"177:17:25"},"nodeType":"YulFunctionCall","src":"177:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:25"},"nodeType":"YulFunctionCall","src":"165:37:25"},"nodeType":"YulExpressionStatement","src":"165:37:25"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:25","type":""}],"src":"90:118:25"},{"body":{"nodeType":"YulBlock","src":"312:124:25","statements":[{"nodeType":"YulAssignment","src":"322:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:25"},"nodeType":"YulFunctionCall","src":"330:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:25"},"nodeType":"YulFunctionCall","src":"411:17:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"358:43:25"},"nodeType":"YulFunctionCall","src":"358:71:25"},"nodeType":"YulExpressionStatement","src":"358:71:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:25","type":""}],"src":"214:222:25"},{"body":{"nodeType":"YulBlock","src":"482:35:25","statements":[{"nodeType":"YulAssignment","src":"492:19:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"508:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"502:5:25"},"nodeType":"YulFunctionCall","src":"502:9:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"492:6:25"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"475:6:25","type":""}],"src":"442:75:25"},{"body":{"nodeType":"YulBlock","src":"612:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"629:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"632:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"622:6:25"},"nodeType":"YulFunctionCall","src":"622:12:25"},"nodeType":"YulExpressionStatement","src":"622:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"523:117:25"},{"body":{"nodeType":"YulBlock","src":"735:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"755:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"745:6:25"},"nodeType":"YulFunctionCall","src":"745:12:25"},"nodeType":"YulExpressionStatement","src":"745:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"646:117:25"},{"body":{"nodeType":"YulBlock","src":"813:105:25","statements":[{"nodeType":"YulAssignment","src":"823:89:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"838:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"845:66:25","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"834:3:25"},"nodeType":"YulFunctionCall","src":"834:78:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"823:7:25"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"795:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"805:7:25","type":""}],"src":"769:149:25"},{"body":{"nodeType":"YulBlock","src":"966:78:25","statements":[{"body":{"nodeType":"YulBlock","src":"1022:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1031:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1034:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1024:6:25"},"nodeType":"YulFunctionCall","src":"1024:12:25"},"nodeType":"YulExpressionStatement","src":"1024:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"989:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1013:5:25"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"996:16:25"},"nodeType":"YulFunctionCall","src":"996:23:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"986:2:25"},"nodeType":"YulFunctionCall","src":"986:34:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"979:6:25"},"nodeType":"YulFunctionCall","src":"979:42:25"},"nodeType":"YulIf","src":"976:62:25"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"959:5:25","type":""}],"src":"924:120:25"},{"body":{"nodeType":"YulBlock","src":"1101:86:25","statements":[{"nodeType":"YulAssignment","src":"1111:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1133:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1120:12:25"},"nodeType":"YulFunctionCall","src":"1120:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1111:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1175:5:25"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"1149:25:25"},"nodeType":"YulFunctionCall","src":"1149:32:25"},"nodeType":"YulExpressionStatement","src":"1149:32:25"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1079:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"1087:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1095:5:25","type":""}],"src":"1050:137:25"},{"body":{"nodeType":"YulBlock","src":"1258:262:25","statements":[{"body":{"nodeType":"YulBlock","src":"1304:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1306:77:25"},"nodeType":"YulFunctionCall","src":"1306:79:25"},"nodeType":"YulExpressionStatement","src":"1306:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1279:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"1288:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1275:3:25"},"nodeType":"YulFunctionCall","src":"1275:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"1300:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1271:3:25"},"nodeType":"YulFunctionCall","src":"1271:32:25"},"nodeType":"YulIf","src":"1268:119:25"},{"nodeType":"YulBlock","src":"1397:116:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1412:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"1426:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1416:6:25","type":""}]},{"nodeType":"YulAssignment","src":"1441:62:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1475:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"1486:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1471:3:25"},"nodeType":"YulFunctionCall","src":"1471:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1495:7:25"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1451:19:25"},"nodeType":"YulFunctionCall","src":"1451:52:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1441:6:25"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1228:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1239:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1251:6:25","type":""}],"src":"1193:327:25"},{"body":{"nodeType":"YulBlock","src":"1568:48:25","statements":[{"nodeType":"YulAssignment","src":"1578:32:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1603:5:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1596:6:25"},"nodeType":"YulFunctionCall","src":"1596:13:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1589:6:25"},"nodeType":"YulFunctionCall","src":"1589:21:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1578:7:25"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1550:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1560:7:25","type":""}],"src":"1526:90:25"},{"body":{"nodeType":"YulBlock","src":"1681:50:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1698:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1718:5:25"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1703:14:25"},"nodeType":"YulFunctionCall","src":"1703:21:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1691:6:25"},"nodeType":"YulFunctionCall","src":"1691:34:25"},"nodeType":"YulExpressionStatement","src":"1691:34:25"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1669:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1676:3:25","type":""}],"src":"1622:109:25"},{"body":{"nodeType":"YulBlock","src":"1829:118:25","statements":[{"nodeType":"YulAssignment","src":"1839:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1851:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1862:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1847:3:25"},"nodeType":"YulFunctionCall","src":"1847:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1839:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1913:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1926:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1937:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1922:3:25"},"nodeType":"YulFunctionCall","src":"1922:17:25"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1875:37:25"},"nodeType":"YulFunctionCall","src":"1875:65:25"},"nodeType":"YulExpressionStatement","src":"1875:65:25"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1801:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1813:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1824:4:25","type":""}],"src":"1737:210:25"},{"body":{"nodeType":"YulBlock","src":"2012:40:25","statements":[{"nodeType":"YulAssignment","src":"2023:22:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2039:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2033:5:25"},"nodeType":"YulFunctionCall","src":"2033:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2023:6:25"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1995:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2005:6:25","type":""}],"src":"1953:99:25"},{"body":{"nodeType":"YulBlock","src":"2154:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2171:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"2176:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2164:6:25"},"nodeType":"YulFunctionCall","src":"2164:19:25"},"nodeType":"YulExpressionStatement","src":"2164:19:25"},{"nodeType":"YulAssignment","src":"2192:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2211:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"2216:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2207:3:25"},"nodeType":"YulFunctionCall","src":"2207:14:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"2192:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2126:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"2131:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2142:11:25","type":""}],"src":"2058:169:25"},{"body":{"nodeType":"YulBlock","src":"2295:184:25","statements":[{"nodeType":"YulVariableDeclaration","src":"2305:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"2314:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2309:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"2374:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2399:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"2404:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2395:3:25"},"nodeType":"YulFunctionCall","src":"2395:11:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2418:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"2423:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2414:3:25"},"nodeType":"YulFunctionCall","src":"2414:11:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2408:5:25"},"nodeType":"YulFunctionCall","src":"2408:18:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2388:6:25"},"nodeType":"YulFunctionCall","src":"2388:39:25"},"nodeType":"YulExpressionStatement","src":"2388:39:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2335:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"2338:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2332:2:25"},"nodeType":"YulFunctionCall","src":"2332:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2346:19:25","statements":[{"nodeType":"YulAssignment","src":"2348:15:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2357:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"2360:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2353:3:25"},"nodeType":"YulFunctionCall","src":"2353:10:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2348:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"2328:3:25","statements":[]},"src":"2324:113:25"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2457:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"2462:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2453:3:25"},"nodeType":"YulFunctionCall","src":"2453:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"2471:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2446:6:25"},"nodeType":"YulFunctionCall","src":"2446:27:25"},"nodeType":"YulExpressionStatement","src":"2446:27:25"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2277:3:25","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2282:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"2287:6:25","type":""}],"src":"2233:246:25"},{"body":{"nodeType":"YulBlock","src":"2533:54:25","statements":[{"nodeType":"YulAssignment","src":"2543:38:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2561:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"2568:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2557:3:25"},"nodeType":"YulFunctionCall","src":"2557:14:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2577:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2573:3:25"},"nodeType":"YulFunctionCall","src":"2573:7:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2553:3:25"},"nodeType":"YulFunctionCall","src":"2553:28:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2543:6:25"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2516:5:25","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2526:6:25","type":""}],"src":"2485:102:25"},{"body":{"nodeType":"YulBlock","src":"2685:285:25","statements":[{"nodeType":"YulVariableDeclaration","src":"2695:53:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2742:5:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2709:32:25"},"nodeType":"YulFunctionCall","src":"2709:39:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2699:6:25","type":""}]},{"nodeType":"YulAssignment","src":"2757:78:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2823:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"2828:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2764:58:25"},"nodeType":"YulFunctionCall","src":"2764:71:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2757:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2883:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"2890:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2879:3:25"},"nodeType":"YulFunctionCall","src":"2879:16:25"},{"name":"pos","nodeType":"YulIdentifier","src":"2897:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"2902:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2844:34:25"},"nodeType":"YulFunctionCall","src":"2844:65:25"},"nodeType":"YulExpressionStatement","src":"2844:65:25"},{"nodeType":"YulAssignment","src":"2918:46:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2929:3:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2956:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2934:21:25"},"nodeType":"YulFunctionCall","src":"2934:29:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2925:3:25"},"nodeType":"YulFunctionCall","src":"2925:39:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2918:3:25"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2666:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2673:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2681:3:25","type":""}],"src":"2593:377:25"},{"body":{"nodeType":"YulBlock","src":"3094:195:25","statements":[{"nodeType":"YulAssignment","src":"3104:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3116:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3127:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3112:3:25"},"nodeType":"YulFunctionCall","src":"3112:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3104:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3151:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3162:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3147:3:25"},"nodeType":"YulFunctionCall","src":"3147:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3170:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"3176:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3166:3:25"},"nodeType":"YulFunctionCall","src":"3166:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3140:6:25"},"nodeType":"YulFunctionCall","src":"3140:47:25"},"nodeType":"YulExpressionStatement","src":"3140:47:25"},{"nodeType":"YulAssignment","src":"3196:86:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3268:6:25"},{"name":"tail","nodeType":"YulIdentifier","src":"3277:4:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3204:63:25"},"nodeType":"YulFunctionCall","src":"3204:78:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3196:4:25"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3066:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3078:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3089:4:25","type":""}],"src":"2976:313:25"},{"body":{"nodeType":"YulBlock","src":"3338:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"3395:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3404:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3407:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3397:6:25"},"nodeType":"YulFunctionCall","src":"3397:12:25"},"nodeType":"YulExpressionStatement","src":"3397:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3361:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3386:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3368:17:25"},"nodeType":"YulFunctionCall","src":"3368:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3358:2:25"},"nodeType":"YulFunctionCall","src":"3358:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3351:6:25"},"nodeType":"YulFunctionCall","src":"3351:43:25"},"nodeType":"YulIf","src":"3348:63:25"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3331:5:25","type":""}],"src":"3295:122:25"},{"body":{"nodeType":"YulBlock","src":"3475:87:25","statements":[{"nodeType":"YulAssignment","src":"3485:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3507:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3494:12:25"},"nodeType":"YulFunctionCall","src":"3494:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3485:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3550:5:25"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3523:26:25"},"nodeType":"YulFunctionCall","src":"3523:33:25"},"nodeType":"YulExpressionStatement","src":"3523:33:25"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3453:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"3461:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3469:5:25","type":""}],"src":"3423:139:25"},{"body":{"nodeType":"YulBlock","src":"3634:263:25","statements":[{"body":{"nodeType":"YulBlock","src":"3680:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3682:77:25"},"nodeType":"YulFunctionCall","src":"3682:79:25"},"nodeType":"YulExpressionStatement","src":"3682:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3655:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"3664:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3651:3:25"},"nodeType":"YulFunctionCall","src":"3651:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"3676:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3647:3:25"},"nodeType":"YulFunctionCall","src":"3647:32:25"},"nodeType":"YulIf","src":"3644:119:25"},{"nodeType":"YulBlock","src":"3773:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"3788:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"3802:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3792:6:25","type":""}]},{"nodeType":"YulAssignment","src":"3817:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3852:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"3863:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3848:3:25"},"nodeType":"YulFunctionCall","src":"3848:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3872:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3827:20:25"},"nodeType":"YulFunctionCall","src":"3827:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3817:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3604:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3615:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3627:6:25","type":""}],"src":"3568:329:25"},{"body":{"nodeType":"YulBlock","src":"3948:81:25","statements":[{"nodeType":"YulAssignment","src":"3958:65:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3973:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"3980:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3969:3:25"},"nodeType":"YulFunctionCall","src":"3969:54:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3958:7:25"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3930:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3940:7:25","type":""}],"src":"3903:126:25"},{"body":{"nodeType":"YulBlock","src":"4080:51:25","statements":[{"nodeType":"YulAssignment","src":"4090:35:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4119:5:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"4101:17:25"},"nodeType":"YulFunctionCall","src":"4101:24:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4090:7:25"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4062:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4072:7:25","type":""}],"src":"4035:96:25"},{"body":{"nodeType":"YulBlock","src":"4202:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4219:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4242:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4224:17:25"},"nodeType":"YulFunctionCall","src":"4224:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4212:6:25"},"nodeType":"YulFunctionCall","src":"4212:37:25"},"nodeType":"YulExpressionStatement","src":"4212:37:25"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4190:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4197:3:25","type":""}],"src":"4137:118:25"},{"body":{"nodeType":"YulBlock","src":"4359:124:25","statements":[{"nodeType":"YulAssignment","src":"4369:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4381:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4392:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4377:3:25"},"nodeType":"YulFunctionCall","src":"4377:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4369:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4449:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4462:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4473:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4458:3:25"},"nodeType":"YulFunctionCall","src":"4458:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4405:43:25"},"nodeType":"YulFunctionCall","src":"4405:71:25"},"nodeType":"YulExpressionStatement","src":"4405:71:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4331:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4343:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4354:4:25","type":""}],"src":"4261:222:25"},{"body":{"nodeType":"YulBlock","src":"4532:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"4589:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4598:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4601:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4591:6:25"},"nodeType":"YulFunctionCall","src":"4591:12:25"},"nodeType":"YulExpressionStatement","src":"4591:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4555:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4580:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4562:17:25"},"nodeType":"YulFunctionCall","src":"4562:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4552:2:25"},"nodeType":"YulFunctionCall","src":"4552:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4545:6:25"},"nodeType":"YulFunctionCall","src":"4545:43:25"},"nodeType":"YulIf","src":"4542:63:25"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4525:5:25","type":""}],"src":"4489:122:25"},{"body":{"nodeType":"YulBlock","src":"4669:87:25","statements":[{"nodeType":"YulAssignment","src":"4679:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4701:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4688:12:25"},"nodeType":"YulFunctionCall","src":"4688:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4679:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4744:5:25"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4717:26:25"},"nodeType":"YulFunctionCall","src":"4717:33:25"},"nodeType":"YulExpressionStatement","src":"4717:33:25"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4647:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"4655:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4663:5:25","type":""}],"src":"4617:139:25"},{"body":{"nodeType":"YulBlock","src":"4845:391:25","statements":[{"body":{"nodeType":"YulBlock","src":"4891:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4893:77:25"},"nodeType":"YulFunctionCall","src":"4893:79:25"},"nodeType":"YulExpressionStatement","src":"4893:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4866:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"4875:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4862:3:25"},"nodeType":"YulFunctionCall","src":"4862:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"4887:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4858:3:25"},"nodeType":"YulFunctionCall","src":"4858:32:25"},"nodeType":"YulIf","src":"4855:119:25"},{"nodeType":"YulBlock","src":"4984:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4999:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5013:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5003:6:25","type":""}]},{"nodeType":"YulAssignment","src":"5028:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5063:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"5074:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5059:3:25"},"nodeType":"YulFunctionCall","src":"5059:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5083:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5038:20:25"},"nodeType":"YulFunctionCall","src":"5038:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5028:6:25"}]}]},{"nodeType":"YulBlock","src":"5111:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5126:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5140:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5130:6:25","type":""}]},{"nodeType":"YulAssignment","src":"5156:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5191:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"5202:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5187:3:25"},"nodeType":"YulFunctionCall","src":"5187:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5211:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5166:20:25"},"nodeType":"YulFunctionCall","src":"5166:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5156:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4807:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4818:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4830:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4838:6:25","type":""}],"src":"4762:474:25"},{"body":{"nodeType":"YulBlock","src":"5331:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5348:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5351:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5341:6:25"},"nodeType":"YulFunctionCall","src":"5341:12:25"},"nodeType":"YulExpressionStatement","src":"5341:12:25"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"5242:117:25"},{"body":{"nodeType":"YulBlock","src":"5454:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5471:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5474:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5464:6:25"},"nodeType":"YulFunctionCall","src":"5464:12:25"},"nodeType":"YulExpressionStatement","src":"5464:12:25"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"5365:117:25"},{"body":{"nodeType":"YulBlock","src":"5577:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5594:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5597:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5587:6:25"},"nodeType":"YulFunctionCall","src":"5587:12:25"},"nodeType":"YulExpressionStatement","src":"5587:12:25"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"5488:117:25"},{"body":{"nodeType":"YulBlock","src":"5718:478:25","statements":[{"body":{"nodeType":"YulBlock","src":"5767:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5769:77:25"},"nodeType":"YulFunctionCall","src":"5769:79:25"},"nodeType":"YulExpressionStatement","src":"5769:79:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5746:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"5754:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5742:3:25"},"nodeType":"YulFunctionCall","src":"5742:17:25"},{"name":"end","nodeType":"YulIdentifier","src":"5761:3:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5738:3:25"},"nodeType":"YulFunctionCall","src":"5738:27:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5731:6:25"},"nodeType":"YulFunctionCall","src":"5731:35:25"},"nodeType":"YulIf","src":"5728:122:25"},{"nodeType":"YulAssignment","src":"5859:30:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5882:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5869:12:25"},"nodeType":"YulFunctionCall","src":"5869:20:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5859:6:25"}]},{"body":{"nodeType":"YulBlock","src":"5932:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"5934:77:25"},"nodeType":"YulFunctionCall","src":"5934:79:25"},"nodeType":"YulExpressionStatement","src":"5934:79:25"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5904:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"5912:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5901:2:25"},"nodeType":"YulFunctionCall","src":"5901:30:25"},"nodeType":"YulIf","src":"5898:117:25"},{"nodeType":"YulAssignment","src":"6024:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6040:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"6048:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6036:3:25"},"nodeType":"YulFunctionCall","src":"6036:17:25"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"6024:8:25"}]},{"body":{"nodeType":"YulBlock","src":"6107:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"6109:77:25"},"nodeType":"YulFunctionCall","src":"6109:79:25"},"nodeType":"YulExpressionStatement","src":"6109:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"6072:8:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6086:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"6094:4:25","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6082:3:25"},"nodeType":"YulFunctionCall","src":"6082:17:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6068:3:25"},"nodeType":"YulFunctionCall","src":"6068:32:25"},{"name":"end","nodeType":"YulIdentifier","src":"6102:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6065:2:25"},"nodeType":"YulFunctionCall","src":"6065:41:25"},"nodeType":"YulIf","src":"6062:128:25"}]},"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5685:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"5693:3:25","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"5701:8:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"5711:6:25","type":""}],"src":"5628:568:25"},{"body":{"nodeType":"YulBlock","src":"6309:478:25","statements":[{"body":{"nodeType":"YulBlock","src":"6358:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"6360:77:25"},"nodeType":"YulFunctionCall","src":"6360:79:25"},"nodeType":"YulExpressionStatement","src":"6360:79:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6337:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"6345:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6333:3:25"},"nodeType":"YulFunctionCall","src":"6333:17:25"},{"name":"end","nodeType":"YulIdentifier","src":"6352:3:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6329:3:25"},"nodeType":"YulFunctionCall","src":"6329:27:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6322:6:25"},"nodeType":"YulFunctionCall","src":"6322:35:25"},"nodeType":"YulIf","src":"6319:122:25"},{"nodeType":"YulAssignment","src":"6450:30:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6473:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6460:12:25"},"nodeType":"YulFunctionCall","src":"6460:20:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6450:6:25"}]},{"body":{"nodeType":"YulBlock","src":"6523:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"6525:77:25"},"nodeType":"YulFunctionCall","src":"6525:79:25"},"nodeType":"YulExpressionStatement","src":"6525:79:25"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6495:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"6503:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6492:2:25"},"nodeType":"YulFunctionCall","src":"6492:30:25"},"nodeType":"YulIf","src":"6489:117:25"},{"nodeType":"YulAssignment","src":"6615:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6631:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"6639:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6627:3:25"},"nodeType":"YulFunctionCall","src":"6627:17:25"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"6615:8:25"}]},{"body":{"nodeType":"YulBlock","src":"6698:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"6700:77:25"},"nodeType":"YulFunctionCall","src":"6700:79:25"},"nodeType":"YulExpressionStatement","src":"6700:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"6663:8:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6677:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"6685:4:25","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6673:3:25"},"nodeType":"YulFunctionCall","src":"6673:17:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6659:3:25"},"nodeType":"YulFunctionCall","src":"6659:32:25"},{"name":"end","nodeType":"YulIdentifier","src":"6693:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6656:2:25"},"nodeType":"YulFunctionCall","src":"6656:41:25"},"nodeType":"YulIf","src":"6653:128:25"}]},"name":"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6276:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"6284:3:25","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"6292:8:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"6302:6:25","type":""}],"src":"6219:568:25"},{"body":{"nodeType":"YulBlock","src":"6946:781:25","statements":[{"body":{"nodeType":"YulBlock","src":"6992:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6994:77:25"},"nodeType":"YulFunctionCall","src":"6994:79:25"},"nodeType":"YulExpressionStatement","src":"6994:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6967:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"6976:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6963:3:25"},"nodeType":"YulFunctionCall","src":"6963:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"6988:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6959:3:25"},"nodeType":"YulFunctionCall","src":"6959:32:25"},"nodeType":"YulIf","src":"6956:119:25"},{"nodeType":"YulBlock","src":"7085:312:25","statements":[{"nodeType":"YulVariableDeclaration","src":"7100:45:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7131:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7142:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7127:3:25"},"nodeType":"YulFunctionCall","src":"7127:17:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7114:12:25"},"nodeType":"YulFunctionCall","src":"7114:31:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7104:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"7192:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7194:77:25"},"nodeType":"YulFunctionCall","src":"7194:79:25"},"nodeType":"YulExpressionStatement","src":"7194:79:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7164:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"7172:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7161:2:25"},"nodeType":"YulFunctionCall","src":"7161:30:25"},"nodeType":"YulIf","src":"7158:117:25"},{"nodeType":"YulAssignment","src":"7289:98:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7359:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"7370:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7355:3:25"},"nodeType":"YulFunctionCall","src":"7355:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7379:7:25"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"7307:47:25"},"nodeType":"YulFunctionCall","src":"7307:80:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7289:6:25"},{"name":"value1","nodeType":"YulIdentifier","src":"7297:6:25"}]}]},{"nodeType":"YulBlock","src":"7407:313:25","statements":[{"nodeType":"YulVariableDeclaration","src":"7422:46:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7453:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7464:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7449:3:25"},"nodeType":"YulFunctionCall","src":"7449:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7436:12:25"},"nodeType":"YulFunctionCall","src":"7436:32:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7426:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"7515:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7517:77:25"},"nodeType":"YulFunctionCall","src":"7517:79:25"},"nodeType":"YulExpressionStatement","src":"7517:79:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7487:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"7495:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7484:2:25"},"nodeType":"YulFunctionCall","src":"7484:30:25"},"nodeType":"YulIf","src":"7481:117:25"},{"nodeType":"YulAssignment","src":"7612:98:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7682:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"7693:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7678:3:25"},"nodeType":"YulFunctionCall","src":"7678:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7702:7:25"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"7630:47:25"},"nodeType":"YulFunctionCall","src":"7630:80:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7612:6:25"},{"name":"value3","nodeType":"YulIdentifier","src":"7620:6:25"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6892:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6903:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6915:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6923:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6931:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6939:6:25","type":""}],"src":"6793:934:25"},{"body":{"nodeType":"YulBlock","src":"7799:263:25","statements":[{"body":{"nodeType":"YulBlock","src":"7845:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7847:77:25"},"nodeType":"YulFunctionCall","src":"7847:79:25"},"nodeType":"YulExpressionStatement","src":"7847:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7820:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"7829:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7816:3:25"},"nodeType":"YulFunctionCall","src":"7816:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"7841:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7812:3:25"},"nodeType":"YulFunctionCall","src":"7812:32:25"},"nodeType":"YulIf","src":"7809:119:25"},{"nodeType":"YulBlock","src":"7938:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"7953:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"7967:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7957:6:25","type":""}]},{"nodeType":"YulAssignment","src":"7982:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8017:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"8028:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8013:3:25"},"nodeType":"YulFunctionCall","src":"8013:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8037:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7992:20:25"},"nodeType":"YulFunctionCall","src":"7992:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7982:6:25"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7769:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7780:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7792:6:25","type":""}],"src":"7733:329:25"},{"body":{"nodeType":"YulBlock","src":"8168:519:25","statements":[{"body":{"nodeType":"YulBlock","src":"8214:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8216:77:25"},"nodeType":"YulFunctionCall","src":"8216:79:25"},"nodeType":"YulExpressionStatement","src":"8216:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8189:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"8198:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8185:3:25"},"nodeType":"YulFunctionCall","src":"8185:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"8210:2:25","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8181:3:25"},"nodeType":"YulFunctionCall","src":"8181:32:25"},"nodeType":"YulIf","src":"8178:119:25"},{"nodeType":"YulBlock","src":"8307:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"8322:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"8336:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8326:6:25","type":""}]},{"nodeType":"YulAssignment","src":"8351:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8386:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"8397:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8382:3:25"},"nodeType":"YulFunctionCall","src":"8382:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8406:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8361:20:25"},"nodeType":"YulFunctionCall","src":"8361:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8351:6:25"}]}]},{"nodeType":"YulBlock","src":"8434:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"8449:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"8463:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8453:6:25","type":""}]},{"nodeType":"YulAssignment","src":"8479:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8514:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"8525:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8510:3:25"},"nodeType":"YulFunctionCall","src":"8510:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8534:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8489:20:25"},"nodeType":"YulFunctionCall","src":"8489:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8479:6:25"}]}]},{"nodeType":"YulBlock","src":"8562:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"8577:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"8591:2:25","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8581:6:25","type":""}]},{"nodeType":"YulAssignment","src":"8607:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8642:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"8653:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8638:3:25"},"nodeType":"YulFunctionCall","src":"8638:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8662:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8617:20:25"},"nodeType":"YulFunctionCall","src":"8617:53:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8607:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8122:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8133:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8145:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8153:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8161:6:25","type":""}],"src":"8068:619:25"},{"body":{"nodeType":"YulBlock","src":"8939:596:25","statements":[{"nodeType":"YulAssignment","src":"8949:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8961:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8972:3:25","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8957:3:25"},"nodeType":"YulFunctionCall","src":"8957:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8949:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9030:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9043:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9054:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9039:3:25"},"nodeType":"YulFunctionCall","src":"9039:17:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8986:43:25"},"nodeType":"YulFunctionCall","src":"8986:71:25"},"nodeType":"YulExpressionStatement","src":"8986:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9111:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9124:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9135:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9120:3:25"},"nodeType":"YulFunctionCall","src":"9120:18:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9067:43:25"},"nodeType":"YulFunctionCall","src":"9067:72:25"},"nodeType":"YulExpressionStatement","src":"9067:72:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9160:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9171:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9156:3:25"},"nodeType":"YulFunctionCall","src":"9156:18:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9180:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"9186:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9176:3:25"},"nodeType":"YulFunctionCall","src":"9176:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9149:6:25"},"nodeType":"YulFunctionCall","src":"9149:48:25"},"nodeType":"YulExpressionStatement","src":"9149:48:25"},{"nodeType":"YulAssignment","src":"9206:86:25","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9278:6:25"},{"name":"tail","nodeType":"YulIdentifier","src":"9287:4:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9214:63:25"},"nodeType":"YulFunctionCall","src":"9214:78:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9206:4:25"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"9346:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9359:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9370:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9355:3:25"},"nodeType":"YulFunctionCall","src":"9355:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9302:43:25"},"nodeType":"YulFunctionCall","src":"9302:72:25"},"nodeType":"YulExpressionStatement","src":"9302:72:25"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"9422:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9435:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9446:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9431:3:25"},"nodeType":"YulFunctionCall","src":"9431:19:25"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"9384:37:25"},"nodeType":"YulFunctionCall","src":"9384:67:25"},"nodeType":"YulExpressionStatement","src":"9384:67:25"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"9499:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9512:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9523:3:25","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9508:3:25"},"nodeType":"YulFunctionCall","src":"9508:19:25"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"9461:37:25"},"nodeType":"YulFunctionCall","src":"9461:67:25"},"nodeType":"YulExpressionStatement","src":"9461:67:25"}]},"name":"abi_encode_tuple_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_bool_t_bool__to_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_bool_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8871:9:25","type":""},{"name":"value5","nodeType":"YulTypedName","src":"8883:6:25","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8891:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8899:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8907:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8915:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8923:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8934:4:25","type":""}],"src":"8693:842:25"},{"body":{"nodeType":"YulBlock","src":"9658:648:25","statements":[{"body":{"nodeType":"YulBlock","src":"9705:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9707:77:25"},"nodeType":"YulFunctionCall","src":"9707:79:25"},"nodeType":"YulExpressionStatement","src":"9707:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9679:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"9688:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9675:3:25"},"nodeType":"YulFunctionCall","src":"9675:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"9700:3:25","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9671:3:25"},"nodeType":"YulFunctionCall","src":"9671:33:25"},"nodeType":"YulIf","src":"9668:120:25"},{"nodeType":"YulBlock","src":"9798:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"9813:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"9827:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9817:6:25","type":""}]},{"nodeType":"YulAssignment","src":"9842:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9877:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"9888:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9873:3:25"},"nodeType":"YulFunctionCall","src":"9873:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9897:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9852:20:25"},"nodeType":"YulFunctionCall","src":"9852:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9842:6:25"}]}]},{"nodeType":"YulBlock","src":"9925:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"9940:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"9954:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9944:6:25","type":""}]},{"nodeType":"YulAssignment","src":"9970:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10005:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"10016:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10001:3:25"},"nodeType":"YulFunctionCall","src":"10001:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10025:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9980:20:25"},"nodeType":"YulFunctionCall","src":"9980:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9970:6:25"}]}]},{"nodeType":"YulBlock","src":"10053:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"10068:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"10082:2:25","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10072:6:25","type":""}]},{"nodeType":"YulAssignment","src":"10098:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10133:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"10144:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10129:3:25"},"nodeType":"YulFunctionCall","src":"10129:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10153:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10108:20:25"},"nodeType":"YulFunctionCall","src":"10108:53:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10098:6:25"}]}]},{"nodeType":"YulBlock","src":"10181:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"10196:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"10210:2:25","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10200:6:25","type":""}]},{"nodeType":"YulAssignment","src":"10226:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10261:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"10272:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10257:3:25"},"nodeType":"YulFunctionCall","src":"10257:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10281:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10236:20:25"},"nodeType":"YulFunctionCall","src":"10236:53:25"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10226:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9604:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9615:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9627:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9635:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9643:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9651:6:25","type":""}],"src":"9541:765:25"},{"body":{"nodeType":"YulBlock","src":"10401:478:25","statements":[{"body":{"nodeType":"YulBlock","src":"10450:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"10452:77:25"},"nodeType":"YulFunctionCall","src":"10452:79:25"},"nodeType":"YulExpressionStatement","src":"10452:79:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10429:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"10437:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10425:3:25"},"nodeType":"YulFunctionCall","src":"10425:17:25"},{"name":"end","nodeType":"YulIdentifier","src":"10444:3:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10421:3:25"},"nodeType":"YulFunctionCall","src":"10421:27:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10414:6:25"},"nodeType":"YulFunctionCall","src":"10414:35:25"},"nodeType":"YulIf","src":"10411:122:25"},{"nodeType":"YulAssignment","src":"10542:30:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10565:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10552:12:25"},"nodeType":"YulFunctionCall","src":"10552:20:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10542:6:25"}]},{"body":{"nodeType":"YulBlock","src":"10615:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"10617:77:25"},"nodeType":"YulFunctionCall","src":"10617:79:25"},"nodeType":"YulExpressionStatement","src":"10617:79:25"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10587:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"10595:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10584:2:25"},"nodeType":"YulFunctionCall","src":"10584:30:25"},"nodeType":"YulIf","src":"10581:117:25"},{"nodeType":"YulAssignment","src":"10707:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10723:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"10731:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10719:3:25"},"nodeType":"YulFunctionCall","src":"10719:17:25"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"10707:8:25"}]},{"body":{"nodeType":"YulBlock","src":"10790:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"10792:77:25"},"nodeType":"YulFunctionCall","src":"10792:79:25"},"nodeType":"YulExpressionStatement","src":"10792:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"10755:8:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10769:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"10777:4:25","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10765:3:25"},"nodeType":"YulFunctionCall","src":"10765:17:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10751:3:25"},"nodeType":"YulFunctionCall","src":"10751:32:25"},{"name":"end","nodeType":"YulIdentifier","src":"10785:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10748:2:25"},"nodeType":"YulFunctionCall","src":"10748:41:25"},"nodeType":"YulIf","src":"10745:128:25"}]},"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10368:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"10376:3:25","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"10384:8:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"10394:6:25","type":""}],"src":"10326:553:25"},{"body":{"nodeType":"YulBlock","src":"10971:443:25","statements":[{"body":{"nodeType":"YulBlock","src":"11017:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11019:77:25"},"nodeType":"YulFunctionCall","src":"11019:79:25"},"nodeType":"YulExpressionStatement","src":"11019:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10992:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"11001:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10988:3:25"},"nodeType":"YulFunctionCall","src":"10988:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"11013:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10984:3:25"},"nodeType":"YulFunctionCall","src":"10984:32:25"},"nodeType":"YulIf","src":"10981:119:25"},{"nodeType":"YulBlock","src":"11110:297:25","statements":[{"nodeType":"YulVariableDeclaration","src":"11125:45:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11156:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11167:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11152:3:25"},"nodeType":"YulFunctionCall","src":"11152:17:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11139:12:25"},"nodeType":"YulFunctionCall","src":"11139:31:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11129:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"11217:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"11219:77:25"},"nodeType":"YulFunctionCall","src":"11219:79:25"},"nodeType":"YulExpressionStatement","src":"11219:79:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11189:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"11197:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11186:2:25"},"nodeType":"YulFunctionCall","src":"11186:30:25"},"nodeType":"YulIf","src":"11183:117:25"},{"nodeType":"YulAssignment","src":"11314:83:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11369:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"11380:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11365:3:25"},"nodeType":"YulFunctionCall","src":"11365:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11389:7:25"}],"functionName":{"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulIdentifier","src":"11332:32:25"},"nodeType":"YulFunctionCall","src":"11332:65:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11314:6:25"},{"name":"value1","nodeType":"YulIdentifier","src":"11322:6:25"}]}]}]},"name":"abi_decode_tuple_t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10933:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10944:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10956:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10964:6:25","type":""}],"src":"10885:529:25"},{"body":{"nodeType":"YulBlock","src":"11460:76:25","statements":[{"body":{"nodeType":"YulBlock","src":"11514:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11523:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11526:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11516:6:25"},"nodeType":"YulFunctionCall","src":"11516:12:25"},"nodeType":"YulExpressionStatement","src":"11516:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11483:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11505:5:25"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"11490:14:25"},"nodeType":"YulFunctionCall","src":"11490:21:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11480:2:25"},"nodeType":"YulFunctionCall","src":"11480:32:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11473:6:25"},"nodeType":"YulFunctionCall","src":"11473:40:25"},"nodeType":"YulIf","src":"11470:60:25"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11453:5:25","type":""}],"src":"11420:116:25"},{"body":{"nodeType":"YulBlock","src":"11591:84:25","statements":[{"nodeType":"YulAssignment","src":"11601:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11623:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11610:12:25"},"nodeType":"YulFunctionCall","src":"11610:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11601:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11663:5:25"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"11639:23:25"},"nodeType":"YulFunctionCall","src":"11639:30:25"},"nodeType":"YulExpressionStatement","src":"11639:30:25"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11569:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"11577:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"11585:5:25","type":""}],"src":"11542:133:25"},{"body":{"nodeType":"YulBlock","src":"11761:388:25","statements":[{"body":{"nodeType":"YulBlock","src":"11807:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11809:77:25"},"nodeType":"YulFunctionCall","src":"11809:79:25"},"nodeType":"YulExpressionStatement","src":"11809:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11782:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"11791:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11778:3:25"},"nodeType":"YulFunctionCall","src":"11778:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"11803:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11774:3:25"},"nodeType":"YulFunctionCall","src":"11774:32:25"},"nodeType":"YulIf","src":"11771:119:25"},{"nodeType":"YulBlock","src":"11900:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"11915:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"11929:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11919:6:25","type":""}]},{"nodeType":"YulAssignment","src":"11944:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11979:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"11990:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11975:3:25"},"nodeType":"YulFunctionCall","src":"11975:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11999:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11954:20:25"},"nodeType":"YulFunctionCall","src":"11954:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11944:6:25"}]}]},{"nodeType":"YulBlock","src":"12027:115:25","statements":[{"nodeType":"YulVariableDeclaration","src":"12042:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"12056:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12046:6:25","type":""}]},{"nodeType":"YulAssignment","src":"12072:60:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12104:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"12115:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12100:3:25"},"nodeType":"YulFunctionCall","src":"12100:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12124:7:25"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"12082:17:25"},"nodeType":"YulFunctionCall","src":"12082:50:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12072:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11723:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11734:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11746:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11754:6:25","type":""}],"src":"11681:468:25"},{"body":{"nodeType":"YulBlock","src":"12187:28:25","statements":[{"nodeType":"YulAssignment","src":"12197:12:25","value":{"name":"value","nodeType":"YulIdentifier","src":"12204:5:25"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12197:3:25"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12173:5:25","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"12183:3:25","type":""}],"src":"12155:60:25"},{"body":{"nodeType":"YulBlock","src":"12281:82:25","statements":[{"nodeType":"YulAssignment","src":"12291:66:25","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12349:5:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"12331:17:25"},"nodeType":"YulFunctionCall","src":"12331:24:25"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"12322:8:25"},"nodeType":"YulFunctionCall","src":"12322:34:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"12304:17:25"},"nodeType":"YulFunctionCall","src":"12304:53:25"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"12291:9:25"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12261:5:25","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"12271:9:25","type":""}],"src":"12221:142:25"},{"body":{"nodeType":"YulBlock","src":"12429:66:25","statements":[{"nodeType":"YulAssignment","src":"12439:50:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12483:5:25"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"12452:30:25"},"nodeType":"YulFunctionCall","src":"12452:37:25"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"12439:9:25"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12409:5:25","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"12419:9:25","type":""}],"src":"12369:126:25"},{"body":{"nodeType":"YulBlock","src":"12575:66:25","statements":[{"nodeType":"YulAssignment","src":"12585:50:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12629:5:25"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"12598:30:25"},"nodeType":"YulFunctionCall","src":"12598:37:25"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"12585:9:25"}]}]},"name":"convert_t_contract$_IERC20_$480_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12555:5:25","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"12565:9:25","type":""}],"src":"12501:140:25"},{"body":{"nodeType":"YulBlock","src":"12726:80:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12743:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12793:5:25"}],"functionName":{"name":"convert_t_contract$_IERC20_$480_to_t_address","nodeType":"YulIdentifier","src":"12748:44:25"},"nodeType":"YulFunctionCall","src":"12748:51:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12736:6:25"},"nodeType":"YulFunctionCall","src":"12736:64:25"},"nodeType":"YulExpressionStatement","src":"12736:64:25"}]},"name":"abi_encode_t_contract$_IERC20_$480_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12714:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12721:3:25","type":""}],"src":"12647:159:25"},{"body":{"nodeType":"YulBlock","src":"12924:138:25","statements":[{"nodeType":"YulAssignment","src":"12934:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12946:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12957:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12942:3:25"},"nodeType":"YulFunctionCall","src":"12942:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12934:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13028:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13041:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"13052:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13037:3:25"},"nodeType":"YulFunctionCall","src":"13037:17:25"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$480_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12970:57:25"},"nodeType":"YulFunctionCall","src":"12970:85:25"},"nodeType":"YulExpressionStatement","src":"12970:85:25"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$480__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12896:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12908:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12919:4:25","type":""}],"src":"12812:250:25"},{"body":{"nodeType":"YulBlock","src":"13157:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13174:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13177:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13167:6:25"},"nodeType":"YulFunctionCall","src":"13167:12:25"},"nodeType":"YulExpressionStatement","src":"13167:12:25"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"13068:117:25"},{"body":{"nodeType":"YulBlock","src":"13219:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13236:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13239:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13229:6:25"},"nodeType":"YulFunctionCall","src":"13229:88:25"},"nodeType":"YulExpressionStatement","src":"13229:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13333:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13336:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13326:6:25"},"nodeType":"YulFunctionCall","src":"13326:15:25"},"nodeType":"YulExpressionStatement","src":"13326:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13357:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13360:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13350:6:25"},"nodeType":"YulFunctionCall","src":"13350:15:25"},"nodeType":"YulExpressionStatement","src":"13350:15:25"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"13191:180:25"},{"body":{"nodeType":"YulBlock","src":"13420:238:25","statements":[{"nodeType":"YulVariableDeclaration","src":"13430:58:25","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13452:6:25"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"13482:4:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"13460:21:25"},"nodeType":"YulFunctionCall","src":"13460:27:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13448:3:25"},"nodeType":"YulFunctionCall","src":"13448:40:25"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"13434:10:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"13599:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"13601:16:25"},"nodeType":"YulFunctionCall","src":"13601:18:25"},"nodeType":"YulExpressionStatement","src":"13601:18:25"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"13542:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"13554:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13539:2:25"},"nodeType":"YulFunctionCall","src":"13539:34:25"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"13578:10:25"},{"name":"memPtr","nodeType":"YulIdentifier","src":"13590:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13575:2:25"},"nodeType":"YulFunctionCall","src":"13575:22:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"13536:2:25"},"nodeType":"YulFunctionCall","src":"13536:62:25"},"nodeType":"YulIf","src":"13533:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13637:2:25","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"13641:10:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13630:6:25"},"nodeType":"YulFunctionCall","src":"13630:22:25"},"nodeType":"YulExpressionStatement","src":"13630:22:25"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13406:6:25","type":""},{"name":"size","nodeType":"YulTypedName","src":"13414:4:25","type":""}],"src":"13377:281:25"},{"body":{"nodeType":"YulBlock","src":"13705:88:25","statements":[{"nodeType":"YulAssignment","src":"13715:30:25","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"13725:18:25"},"nodeType":"YulFunctionCall","src":"13725:20:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13715:6:25"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13774:6:25"},{"name":"size","nodeType":"YulIdentifier","src":"13782:4:25"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"13754:19:25"},"nodeType":"YulFunctionCall","src":"13754:33:25"},"nodeType":"YulExpressionStatement","src":"13754:33:25"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"13689:4:25","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"13698:6:25","type":""}],"src":"13664:129:25"},{"body":{"nodeType":"YulBlock","src":"13865:241:25","statements":[{"body":{"nodeType":"YulBlock","src":"13970:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"13972:16:25"},"nodeType":"YulFunctionCall","src":"13972:18:25"},"nodeType":"YulExpressionStatement","src":"13972:18:25"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13942:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"13950:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13939:2:25"},"nodeType":"YulFunctionCall","src":"13939:30:25"},"nodeType":"YulIf","src":"13936:56:25"},{"nodeType":"YulAssignment","src":"14002:37:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14032:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"14010:21:25"},"nodeType":"YulFunctionCall","src":"14010:29:25"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"14002:4:25"}]},{"nodeType":"YulAssignment","src":"14076:23:25","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"14088:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"14094:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14084:3:25"},"nodeType":"YulFunctionCall","src":"14084:15:25"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"14076:4:25"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"13849:6:25","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"13860:4:25","type":""}],"src":"13799:307:25"},{"body":{"nodeType":"YulBlock","src":"14176:82:25","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"14199:3:25"},{"name":"src","nodeType":"YulIdentifier","src":"14204:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"14209:6:25"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"14186:12:25"},"nodeType":"YulFunctionCall","src":"14186:30:25"},"nodeType":"YulExpressionStatement","src":"14186:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"14236:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"14241:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14232:3:25"},"nodeType":"YulFunctionCall","src":"14232:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"14250:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14225:6:25"},"nodeType":"YulFunctionCall","src":"14225:27:25"},"nodeType":"YulExpressionStatement","src":"14225:27:25"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"14158:3:25","type":""},{"name":"dst","nodeType":"YulTypedName","src":"14163:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"14168:6:25","type":""}],"src":"14112:146:25"},{"body":{"nodeType":"YulBlock","src":"14347:340:25","statements":[{"nodeType":"YulAssignment","src":"14357:74:25","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14423:6:25"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"14382:40:25"},"nodeType":"YulFunctionCall","src":"14382:48:25"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"14366:15:25"},"nodeType":"YulFunctionCall","src":"14366:65:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"14357:5:25"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"14447:5:25"},{"name":"length","nodeType":"YulIdentifier","src":"14454:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14440:6:25"},"nodeType":"YulFunctionCall","src":"14440:21:25"},"nodeType":"YulExpressionStatement","src":"14440:21:25"},{"nodeType":"YulVariableDeclaration","src":"14470:27:25","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"14485:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"14492:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14481:3:25"},"nodeType":"YulFunctionCall","src":"14481:16:25"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"14474:3:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"14535:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"14537:77:25"},"nodeType":"YulFunctionCall","src":"14537:79:25"},"nodeType":"YulExpressionStatement","src":"14537:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14516:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"14521:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14512:3:25"},"nodeType":"YulFunctionCall","src":"14512:16:25"},{"name":"end","nodeType":"YulIdentifier","src":"14530:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14509:2:25"},"nodeType":"YulFunctionCall","src":"14509:25:25"},"nodeType":"YulIf","src":"14506:112:25"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14664:3:25"},{"name":"dst","nodeType":"YulIdentifier","src":"14669:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"14674:6:25"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"14627:36:25"},"nodeType":"YulFunctionCall","src":"14627:54:25"},"nodeType":"YulExpressionStatement","src":"14627:54:25"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"14320:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"14325:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"14333:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"14341:5:25","type":""}],"src":"14264:423:25"},{"body":{"nodeType":"YulBlock","src":"14767:277:25","statements":[{"body":{"nodeType":"YulBlock","src":"14816:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"14818:77:25"},"nodeType":"YulFunctionCall","src":"14818:79:25"},"nodeType":"YulExpressionStatement","src":"14818:79:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14795:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"14803:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14791:3:25"},"nodeType":"YulFunctionCall","src":"14791:17:25"},{"name":"end","nodeType":"YulIdentifier","src":"14810:3:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14787:3:25"},"nodeType":"YulFunctionCall","src":"14787:27:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14780:6:25"},"nodeType":"YulFunctionCall","src":"14780:35:25"},"nodeType":"YulIf","src":"14777:122:25"},{"nodeType":"YulVariableDeclaration","src":"14908:34:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14935:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14922:12:25"},"nodeType":"YulFunctionCall","src":"14922:20:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14912:6:25","type":""}]},{"nodeType":"YulAssignment","src":"14951:87:25","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15011:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"15019:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15007:3:25"},"nodeType":"YulFunctionCall","src":"15007:17:25"},{"name":"length","nodeType":"YulIdentifier","src":"15026:6:25"},{"name":"end","nodeType":"YulIdentifier","src":"15034:3:25"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"14960:46:25"},"nodeType":"YulFunctionCall","src":"14960:78:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"14951:5:25"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14745:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"14753:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"14761:5:25","type":""}],"src":"14706:338:25"},{"body":{"nodeType":"YulBlock","src":"15176:817:25","statements":[{"body":{"nodeType":"YulBlock","src":"15223:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15225:77:25"},"nodeType":"YulFunctionCall","src":"15225:79:25"},"nodeType":"YulExpressionStatement","src":"15225:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15197:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"15206:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15193:3:25"},"nodeType":"YulFunctionCall","src":"15193:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"15218:3:25","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15189:3:25"},"nodeType":"YulFunctionCall","src":"15189:33:25"},"nodeType":"YulIf","src":"15186:120:25"},{"nodeType":"YulBlock","src":"15316:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"15331:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"15345:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15335:6:25","type":""}]},{"nodeType":"YulAssignment","src":"15360:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15395:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"15406:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15391:3:25"},"nodeType":"YulFunctionCall","src":"15391:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15415:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15370:20:25"},"nodeType":"YulFunctionCall","src":"15370:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15360:6:25"}]}]},{"nodeType":"YulBlock","src":"15443:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"15458:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"15472:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15462:6:25","type":""}]},{"nodeType":"YulAssignment","src":"15488:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15523:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"15534:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15519:3:25"},"nodeType":"YulFunctionCall","src":"15519:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15543:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15498:20:25"},"nodeType":"YulFunctionCall","src":"15498:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15488:6:25"}]}]},{"nodeType":"YulBlock","src":"15571:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"15586:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"15600:2:25","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15590:6:25","type":""}]},{"nodeType":"YulAssignment","src":"15616:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15651:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"15662:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15647:3:25"},"nodeType":"YulFunctionCall","src":"15647:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15671:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"15626:20:25"},"nodeType":"YulFunctionCall","src":"15626:53:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"15616:6:25"}]}]},{"nodeType":"YulBlock","src":"15699:287:25","statements":[{"nodeType":"YulVariableDeclaration","src":"15714:46:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15745:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"15756:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15741:3:25"},"nodeType":"YulFunctionCall","src":"15741:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15728:12:25"},"nodeType":"YulFunctionCall","src":"15728:32:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15718:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"15807:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"15809:77:25"},"nodeType":"YulFunctionCall","src":"15809:79:25"},"nodeType":"YulExpressionStatement","src":"15809:79:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15779:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"15787:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15776:2:25"},"nodeType":"YulFunctionCall","src":"15776:30:25"},"nodeType":"YulIf","src":"15773:117:25"},{"nodeType":"YulAssignment","src":"15904:72:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15948:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"15959:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15944:3:25"},"nodeType":"YulFunctionCall","src":"15944:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15968:7:25"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"15914:29:25"},"nodeType":"YulFunctionCall","src":"15914:62:25"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"15904:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15122:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15133:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15145:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15153:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15161:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15169:6:25","type":""}],"src":"15050:943:25"},{"body":{"nodeType":"YulBlock","src":"16082:391:25","statements":[{"body":{"nodeType":"YulBlock","src":"16128:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"16130:77:25"},"nodeType":"YulFunctionCall","src":"16130:79:25"},"nodeType":"YulExpressionStatement","src":"16130:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16103:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"16112:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16099:3:25"},"nodeType":"YulFunctionCall","src":"16099:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"16124:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16095:3:25"},"nodeType":"YulFunctionCall","src":"16095:32:25"},"nodeType":"YulIf","src":"16092:119:25"},{"nodeType":"YulBlock","src":"16221:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"16236:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"16250:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16240:6:25","type":""}]},{"nodeType":"YulAssignment","src":"16265:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16300:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"16311:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16296:3:25"},"nodeType":"YulFunctionCall","src":"16296:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16320:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"16275:20:25"},"nodeType":"YulFunctionCall","src":"16275:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16265:6:25"}]}]},{"nodeType":"YulBlock","src":"16348:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"16363:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"16377:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16367:6:25","type":""}]},{"nodeType":"YulAssignment","src":"16393:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16428:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"16439:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16424:3:25"},"nodeType":"YulFunctionCall","src":"16424:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16448:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"16403:20:25"},"nodeType":"YulFunctionCall","src":"16403:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"16393:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16044:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16055:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16067:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16075:6:25","type":""}],"src":"15999:474:25"},{"body":{"nodeType":"YulBlock","src":"16507:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16524:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16527:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16517:6:25"},"nodeType":"YulFunctionCall","src":"16517:88:25"},"nodeType":"YulExpressionStatement","src":"16517:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16621:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16624:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16614:6:25"},"nodeType":"YulFunctionCall","src":"16614:15:25"},"nodeType":"YulExpressionStatement","src":"16614:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16645:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16648:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16638:6:25"},"nodeType":"YulFunctionCall","src":"16638:15:25"},"nodeType":"YulExpressionStatement","src":"16638:15:25"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"16479:180:25"},{"body":{"nodeType":"YulBlock","src":"16716:269:25","statements":[{"nodeType":"YulAssignment","src":"16726:22:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"16740:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"16746:1:25","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16736:3:25"},"nodeType":"YulFunctionCall","src":"16736:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16726:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"16757:38:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"16787:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"16793:1:25","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16783:3:25"},"nodeType":"YulFunctionCall","src":"16783:12:25"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"16761:18:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"16834:51:25","statements":[{"nodeType":"YulAssignment","src":"16848:27:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16862:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"16870:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16858:3:25"},"nodeType":"YulFunctionCall","src":"16858:17:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16848:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"16814:18:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16807:6:25"},"nodeType":"YulFunctionCall","src":"16807:26:25"},"nodeType":"YulIf","src":"16804:81:25"},{"body":{"nodeType":"YulBlock","src":"16937:42:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"16951:16:25"},"nodeType":"YulFunctionCall","src":"16951:18:25"},"nodeType":"YulExpressionStatement","src":"16951:18:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"16901:18:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16924:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"16932:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16921:2:25"},"nodeType":"YulFunctionCall","src":"16921:14:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16898:2:25"},"nodeType":"YulFunctionCall","src":"16898:38:25"},"nodeType":"YulIf","src":"16895:84:25"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"16700:4:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"16709:6:25","type":""}],"src":"16665:320:25"},{"body":{"nodeType":"YulBlock","src":"17097:68:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17119:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"17127:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17115:3:25"},"nodeType":"YulFunctionCall","src":"17115:14:25"},{"hexValue":"4d69736d617463686564206172726179206c656e67746873","kind":"string","nodeType":"YulLiteral","src":"17131:26:25","type":"","value":"Mismatched array lengths"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17108:6:25"},"nodeType":"YulFunctionCall","src":"17108:50:25"},"nodeType":"YulExpressionStatement","src":"17108:50:25"}]},"name":"store_literal_in_memory_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17089:6:25","type":""}],"src":"16991:174:25"},{"body":{"nodeType":"YulBlock","src":"17317:220:25","statements":[{"nodeType":"YulAssignment","src":"17327:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17393:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"17398:2:25","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17334:58:25"},"nodeType":"YulFunctionCall","src":"17334:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17327:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17499:3:25"}],"functionName":{"name":"store_literal_in_memory_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085","nodeType":"YulIdentifier","src":"17410:88:25"},"nodeType":"YulFunctionCall","src":"17410:93:25"},"nodeType":"YulExpressionStatement","src":"17410:93:25"},{"nodeType":"YulAssignment","src":"17512:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17523:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"17528:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17519:3:25"},"nodeType":"YulFunctionCall","src":"17519:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17512:3:25"}]}]},"name":"abi_encode_t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17305:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17313:3:25","type":""}],"src":"17171:366:25"},{"body":{"nodeType":"YulBlock","src":"17714:248:25","statements":[{"nodeType":"YulAssignment","src":"17724:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17736:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"17747:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17732:3:25"},"nodeType":"YulFunctionCall","src":"17732:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17724:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17771:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"17782:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17767:3:25"},"nodeType":"YulFunctionCall","src":"17767:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17790:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"17796:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17786:3:25"},"nodeType":"YulFunctionCall","src":"17786:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17760:6:25"},"nodeType":"YulFunctionCall","src":"17760:47:25"},"nodeType":"YulExpressionStatement","src":"17760:47:25"},{"nodeType":"YulAssignment","src":"17816:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17950:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17824:124:25"},"nodeType":"YulFunctionCall","src":"17824:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17816:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17694:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17709:4:25","type":""}],"src":"17543:419:25"},{"body":{"nodeType":"YulBlock","src":"17996:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18013:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18016:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18006:6:25"},"nodeType":"YulFunctionCall","src":"18006:88:25"},"nodeType":"YulExpressionStatement","src":"18006:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18110:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18113:4:25","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18103:6:25"},"nodeType":"YulFunctionCall","src":"18103:15:25"},"nodeType":"YulExpressionStatement","src":"18103:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18134:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18127:6:25"},"nodeType":"YulFunctionCall","src":"18127:15:25"},"nodeType":"YulExpressionStatement","src":"18127:15:25"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"17968:180:25"},{"body":{"nodeType":"YulBlock","src":"18182:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18199:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18202:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18192:6:25"},"nodeType":"YulFunctionCall","src":"18192:88:25"},"nodeType":"YulExpressionStatement","src":"18192:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18296:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18299:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18289:6:25"},"nodeType":"YulFunctionCall","src":"18289:15:25"},"nodeType":"YulExpressionStatement","src":"18289:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18320:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18323:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18313:6:25"},"nodeType":"YulFunctionCall","src":"18313:15:25"},"nodeType":"YulExpressionStatement","src":"18313:15:25"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"18154:180:25"},{"body":{"nodeType":"YulBlock","src":"18384:147:25","statements":[{"nodeType":"YulAssignment","src":"18394:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18417:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18399:17:25"},"nodeType":"YulFunctionCall","src":"18399:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"18394:1:25"}]},{"nodeType":"YulAssignment","src":"18428:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18451:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18433:17:25"},"nodeType":"YulFunctionCall","src":"18433:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"18428:1:25"}]},{"nodeType":"YulAssignment","src":"18462:16:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18473:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"18476:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18469:3:25"},"nodeType":"YulFunctionCall","src":"18469:9:25"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"18462:3:25"}]},{"body":{"nodeType":"YulBlock","src":"18502:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18504:16:25"},"nodeType":"YulFunctionCall","src":"18504:18:25"},"nodeType":"YulExpressionStatement","src":"18504:18:25"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18494:1:25"},{"name":"sum","nodeType":"YulIdentifier","src":"18497:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18491:2:25"},"nodeType":"YulFunctionCall","src":"18491:10:25"},"nodeType":"YulIf","src":"18488:36:25"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18371:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"18374:1:25","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"18380:3:25","type":""}],"src":"18340:191:25"},{"body":{"nodeType":"YulBlock","src":"18580:190:25","statements":[{"nodeType":"YulAssignment","src":"18590:33:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18617:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18599:17:25"},"nodeType":"YulFunctionCall","src":"18599:24:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"18590:5:25"}]},{"body":{"nodeType":"YulBlock","src":"18713:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18715:16:25"},"nodeType":"YulFunctionCall","src":"18715:18:25"},"nodeType":"YulExpressionStatement","src":"18715:18:25"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18638:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"18645:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18635:2:25"},"nodeType":"YulFunctionCall","src":"18635:77:25"},"nodeType":"YulIf","src":"18632:103:25"},{"nodeType":"YulAssignment","src":"18744:20:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18755:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"18762:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18751:3:25"},"nodeType":"YulFunctionCall","src":"18751:13:25"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"18744:3:25"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18566:5:25","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"18576:3:25","type":""}],"src":"18537:233:25"},{"body":{"nodeType":"YulBlock","src":"18839:80:25","statements":[{"nodeType":"YulAssignment","src":"18849:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18864:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18858:5:25"},"nodeType":"YulFunctionCall","src":"18858:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"18849:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18907:5:25"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"18880:26:25"},"nodeType":"YulFunctionCall","src":"18880:33:25"},"nodeType":"YulExpressionStatement","src":"18880:33:25"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"18817:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"18825:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"18833:5:25","type":""}],"src":"18776:143:25"},{"body":{"nodeType":"YulBlock","src":"19002:274:25","statements":[{"body":{"nodeType":"YulBlock","src":"19048:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19050:77:25"},"nodeType":"YulFunctionCall","src":"19050:79:25"},"nodeType":"YulExpressionStatement","src":"19050:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19023:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"19032:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19019:3:25"},"nodeType":"YulFunctionCall","src":"19019:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"19044:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19015:3:25"},"nodeType":"YulFunctionCall","src":"19015:32:25"},"nodeType":"YulIf","src":"19012:119:25"},{"nodeType":"YulBlock","src":"19141:128:25","statements":[{"nodeType":"YulVariableDeclaration","src":"19156:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"19170:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19160:6:25","type":""}]},{"nodeType":"YulAssignment","src":"19185:74:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19231:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"19242:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19227:3:25"},"nodeType":"YulFunctionCall","src":"19227:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19251:7:25"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"19195:31:25"},"nodeType":"YulFunctionCall","src":"19195:64:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19185:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18972:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18983:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18995:6:25","type":""}],"src":"18925:351:25"},{"body":{"nodeType":"YulBlock","src":"19388:76:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19410:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"19418:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19406:3:25"},"nodeType":"YulFunctionCall","src":"19406:14:25"},{"hexValue":"496e73756666696369656e742062616c616e636520666f722072657761726473","kind":"string","nodeType":"YulLiteral","src":"19422:34:25","type":"","value":"Insufficient balance for rewards"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19399:6:25"},"nodeType":"YulFunctionCall","src":"19399:58:25"},"nodeType":"YulExpressionStatement","src":"19399:58:25"}]},"name":"store_literal_in_memory_a11bbde2fe764af74e1d4459d264f972380a8fc71ad8f10b8306caf307e5d50a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19380:6:25","type":""}],"src":"19282:182:25"},{"body":{"nodeType":"YulBlock","src":"19616:220:25","statements":[{"nodeType":"YulAssignment","src":"19626:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19692:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"19697:2:25","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19633:58:25"},"nodeType":"YulFunctionCall","src":"19633:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19626:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19798:3:25"}],"functionName":{"name":"store_literal_in_memory_a11bbde2fe764af74e1d4459d264f972380a8fc71ad8f10b8306caf307e5d50a","nodeType":"YulIdentifier","src":"19709:88:25"},"nodeType":"YulFunctionCall","src":"19709:93:25"},"nodeType":"YulExpressionStatement","src":"19709:93:25"},{"nodeType":"YulAssignment","src":"19811:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19822:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"19827:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19818:3:25"},"nodeType":"YulFunctionCall","src":"19818:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19811:3:25"}]}]},"name":"abi_encode_t_stringliteral_a11bbde2fe764af74e1d4459d264f972380a8fc71ad8f10b8306caf307e5d50a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19604:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19612:3:25","type":""}],"src":"19470:366:25"},{"body":{"nodeType":"YulBlock","src":"20013:248:25","statements":[{"nodeType":"YulAssignment","src":"20023:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20035:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"20046:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20031:3:25"},"nodeType":"YulFunctionCall","src":"20031:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20023:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20070:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"20081:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20066:3:25"},"nodeType":"YulFunctionCall","src":"20066:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20089:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"20095:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20085:3:25"},"nodeType":"YulFunctionCall","src":"20085:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20059:6:25"},"nodeType":"YulFunctionCall","src":"20059:47:25"},"nodeType":"YulExpressionStatement","src":"20059:47:25"},{"nodeType":"YulAssignment","src":"20115:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20249:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_a11bbde2fe764af74e1d4459d264f972380a8fc71ad8f10b8306caf307e5d50a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20123:124:25"},"nodeType":"YulFunctionCall","src":"20123:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20115:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_a11bbde2fe764af74e1d4459d264f972380a8fc71ad8f10b8306caf307e5d50a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19993:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20008:4:25","type":""}],"src":"19842:419:25"},{"body":{"nodeType":"YulBlock","src":"20421:288:25","statements":[{"nodeType":"YulAssignment","src":"20431:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20443:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"20454:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20439:3:25"},"nodeType":"YulFunctionCall","src":"20439:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20431:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20511:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20524:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"20535:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20520:3:25"},"nodeType":"YulFunctionCall","src":"20520:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"20467:43:25"},"nodeType":"YulFunctionCall","src":"20467:71:25"},"nodeType":"YulExpressionStatement","src":"20467:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20592:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20605:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"20616:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20601:3:25"},"nodeType":"YulFunctionCall","src":"20601:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20548:43:25"},"nodeType":"YulFunctionCall","src":"20548:72:25"},"nodeType":"YulExpressionStatement","src":"20548:72:25"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"20674:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20687:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"20698:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20683:3:25"},"nodeType":"YulFunctionCall","src":"20683:18:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"20630:43:25"},"nodeType":"YulFunctionCall","src":"20630:72:25"},"nodeType":"YulExpressionStatement","src":"20630:72:25"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20377:9:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20389:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20397:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20405:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20416:4:25","type":""}],"src":"20267:442:25"},{"body":{"nodeType":"YulBlock","src":"20821:116:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20843:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"20851:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20839:3:25"},"nodeType":"YulFunctionCall","src":"20839:14:25"},{"hexValue":"4f6e6c792047616c6163746963204720726f6c65206f776e65727320616c6c6f","kind":"string","nodeType":"YulLiteral","src":"20855:34:25","type":"","value":"Only Galactic G role owners allo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20832:6:25"},"nodeType":"YulFunctionCall","src":"20832:58:25"},"nodeType":"YulExpressionStatement","src":"20832:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20911:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"20919:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20907:3:25"},"nodeType":"YulFunctionCall","src":"20907:15:25"},{"hexValue":"776564","kind":"string","nodeType":"YulLiteral","src":"20924:5:25","type":"","value":"wed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20900:6:25"},"nodeType":"YulFunctionCall","src":"20900:30:25"},"nodeType":"YulExpressionStatement","src":"20900:30:25"}]},"name":"store_literal_in_memory_53a04e33854b42e7e6aa2cc3ebfba2d4fe5e3493a53cdce37f5154aefb6af936","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20813:6:25","type":""}],"src":"20715:222:25"},{"body":{"nodeType":"YulBlock","src":"21089:220:25","statements":[{"nodeType":"YulAssignment","src":"21099:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21165:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"21170:2:25","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21106:58:25"},"nodeType":"YulFunctionCall","src":"21106:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21099:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21271:3:25"}],"functionName":{"name":"store_literal_in_memory_53a04e33854b42e7e6aa2cc3ebfba2d4fe5e3493a53cdce37f5154aefb6af936","nodeType":"YulIdentifier","src":"21182:88:25"},"nodeType":"YulFunctionCall","src":"21182:93:25"},"nodeType":"YulExpressionStatement","src":"21182:93:25"},{"nodeType":"YulAssignment","src":"21284:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21295:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"21300:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21291:3:25"},"nodeType":"YulFunctionCall","src":"21291:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21284:3:25"}]}]},"name":"abi_encode_t_stringliteral_53a04e33854b42e7e6aa2cc3ebfba2d4fe5e3493a53cdce37f5154aefb6af936_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21077:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21085:3:25","type":""}],"src":"20943:366:25"},{"body":{"nodeType":"YulBlock","src":"21486:248:25","statements":[{"nodeType":"YulAssignment","src":"21496:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21508:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"21519:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21504:3:25"},"nodeType":"YulFunctionCall","src":"21504:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21496:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21543:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"21554:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21539:3:25"},"nodeType":"YulFunctionCall","src":"21539:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21562:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"21568:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21558:3:25"},"nodeType":"YulFunctionCall","src":"21558:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21532:6:25"},"nodeType":"YulFunctionCall","src":"21532:47:25"},"nodeType":"YulExpressionStatement","src":"21532:47:25"},{"nodeType":"YulAssignment","src":"21588:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21722:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_53a04e33854b42e7e6aa2cc3ebfba2d4fe5e3493a53cdce37f5154aefb6af936_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21596:124:25"},"nodeType":"YulFunctionCall","src":"21596:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21588:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_53a04e33854b42e7e6aa2cc3ebfba2d4fe5e3493a53cdce37f5154aefb6af936__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21466:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21481:4:25","type":""}],"src":"21315:419:25"},{"body":{"nodeType":"YulBlock","src":"21794:87:25","statements":[{"nodeType":"YulAssignment","src":"21804:11:25","value":{"name":"ptr","nodeType":"YulIdentifier","src":"21812:3:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"21804:4:25"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21832:1:25","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"21835:3:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21825:6:25"},"nodeType":"YulFunctionCall","src":"21825:14:25"},"nodeType":"YulExpressionStatement","src":"21825:14:25"},{"nodeType":"YulAssignment","src":"21848:26:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21866:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21869:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"21856:9:25"},"nodeType":"YulFunctionCall","src":"21856:18:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"21848:4:25"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"21781:3:25","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"21789:4:25","type":""}],"src":"21740:141:25"},{"body":{"nodeType":"YulBlock","src":"21931:49:25","statements":[{"nodeType":"YulAssignment","src":"21941:33:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21959:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"21966:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21955:3:25"},"nodeType":"YulFunctionCall","src":"21955:14:25"},{"kind":"number","nodeType":"YulLiteral","src":"21971:2:25","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"21951:3:25"},"nodeType":"YulFunctionCall","src":"21951:23:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"21941:6:25"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21914:5:25","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"21924:6:25","type":""}],"src":"21887:93:25"},{"body":{"nodeType":"YulBlock","src":"22039:54:25","statements":[{"nodeType":"YulAssignment","src":"22049:37:25","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"22074:4:25"},{"name":"value","nodeType":"YulIdentifier","src":"22080:5:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22070:3:25"},"nodeType":"YulFunctionCall","src":"22070:16:25"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"22049:8:25"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"22014:4:25","type":""},{"name":"value","nodeType":"YulTypedName","src":"22020:5:25","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"22030:8:25","type":""}],"src":"21986:107:25"},{"body":{"nodeType":"YulBlock","src":"22175:317:25","statements":[{"nodeType":"YulVariableDeclaration","src":"22185:35:25","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"22206:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"22218:1:25","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"22202:3:25"},"nodeType":"YulFunctionCall","src":"22202:18:25"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"22189:9:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22229:109:25","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"22260:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"22271:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"22241:18:25"},"nodeType":"YulFunctionCall","src":"22241:97:25"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"22233:4:25","type":""}]},{"nodeType":"YulAssignment","src":"22347:51:25","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"22378:9:25"},{"name":"toInsert","nodeType":"YulIdentifier","src":"22389:8:25"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"22359:18:25"},"nodeType":"YulFunctionCall","src":"22359:39:25"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"22347:8:25"}]},{"nodeType":"YulAssignment","src":"22407:30:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22420:5:25"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"22431:4:25"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22427:3:25"},"nodeType":"YulFunctionCall","src":"22427:9:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22416:3:25"},"nodeType":"YulFunctionCall","src":"22416:21:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22407:5:25"}]},{"nodeType":"YulAssignment","src":"22446:40:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22459:5:25"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"22470:8:25"},{"name":"mask","nodeType":"YulIdentifier","src":"22480:4:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22466:3:25"},"nodeType":"YulFunctionCall","src":"22466:19:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"22456:2:25"},"nodeType":"YulFunctionCall","src":"22456:30:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"22446:6:25"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22136:5:25","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"22143:10:25","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"22155:8:25","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"22168:6:25","type":""}],"src":"22099:393:25"},{"body":{"nodeType":"YulBlock","src":"22558:82:25","statements":[{"nodeType":"YulAssignment","src":"22568:66:25","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22626:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22608:17:25"},"nodeType":"YulFunctionCall","src":"22608:24:25"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"22599:8:25"},"nodeType":"YulFunctionCall","src":"22599:34:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22581:17:25"},"nodeType":"YulFunctionCall","src":"22581:53:25"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"22568:9:25"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22538:5:25","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"22548:9:25","type":""}],"src":"22498:142:25"},{"body":{"nodeType":"YulBlock","src":"22693:28:25","statements":[{"nodeType":"YulAssignment","src":"22703:12:25","value":{"name":"value","nodeType":"YulIdentifier","src":"22710:5:25"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"22703:3:25"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22679:5:25","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"22689:3:25","type":""}],"src":"22646:75:25"},{"body":{"nodeType":"YulBlock","src":"22803:193:25","statements":[{"nodeType":"YulVariableDeclaration","src":"22813:63:25","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"22868:7:25"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"22837:30:25"},"nodeType":"YulFunctionCall","src":"22837:39:25"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"22817:16:25","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22892:4:25"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22932:4:25"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"22926:5:25"},"nodeType":"YulFunctionCall","src":"22926:11:25"},{"name":"offset","nodeType":"YulIdentifier","src":"22939:6:25"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"22971:16:25"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"22947:23:25"},"nodeType":"YulFunctionCall","src":"22947:41:25"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"22898:27:25"},"nodeType":"YulFunctionCall","src":"22898:91:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"22885:6:25"},"nodeType":"YulFunctionCall","src":"22885:105:25"},"nodeType":"YulExpressionStatement","src":"22885:105:25"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"22780:4:25","type":""},{"name":"offset","nodeType":"YulTypedName","src":"22786:6:25","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"22794:7:25","type":""}],"src":"22727:269:25"},{"body":{"nodeType":"YulBlock","src":"23051:24:25","statements":[{"nodeType":"YulAssignment","src":"23061:8:25","value":{"kind":"number","nodeType":"YulLiteral","src":"23068:1:25","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"23061:3:25"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"23047:3:25","type":""}],"src":"23002:73:25"},{"body":{"nodeType":"YulBlock","src":"23134:136:25","statements":[{"nodeType":"YulVariableDeclaration","src":"23144:46:25","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"23158:30:25"},"nodeType":"YulFunctionCall","src":"23158:32:25"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"23148:6:25","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"23243:4:25"},{"name":"offset","nodeType":"YulIdentifier","src":"23249:6:25"},{"name":"zero_0","nodeType":"YulIdentifier","src":"23257:6:25"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"23199:43:25"},"nodeType":"YulFunctionCall","src":"23199:65:25"},"nodeType":"YulExpressionStatement","src":"23199:65:25"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"23120:4:25","type":""},{"name":"offset","nodeType":"YulTypedName","src":"23126:6:25","type":""}],"src":"23081:189:25"},{"body":{"nodeType":"YulBlock","src":"23326:136:25","statements":[{"body":{"nodeType":"YulBlock","src":"23393:63:25","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"23437:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"23444:1:25","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"23407:29:25"},"nodeType":"YulFunctionCall","src":"23407:39:25"},"nodeType":"YulExpressionStatement","src":"23407:39:25"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"23346:5:25"},{"name":"end","nodeType":"YulIdentifier","src":"23353:3:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23343:2:25"},"nodeType":"YulFunctionCall","src":"23343:14:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"23358:26:25","statements":[{"nodeType":"YulAssignment","src":"23360:22:25","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"23373:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"23380:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23369:3:25"},"nodeType":"YulFunctionCall","src":"23369:13:25"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"23360:5:25"}]}]},"pre":{"nodeType":"YulBlock","src":"23340:2:25","statements":[]},"src":"23336:120:25"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"23314:5:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"23321:3:25","type":""}],"src":"23276:186:25"},{"body":{"nodeType":"YulBlock","src":"23547:464:25","statements":[{"body":{"nodeType":"YulBlock","src":"23573:431:25","statements":[{"nodeType":"YulVariableDeclaration","src":"23587:54:25","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"23635:5:25"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"23603:31:25"},"nodeType":"YulFunctionCall","src":"23603:38:25"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"23591:8:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"23654:63:25","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"23677:8:25"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"23705:10:25"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"23687:17:25"},"nodeType":"YulFunctionCall","src":"23687:29:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23673:3:25"},"nodeType":"YulFunctionCall","src":"23673:44:25"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"23658:11:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"23874:27:25","statements":[{"nodeType":"YulAssignment","src":"23876:23:25","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"23891:8:25"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"23876:11:25"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"23858:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"23870:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23855:2:25"},"nodeType":"YulFunctionCall","src":"23855:18:25"},"nodeType":"YulIf","src":"23852:49:25"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"23943:11:25"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"23960:8:25"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"23988:3:25"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"23970:17:25"},"nodeType":"YulFunctionCall","src":"23970:22:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23956:3:25"},"nodeType":"YulFunctionCall","src":"23956:37:25"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"23914:28:25"},"nodeType":"YulFunctionCall","src":"23914:80:25"},"nodeType":"YulExpressionStatement","src":"23914:80:25"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"23564:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"23569:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23561:2:25"},"nodeType":"YulFunctionCall","src":"23561:11:25"},"nodeType":"YulIf","src":"23558:446:25"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"23523:5:25","type":""},{"name":"len","nodeType":"YulTypedName","src":"23530:3:25","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"23535:10:25","type":""}],"src":"23468:543:25"},{"body":{"nodeType":"YulBlock","src":"24080:54:25","statements":[{"nodeType":"YulAssignment","src":"24090:37:25","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"24115:4:25"},{"name":"value","nodeType":"YulIdentifier","src":"24121:5:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"24111:3:25"},"nodeType":"YulFunctionCall","src":"24111:16:25"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"24090:8:25"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"24055:4:25","type":""},{"name":"value","nodeType":"YulTypedName","src":"24061:5:25","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"24071:8:25","type":""}],"src":"24017:117:25"},{"body":{"nodeType":"YulBlock","src":"24191:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"24201:68:25","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24250:1:25","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"24253:5:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"24246:3:25"},"nodeType":"YulFunctionCall","src":"24246:13:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24265:1:25","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"24261:3:25"},"nodeType":"YulFunctionCall","src":"24261:6:25"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"24217:28:25"},"nodeType":"YulFunctionCall","src":"24217:51:25"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"24213:3:25"},"nodeType":"YulFunctionCall","src":"24213:56:25"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"24205:4:25","type":""}]},{"nodeType":"YulAssignment","src":"24278:25:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"24292:4:25"},{"name":"mask","nodeType":"YulIdentifier","src":"24298:4:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24288:3:25"},"nodeType":"YulFunctionCall","src":"24288:15:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"24278:6:25"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"24168:4:25","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"24174:5:25","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"24184:6:25","type":""}],"src":"24140:169:25"},{"body":{"nodeType":"YulBlock","src":"24395:214:25","statements":[{"nodeType":"YulAssignment","src":"24528:37:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"24555:4:25"},{"name":"len","nodeType":"YulIdentifier","src":"24561:3:25"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"24536:18:25"},"nodeType":"YulFunctionCall","src":"24536:29:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"24528:4:25"}]},{"nodeType":"YulAssignment","src":"24574:29:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"24585:4:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24595:1:25","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"24598:3:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"24591:3:25"},"nodeType":"YulFunctionCall","src":"24591:11:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"24582:2:25"},"nodeType":"YulFunctionCall","src":"24582:21:25"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"24574:4:25"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"24376:4:25","type":""},{"name":"len","nodeType":"YulTypedName","src":"24382:3:25","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"24390:4:25","type":""}],"src":"24314:295:25"},{"body":{"nodeType":"YulBlock","src":"24706:1303:25","statements":[{"nodeType":"YulVariableDeclaration","src":"24717:51:25","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"24764:3:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"24731:32:25"},"nodeType":"YulFunctionCall","src":"24731:37:25"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"24721:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"24853:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"24855:16:25"},"nodeType":"YulFunctionCall","src":"24855:18:25"},"nodeType":"YulExpressionStatement","src":"24855:18:25"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"24825:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"24833:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24822:2:25"},"nodeType":"YulFunctionCall","src":"24822:30:25"},"nodeType":"YulIf","src":"24819:56:25"},{"nodeType":"YulVariableDeclaration","src":"24885:52:25","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"24931:4:25"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"24925:5:25"},"nodeType":"YulFunctionCall","src":"24925:11:25"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"24899:25:25"},"nodeType":"YulFunctionCall","src":"24899:38:25"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"24889:6:25","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"25030:4:25"},{"name":"oldLen","nodeType":"YulIdentifier","src":"25036:6:25"},{"name":"newLen","nodeType":"YulIdentifier","src":"25044:6:25"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"24984:45:25"},"nodeType":"YulFunctionCall","src":"24984:67:25"},"nodeType":"YulExpressionStatement","src":"24984:67:25"},{"nodeType":"YulVariableDeclaration","src":"25061:18:25","value":{"kind":"number","nodeType":"YulLiteral","src":"25078:1:25","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"25065:9:25","type":""}]},{"nodeType":"YulAssignment","src":"25089:17:25","value":{"kind":"number","nodeType":"YulLiteral","src":"25102:4:25","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"25089:9:25"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"25153:611:25","statements":[{"nodeType":"YulVariableDeclaration","src":"25167:37:25","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"25186:6:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25198:4:25","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"25194:3:25"},"nodeType":"YulFunctionCall","src":"25194:9:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25182:3:25"},"nodeType":"YulFunctionCall","src":"25182:22:25"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"25171:7:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"25218:51:25","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"25264:4:25"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"25232:31:25"},"nodeType":"YulFunctionCall","src":"25232:37:25"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"25222:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"25282:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"25291:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"25286:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"25350:163:25","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"25375:6:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"25393:3:25"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"25398:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25389:3:25"},"nodeType":"YulFunctionCall","src":"25389:19:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25383:5:25"},"nodeType":"YulFunctionCall","src":"25383:26:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"25368:6:25"},"nodeType":"YulFunctionCall","src":"25368:42:25"},"nodeType":"YulExpressionStatement","src":"25368:42:25"},{"nodeType":"YulAssignment","src":"25427:24:25","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"25441:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"25449:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25437:3:25"},"nodeType":"YulFunctionCall","src":"25437:14:25"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"25427:6:25"}]},{"nodeType":"YulAssignment","src":"25468:31:25","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"25485:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"25496:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25481:3:25"},"nodeType":"YulFunctionCall","src":"25481:18:25"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"25468:9:25"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"25316:1:25"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"25319:7:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"25313:2:25"},"nodeType":"YulFunctionCall","src":"25313:14:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"25328:21:25","statements":[{"nodeType":"YulAssignment","src":"25330:17:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"25339:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"25342:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25335:3:25"},"nodeType":"YulFunctionCall","src":"25335:12:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"25330:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"25309:3:25","statements":[]},"src":"25305:208:25"},{"body":{"nodeType":"YulBlock","src":"25549:156:25","statements":[{"nodeType":"YulVariableDeclaration","src":"25567:43:25","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"25594:3:25"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"25599:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25590:3:25"},"nodeType":"YulFunctionCall","src":"25590:19:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25584:5:25"},"nodeType":"YulFunctionCall","src":"25584:26:25"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"25571:9:25","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"25634:6:25"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"25661:9:25"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"25676:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"25684:4:25","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25672:3:25"},"nodeType":"YulFunctionCall","src":"25672:17:25"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"25642:18:25"},"nodeType":"YulFunctionCall","src":"25642:48:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"25627:6:25"},"nodeType":"YulFunctionCall","src":"25627:64:25"},"nodeType":"YulExpressionStatement","src":"25627:64:25"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"25532:7:25"},{"name":"newLen","nodeType":"YulIdentifier","src":"25541:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"25529:2:25"},"nodeType":"YulFunctionCall","src":"25529:19:25"},"nodeType":"YulIf","src":"25526:179:25"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"25725:4:25"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"25739:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"25747:1:25","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"25735:3:25"},"nodeType":"YulFunctionCall","src":"25735:14:25"},{"kind":"number","nodeType":"YulLiteral","src":"25751:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25731:3:25"},"nodeType":"YulFunctionCall","src":"25731:22:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"25718:6:25"},"nodeType":"YulFunctionCall","src":"25718:36:25"},"nodeType":"YulExpressionStatement","src":"25718:36:25"}]},"nodeType":"YulCase","src":"25146:618:25","value":{"kind":"number","nodeType":"YulLiteral","src":"25151:1:25","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"25781:222:25","statements":[{"nodeType":"YulVariableDeclaration","src":"25795:14:25","value":{"kind":"number","nodeType":"YulLiteral","src":"25808:1:25","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"25799:5:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"25832:67:25","statements":[{"nodeType":"YulAssignment","src":"25850:35:25","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"25869:3:25"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"25874:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25865:3:25"},"nodeType":"YulFunctionCall","src":"25865:19:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25859:5:25"},"nodeType":"YulFunctionCall","src":"25859:26:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"25850:5:25"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"25825:6:25"},"nodeType":"YulIf","src":"25822:77:25"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"25919:4:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25978:5:25"},{"name":"newLen","nodeType":"YulIdentifier","src":"25985:6:25"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"25925:52:25"},"nodeType":"YulFunctionCall","src":"25925:67:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"25912:6:25"},"nodeType":"YulFunctionCall","src":"25912:81:25"},"nodeType":"YulExpressionStatement","src":"25912:81:25"}]},"nodeType":"YulCase","src":"25773:230:25","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"25126:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"25134:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25123:2:25"},"nodeType":"YulFunctionCall","src":"25123:14:25"},"nodeType":"YulSwitch","src":"25116:887:25"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"24695:4:25","type":""},{"name":"src","nodeType":"YulTypedName","src":"24701:3:25","type":""}],"src":"24614:1395:25"},{"body":{"nodeType":"YulBlock","src":"26141:215:25","statements":[{"nodeType":"YulAssignment","src":"26151:78:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26217:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"26222:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26158:58:25"},"nodeType":"YulFunctionCall","src":"26158:71:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26151:3:25"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"26276:5:25"},{"name":"pos","nodeType":"YulIdentifier","src":"26283:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"26288:6:25"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"26239:36:25"},"nodeType":"YulFunctionCall","src":"26239:56:25"},"nodeType":"YulExpressionStatement","src":"26239:56:25"},{"nodeType":"YulAssignment","src":"26304:46:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26315:3:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"26342:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"26320:21:25"},"nodeType":"YulFunctionCall","src":"26320:29:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26311:3:25"},"nodeType":"YulFunctionCall","src":"26311:39:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26304:3:25"}]}]},"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"26114:5:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"26121:6:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"26129:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26137:3:25","type":""}],"src":"26039:317:25"},{"body":{"nodeType":"YulBlock","src":"26490:205:25","statements":[{"nodeType":"YulAssignment","src":"26500:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26512:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"26523:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26508:3:25"},"nodeType":"YulFunctionCall","src":"26508:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26500:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26547:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"26558:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26543:3:25"},"nodeType":"YulFunctionCall","src":"26543:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26566:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"26572:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26562:3:25"},"nodeType":"YulFunctionCall","src":"26562:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26536:6:25"},"nodeType":"YulFunctionCall","src":"26536:47:25"},"nodeType":"YulExpressionStatement","src":"26536:47:25"},{"nodeType":"YulAssignment","src":"26592:96:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26666:6:25"},{"name":"value1","nodeType":"YulIdentifier","src":"26674:6:25"},{"name":"tail","nodeType":"YulIdentifier","src":"26683:4:25"}],"functionName":{"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26600:65:25"},"nodeType":"YulFunctionCall","src":"26600:88:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26592:4:25"}]}]},"name":"abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26454:9:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26466:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26474:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26485:4:25","type":""}],"src":"26362:333:25"},{"body":{"nodeType":"YulBlock","src":"26807:62:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26829:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"26837:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26825:3:25"},"nodeType":"YulFunctionCall","src":"26825:14:25"},{"hexValue":"4d656d65206e6f74207375626d6974746564","kind":"string","nodeType":"YulLiteral","src":"26841:20:25","type":"","value":"Meme not submitted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26818:6:25"},"nodeType":"YulFunctionCall","src":"26818:44:25"},"nodeType":"YulExpressionStatement","src":"26818:44:25"}]},"name":"store_literal_in_memory_855024f5c4a5b0efabcd6daea3ba466bc9b46313116a5000814122b9ef4ee96e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26799:6:25","type":""}],"src":"26701:168:25"},{"body":{"nodeType":"YulBlock","src":"27021:220:25","statements":[{"nodeType":"YulAssignment","src":"27031:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27097:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"27102:2:25","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27038:58:25"},"nodeType":"YulFunctionCall","src":"27038:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27031:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27203:3:25"}],"functionName":{"name":"store_literal_in_memory_855024f5c4a5b0efabcd6daea3ba466bc9b46313116a5000814122b9ef4ee96e","nodeType":"YulIdentifier","src":"27114:88:25"},"nodeType":"YulFunctionCall","src":"27114:93:25"},"nodeType":"YulExpressionStatement","src":"27114:93:25"},{"nodeType":"YulAssignment","src":"27216:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27227:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"27232:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27223:3:25"},"nodeType":"YulFunctionCall","src":"27223:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27216:3:25"}]}]},"name":"abi_encode_t_stringliteral_855024f5c4a5b0efabcd6daea3ba466bc9b46313116a5000814122b9ef4ee96e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27009:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27017:3:25","type":""}],"src":"26875:366:25"},{"body":{"nodeType":"YulBlock","src":"27418:248:25","statements":[{"nodeType":"YulAssignment","src":"27428:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27440:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"27451:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27436:3:25"},"nodeType":"YulFunctionCall","src":"27436:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27428:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27475:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"27486:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27471:3:25"},"nodeType":"YulFunctionCall","src":"27471:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27494:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"27500:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27490:3:25"},"nodeType":"YulFunctionCall","src":"27490:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27464:6:25"},"nodeType":"YulFunctionCall","src":"27464:47:25"},"nodeType":"YulExpressionStatement","src":"27464:47:25"},{"nodeType":"YulAssignment","src":"27520:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27654:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_855024f5c4a5b0efabcd6daea3ba466bc9b46313116a5000814122b9ef4ee96e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27528:124:25"},"nodeType":"YulFunctionCall","src":"27528:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27520:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_855024f5c4a5b0efabcd6daea3ba466bc9b46313116a5000814122b9ef4ee96e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27398:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27413:4:25","type":""}],"src":"27247:419:25"},{"body":{"nodeType":"YulBlock","src":"27786:34:25","statements":[{"nodeType":"YulAssignment","src":"27796:18:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"27811:3:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"27796:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27758:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"27763:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"27774:11:25","type":""}],"src":"27672:148:25"},{"body":{"nodeType":"YulBlock","src":"27936:280:25","statements":[{"nodeType":"YulVariableDeclaration","src":"27946:53:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27993:5:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"27960:32:25"},"nodeType":"YulFunctionCall","src":"27960:39:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"27950:6:25","type":""}]},{"nodeType":"YulAssignment","src":"28008:96:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28092:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"28097:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"28015:76:25"},"nodeType":"YulFunctionCall","src":"28015:89:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28008:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28152:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"28159:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28148:3:25"},"nodeType":"YulFunctionCall","src":"28148:16:25"},{"name":"pos","nodeType":"YulIdentifier","src":"28166:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"28171:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"28113:34:25"},"nodeType":"YulFunctionCall","src":"28113:65:25"},"nodeType":"YulExpressionStatement","src":"28113:65:25"},{"nodeType":"YulAssignment","src":"28187:23:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28198:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"28203:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28194:3:25"},"nodeType":"YulFunctionCall","src":"28194:16:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28187:3:25"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27917:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"27924:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27932:3:25","type":""}],"src":"27826:390:25"},{"body":{"nodeType":"YulBlock","src":"28406:251:25","statements":[{"nodeType":"YulAssignment","src":"28417:102:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28506:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"28515:3:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"28424:81:25"},"nodeType":"YulFunctionCall","src":"28424:95:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28417:3:25"}]},{"nodeType":"YulAssignment","src":"28529:102:25","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28618:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"28627:3:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"28536:81:25"},"nodeType":"YulFunctionCall","src":"28536:95:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28529:3:25"}]},{"nodeType":"YulAssignment","src":"28641:10:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"28648:3:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28641:3:25"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28377:3:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28383:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28391:6:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28402:3:25","type":""}],"src":"28222:435:25"},{"body":{"nodeType":"YulBlock","src":"28769:65:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28791:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"28799:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28787:3:25"},"nodeType":"YulFunctionCall","src":"28787:14:25"},{"hexValue":"4f6e6c792063726561746f722063616e206d696e74","kind":"string","nodeType":"YulLiteral","src":"28803:23:25","type":"","value":"Only creator can mint"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28780:6:25"},"nodeType":"YulFunctionCall","src":"28780:47:25"},"nodeType":"YulExpressionStatement","src":"28780:47:25"}]},"name":"store_literal_in_memory_f35b27dac5c6c5c70979437e786589e609929f2a486ae3e25e09885c3767053e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28761:6:25","type":""}],"src":"28663:171:25"},{"body":{"nodeType":"YulBlock","src":"28986:220:25","statements":[{"nodeType":"YulAssignment","src":"28996:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29062:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"29067:2:25","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29003:58:25"},"nodeType":"YulFunctionCall","src":"29003:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28996:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29168:3:25"}],"functionName":{"name":"store_literal_in_memory_f35b27dac5c6c5c70979437e786589e609929f2a486ae3e25e09885c3767053e","nodeType":"YulIdentifier","src":"29079:88:25"},"nodeType":"YulFunctionCall","src":"29079:93:25"},"nodeType":"YulExpressionStatement","src":"29079:93:25"},{"nodeType":"YulAssignment","src":"29181:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29192:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"29197:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29188:3:25"},"nodeType":"YulFunctionCall","src":"29188:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29181:3:25"}]}]},"name":"abi_encode_t_stringliteral_f35b27dac5c6c5c70979437e786589e609929f2a486ae3e25e09885c3767053e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28974:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28982:3:25","type":""}],"src":"28840:366:25"},{"body":{"nodeType":"YulBlock","src":"29383:248:25","statements":[{"nodeType":"YulAssignment","src":"29393:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29405:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"29416:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29401:3:25"},"nodeType":"YulFunctionCall","src":"29401:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29393:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29440:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"29451:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29436:3:25"},"nodeType":"YulFunctionCall","src":"29436:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29459:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"29465:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29455:3:25"},"nodeType":"YulFunctionCall","src":"29455:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29429:6:25"},"nodeType":"YulFunctionCall","src":"29429:47:25"},"nodeType":"YulExpressionStatement","src":"29429:47:25"},{"nodeType":"YulAssignment","src":"29485:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29619:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_f35b27dac5c6c5c70979437e786589e609929f2a486ae3e25e09885c3767053e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29493:124:25"},"nodeType":"YulFunctionCall","src":"29493:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29485:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_f35b27dac5c6c5c70979437e786589e609929f2a486ae3e25e09885c3767053e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29363:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29378:4:25","type":""}],"src":"29212:419:25"},{"body":{"nodeType":"YulBlock","src":"29743:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29765:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"29773:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29761:3:25"},"nodeType":"YulFunctionCall","src":"29761:14:25"},{"hexValue":"4d656d6520616c7265616479206d696e746564","kind":"string","nodeType":"YulLiteral","src":"29777:21:25","type":"","value":"Meme already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29754:6:25"},"nodeType":"YulFunctionCall","src":"29754:45:25"},"nodeType":"YulExpressionStatement","src":"29754:45:25"}]},"name":"store_literal_in_memory_be55e3527e41bc700964ae5d57e43d215583aefa75e094d5905e663544120409","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29735:6:25","type":""}],"src":"29637:169:25"},{"body":{"nodeType":"YulBlock","src":"29958:220:25","statements":[{"nodeType":"YulAssignment","src":"29968:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30034:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"30039:2:25","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29975:58:25"},"nodeType":"YulFunctionCall","src":"29975:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29968:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30140:3:25"}],"functionName":{"name":"store_literal_in_memory_be55e3527e41bc700964ae5d57e43d215583aefa75e094d5905e663544120409","nodeType":"YulIdentifier","src":"30051:88:25"},"nodeType":"YulFunctionCall","src":"30051:93:25"},"nodeType":"YulExpressionStatement","src":"30051:93:25"},{"nodeType":"YulAssignment","src":"30153:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30164:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"30169:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30160:3:25"},"nodeType":"YulFunctionCall","src":"30160:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30153:3:25"}]}]},"name":"abi_encode_t_stringliteral_be55e3527e41bc700964ae5d57e43d215583aefa75e094d5905e663544120409_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29946:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29954:3:25","type":""}],"src":"29812:366:25"},{"body":{"nodeType":"YulBlock","src":"30355:248:25","statements":[{"nodeType":"YulAssignment","src":"30365:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30377:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"30388:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30373:3:25"},"nodeType":"YulFunctionCall","src":"30373:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30365:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30412:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"30423:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30408:3:25"},"nodeType":"YulFunctionCall","src":"30408:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30431:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"30437:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30427:3:25"},"nodeType":"YulFunctionCall","src":"30427:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30401:6:25"},"nodeType":"YulFunctionCall","src":"30401:47:25"},"nodeType":"YulExpressionStatement","src":"30401:47:25"},{"nodeType":"YulAssignment","src":"30457:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30591:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_be55e3527e41bc700964ae5d57e43d215583aefa75e094d5905e663544120409_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30465:124:25"},"nodeType":"YulFunctionCall","src":"30465:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30457:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_be55e3527e41bc700964ae5d57e43d215583aefa75e094d5905e663544120409__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30335:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30350:4:25","type":""}],"src":"30184:419:25"},{"body":{"nodeType":"YulBlock","src":"30735:206:25","statements":[{"nodeType":"YulAssignment","src":"30745:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30757:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"30768:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30753:3:25"},"nodeType":"YulFunctionCall","src":"30753:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30745:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"30825:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30838:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"30849:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30834:3:25"},"nodeType":"YulFunctionCall","src":"30834:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"30781:43:25"},"nodeType":"YulFunctionCall","src":"30781:71:25"},"nodeType":"YulExpressionStatement","src":"30781:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"30906:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30919:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"30930:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30915:3:25"},"nodeType":"YulFunctionCall","src":"30915:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"30862:43:25"},"nodeType":"YulFunctionCall","src":"30862:72:25"},"nodeType":"YulExpressionStatement","src":"30862:72:25"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30699:9:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"30711:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"30719:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30730:4:25","type":""}],"src":"30609:332:25"},{"body":{"nodeType":"YulBlock","src":"31101:288:25","statements":[{"nodeType":"YulAssignment","src":"31111:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31123:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"31134:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31119:3:25"},"nodeType":"YulFunctionCall","src":"31119:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31111:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31191:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31204:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"31215:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31200:3:25"},"nodeType":"YulFunctionCall","src":"31200:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"31147:43:25"},"nodeType":"YulFunctionCall","src":"31147:71:25"},"nodeType":"YulExpressionStatement","src":"31147:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"31272:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31285:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"31296:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31281:3:25"},"nodeType":"YulFunctionCall","src":"31281:18:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"31228:43:25"},"nodeType":"YulFunctionCall","src":"31228:72:25"},"nodeType":"YulExpressionStatement","src":"31228:72:25"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"31354:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31367:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"31378:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31363:3:25"},"nodeType":"YulFunctionCall","src":"31363:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"31310:43:25"},"nodeType":"YulFunctionCall","src":"31310:72:25"},"nodeType":"YulExpressionStatement","src":"31310:72:25"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31057:9:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"31069:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"31077:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31085:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31096:4:25","type":""}],"src":"30947:442:25"},{"body":{"nodeType":"YulBlock","src":"31453:40:25","statements":[{"nodeType":"YulAssignment","src":"31464:22:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31480:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"31474:5:25"},"nodeType":"YulFunctionCall","src":"31474:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"31464:6:25"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31436:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"31446:6:25","type":""}],"src":"31395:98:25"},{"body":{"nodeType":"YulBlock","src":"31594:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31611:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"31616:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31604:6:25"},"nodeType":"YulFunctionCall","src":"31604:19:25"},"nodeType":"YulExpressionStatement","src":"31604:19:25"},{"nodeType":"YulAssignment","src":"31632:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31651:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"31656:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31647:3:25"},"nodeType":"YulFunctionCall","src":"31647:14:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"31632:11:25"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31566:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"31571:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"31582:11:25","type":""}],"src":"31499:168:25"},{"body":{"nodeType":"YulBlock","src":"31763:283:25","statements":[{"nodeType":"YulVariableDeclaration","src":"31773:52:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31819:5:25"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"31787:31:25"},"nodeType":"YulFunctionCall","src":"31787:38:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"31777:6:25","type":""}]},{"nodeType":"YulAssignment","src":"31834:77:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31899:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"31904:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31841:57:25"},"nodeType":"YulFunctionCall","src":"31841:70:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31834:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31959:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"31966:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31955:3:25"},"nodeType":"YulFunctionCall","src":"31955:16:25"},{"name":"pos","nodeType":"YulIdentifier","src":"31973:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"31978:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"31920:34:25"},"nodeType":"YulFunctionCall","src":"31920:65:25"},"nodeType":"YulExpressionStatement","src":"31920:65:25"},{"nodeType":"YulAssignment","src":"31994:46:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32005:3:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"32032:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"32010:21:25"},"nodeType":"YulFunctionCall","src":"32010:29:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32001:3:25"},"nodeType":"YulFunctionCall","src":"32001:39:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31994:3:25"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31744:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"31751:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31759:3:25","type":""}],"src":"31673:373:25"},{"body":{"nodeType":"YulBlock","src":"32252:440:25","statements":[{"nodeType":"YulAssignment","src":"32262:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32274:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"32285:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32270:3:25"},"nodeType":"YulFunctionCall","src":"32270:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32262:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"32343:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32356:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"32367:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32352:3:25"},"nodeType":"YulFunctionCall","src":"32352:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"32299:43:25"},"nodeType":"YulFunctionCall","src":"32299:71:25"},"nodeType":"YulExpressionStatement","src":"32299:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"32424:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32437:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"32448:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32433:3:25"},"nodeType":"YulFunctionCall","src":"32433:18:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"32380:43:25"},"nodeType":"YulFunctionCall","src":"32380:72:25"},"nodeType":"YulExpressionStatement","src":"32380:72:25"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"32506:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32519:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"32530:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32515:3:25"},"nodeType":"YulFunctionCall","src":"32515:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"32462:43:25"},"nodeType":"YulFunctionCall","src":"32462:72:25"},"nodeType":"YulExpressionStatement","src":"32462:72:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32555:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"32566:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32551:3:25"},"nodeType":"YulFunctionCall","src":"32551:18:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32575:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"32581:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32571:3:25"},"nodeType":"YulFunctionCall","src":"32571:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32544:6:25"},"nodeType":"YulFunctionCall","src":"32544:48:25"},"nodeType":"YulExpressionStatement","src":"32544:48:25"},{"nodeType":"YulAssignment","src":"32601:84:25","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"32671:6:25"},{"name":"tail","nodeType":"YulIdentifier","src":"32680:4:25"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32609:61:25"},"nodeType":"YulFunctionCall","src":"32609:76:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32601:4:25"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32200:9:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"32212:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"32220:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"32228:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"32236:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32247:4:25","type":""}],"src":"32052:640:25"},{"body":{"nodeType":"YulBlock","src":"32760:79:25","statements":[{"nodeType":"YulAssignment","src":"32770:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"32785:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"32779:5:25"},"nodeType":"YulFunctionCall","src":"32779:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"32770:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32827:5:25"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"32801:25:25"},"nodeType":"YulFunctionCall","src":"32801:32:25"},"nodeType":"YulExpressionStatement","src":"32801:32:25"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"32738:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"32746:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"32754:5:25","type":""}],"src":"32698:141:25"},{"body":{"nodeType":"YulBlock","src":"32921:273:25","statements":[{"body":{"nodeType":"YulBlock","src":"32967:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"32969:77:25"},"nodeType":"YulFunctionCall","src":"32969:79:25"},"nodeType":"YulExpressionStatement","src":"32969:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"32942:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"32951:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32938:3:25"},"nodeType":"YulFunctionCall","src":"32938:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"32963:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"32934:3:25"},"nodeType":"YulFunctionCall","src":"32934:32:25"},"nodeType":"YulIf","src":"32931:119:25"},{"nodeType":"YulBlock","src":"33060:127:25","statements":[{"nodeType":"YulVariableDeclaration","src":"33075:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"33089:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"33079:6:25","type":""}]},{"nodeType":"YulAssignment","src":"33104:73:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33149:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"33160:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33145:3:25"},"nodeType":"YulFunctionCall","src":"33145:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"33169:7:25"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"33114:30:25"},"nodeType":"YulFunctionCall","src":"33114:63:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"33104:6:25"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32891:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"32902:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"32914:6:25","type":""}],"src":"32845:349:25"},{"body":{"nodeType":"YulBlock","src":"33228:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33245:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33248:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33238:6:25"},"nodeType":"YulFunctionCall","src":"33238:88:25"},"nodeType":"YulExpressionStatement","src":"33238:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33342:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"33345:4:25","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33335:6:25"},"nodeType":"YulFunctionCall","src":"33335:15:25"},"nodeType":"YulExpressionStatement","src":"33335:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33366:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33369:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"33359:6:25"},"nodeType":"YulFunctionCall","src":"33359:15:25"},"nodeType":"YulExpressionStatement","src":"33359:15:25"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"33200:180:25"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_bool_t_bool__to_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_bool_t_bool__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_string_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$480_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$480_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$480_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$480__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$480_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085(memPtr) {\n\n        mstore(add(memPtr, 0), \"Mismatched array lengths\")\n\n    }\n\n    function abi_encode_t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_a11bbde2fe764af74e1d4459d264f972380a8fc71ad8f10b8306caf307e5d50a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance for rewards\")\n\n    }\n\n    function abi_encode_t_stringliteral_a11bbde2fe764af74e1d4459d264f972380a8fc71ad8f10b8306caf307e5d50a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_a11bbde2fe764af74e1d4459d264f972380a8fc71ad8f10b8306caf307e5d50a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a11bbde2fe764af74e1d4459d264f972380a8fc71ad8f10b8306caf307e5d50a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a11bbde2fe764af74e1d4459d264f972380a8fc71ad8f10b8306caf307e5d50a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_53a04e33854b42e7e6aa2cc3ebfba2d4fe5e3493a53cdce37f5154aefb6af936(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only Galactic G role owners allo\")\n\n        mstore(add(memPtr, 32), \"wed\")\n\n    }\n\n    function abi_encode_t_stringliteral_53a04e33854b42e7e6aa2cc3ebfba2d4fe5e3493a53cdce37f5154aefb6af936_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_53a04e33854b42e7e6aa2cc3ebfba2d4fe5e3493a53cdce37f5154aefb6af936(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_53a04e33854b42e7e6aa2cc3ebfba2d4fe5e3493a53cdce37f5154aefb6af936__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_53a04e33854b42e7e6aa2cc3ebfba2d4fe5e3493a53cdce37f5154aefb6af936_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    // string -> string\n    function abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value0, value1,  tail)\n\n    }\n\n    function store_literal_in_memory_855024f5c4a5b0efabcd6daea3ba466bc9b46313116a5000814122b9ef4ee96e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Meme not submitted\")\n\n    }\n\n    function abi_encode_t_stringliteral_855024f5c4a5b0efabcd6daea3ba466bc9b46313116a5000814122b9ef4ee96e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_855024f5c4a5b0efabcd6daea3ba466bc9b46313116a5000814122b9ef4ee96e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_855024f5c4a5b0efabcd6daea3ba466bc9b46313116a5000814122b9ef4ee96e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_855024f5c4a5b0efabcd6daea3ba466bc9b46313116a5000814122b9ef4ee96e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_f35b27dac5c6c5c70979437e786589e609929f2a486ae3e25e09885c3767053e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only creator can mint\")\n\n    }\n\n    function abi_encode_t_stringliteral_f35b27dac5c6c5c70979437e786589e609929f2a486ae3e25e09885c3767053e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_f35b27dac5c6c5c70979437e786589e609929f2a486ae3e25e09885c3767053e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f35b27dac5c6c5c70979437e786589e609929f2a486ae3e25e09885c3767053e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f35b27dac5c6c5c70979437e786589e609929f2a486ae3e25e09885c3767053e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_be55e3527e41bc700964ae5d57e43d215583aefa75e094d5905e663544120409(memPtr) {\n\n        mstore(add(memPtr, 0), \"Meme already minted\")\n\n    }\n\n    function abi_encode_t_stringliteral_be55e3527e41bc700964ae5d57e43d215583aefa75e094d5905e663544120409_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_be55e3527e41bc700964ae5d57e43d215583aefa75e094d5905e663544120409(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_be55e3527e41bc700964ae5d57e43d215583aefa75e094d5905e663544120409__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_be55e3527e41bc700964ae5d57e43d215583aefa75e094d5905e663544120409_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101ef5760003560e01c8063715018a61161010f578063c87b56dd116100a2578063e888894211610071578063e888894214610593578063e985e9c5146105b1578063eb3a9ef7146105e1578063f2fde38b146105fd576101ef565b8063c87b56dd1461050b578063da2b4c1e1461053b578063dc18560414610559578063dce0b4e414610575576101ef565b806395d89b41116100de57806395d89b4114610497578063a22cb465146104b5578063b24c4fa0146104d1578063b88d4fde146104ef576101ef565b8063715018a6146104375780637e39cb2b14610441578063867d60731461045d5780638da5cb5b14610479576101ef565b80632f5b6ffe116101875780635e318e07116101565780635e318e071461039f5780636352211e146103bb5780636fcba377146103eb57806370a0823114610407576101ef565b80632f5b6ffe14610300578063388f60641461033057806342842e0e146103655780635a64ad9514610381576101ef565b8063095ea7b3116101c3578063095ea7b314610290578063143ba4f3146102ac5780631809b5f5146102c857806323b872dd146102e4576101ef565b80629a9b7b146101f457806301ffc9a71461021257806306fdde0314610242578063081812fc14610260575b600080fd5b6101fc610619565b6040516102099190612aff565b60405180910390f35b61022c60048036038101906102279190612b86565b61061f565b6040516102399190612bce565b60405180910390f35b61024a610680565b6040516102579190612c79565b60405180910390f35b61027a60048036038101906102759190612cc7565b610712565b6040516102879190612d35565b60405180910390f35b6102aa60048036038101906102a59190612d7c565b61072e565b005b6102c660048036038101906102c19190612e77565b610744565b005b6102e260048036038101906102dd9190612ef8565b610976565b005b6102fe60048036038101906102f99190612f25565b6109d9565b005b61031a60048036038101906103159190612ef8565b610adb565b6040516103279190612bce565b60405180910390f35b61034a60048036038101906103459190612cc7565b610afb565b60405161035c96959493929190612f78565b60405180910390f35b61037f600480360381019061037a9190612f25565b610bf9565b005b610389610c19565b6040516103969190612aff565b60405180910390f35b6103b960048036038101906103b49190612cc7565b610c1f565b005b6103d560048036038101906103d09190612cc7565b610c7e565b6040516103e29190612d35565b60405180910390f35b61040560048036038101906104009190612fe0565b610c90565b005b610421600480360381019061041c9190612ef8565b610cba565b60405161042e9190612aff565b60405180910390f35b61043f610d74565b005b61045b6004803603810190610456919061309d565b610d88565b005b61047760048036038101906104729190612cc7565b61102d565b005b6104816111e5565b60405161048e9190612d35565b60405180910390f35b61049f61120f565b6040516104ac9190612c79565b60405180910390f35b6104cf60048036038101906104ca9190613116565b6112a1565b005b6104d96112b7565b6040516104e691906131b5565b60405180910390f35b61050960048036038101906105049190613300565b6112dd565b005b61052560048036038101906105209190612cc7565b611302565b6040516105329190612c79565b60405180910390f35b610543611415565b6040516105509190612aff565b60405180910390f35b610573600480360381019061056e9190612ef8565b61141b565b005b61057d61147e565b60405161058a9190612aff565b60405180910390f35b61059b611484565b6040516105a89190612aff565b60405180910390f35b6105cb60048036038101906105c69190613383565b61148a565b6040516105d89190612bce565b60405180910390f35b6105fb60048036038101906105f69190612cc7565b61151e565b005b61061760048036038101906106129190612ef8565b61184c565b005b600d5481565b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806106795750610678826118d2565b5b9050919050565b60606000805461068f906133f2565b80601f01602080910402602001604051908101604052809291908181526020018280546106bb906133f2565b80156107085780601f106106dd57610100808354040283529160200191610708565b820191906000526020600020905b8154815290600101906020018083116106eb57829003601f168201915b5050505050905090565b600061071d826119b4565b5061072782611a3c565b9050919050565b610740828261073b611a79565b611a81565b5050565b61074c611a93565b818190508484905014610794576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078b9061346f565b60405180910390fd5b600080600090505b858590508110156107e1578383828181106107ba576107b961348f565b5b90506020020135826107cc91906134ed565b915080806107d990613521565b91505061079c565b5080600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161083e9190612d35565b602060405180830381865afa15801561085b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087f919061357e565b10156108c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b7906135f7565b60405180910390fd5b60005b8585905081101561096e5761095b8686838181106108e4576108e361348f565b5b90506020020160208101906108f99190612ef8565b85858481811061090c5761090b61348f565b5b90506020020135600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611b1a9092919063ffffffff16565b808061096690613521565b9150506108c3565b505050505050565b61097e611a93565b6001600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a4b5760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610a429190612d35565b60405180910390fd5b6000610a5f8383610a5a611a79565b611b99565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ad5578382826040517f64283d7b000000000000000000000000000000000000000000000000000000008152600401610acc93929190613617565b60405180910390fd5b50505050565b600f6020528060005260406000206000915054906101000a900460ff1681565b600e6020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002018054610b4a906133f2565b80601f0160208091040260200160405190810160405280929190818152602001828054610b76906133f2565b8015610bc35780601f10610b9857610100808354040283529160200191610bc3565b820191906000526020600020905b815481529060010190602001808311610ba657829003601f168201915b5050505050908060030154908060040160009054906101000a900460ff16908060040160019054906101000a900460ff16905086565b610c14838383604051806020016040528060008152506112dd565b505050565b600a5481565b610c27611a93565b610c7b610c326111e5565b82600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611b1a9092919063ffffffff16565b50565b6000610c89826119b4565b9050919050565b610c98611a93565b8360098190555082600a8190555081600b8190555080600c8190555050505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d2d5760006040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401610d249190612d35565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610d7c611a93565b610d866000611db3565b565b600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610e14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0b906136c0565b60405180910390fd5b610e653330600b54600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611e79909392919063ffffffff16565b600d6000815480929190610e7890613521565b91905055506040518060c00160405280600d5481526020013373ffffffffffffffffffffffffffffffffffffffff16815260200183838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020016000815260200160001515815260200160011515815250600e6000600d5481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019081610f889190613882565b506060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555060a08201518160040160016101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff16600d547f5a20ab1d9dc88654ce4b0ecd06dbbb66115f3e86cfe70f6717102bcae2a4a5c08484604051611021929190613981565b60405180910390a35050565b600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166110b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b0906136c0565b60405180910390fd5b61110a3330600c54600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611e79909392919063ffffffff16565b6000600e600083815260200190815260200160002090508060040160019054906101000a900460ff16611172576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611169906139f1565b60405180910390fd5b600181600301600082825461118791906134ed565b925050819055503373ffffffffffffffffffffffffffffffffffffffff16827f903d955ffc4c7d3ae887133f90927b5c2a5177cbe7af0c949b0bf110a86af0b183600301546040516111d99190612aff565b60405180910390a35050565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461121e906133f2565b80601f016020809104026020016040519081016040528092919081815260200182805461124a906133f2565b80156112975780601f1061126c57610100808354040283529160200191611297565b820191906000526020600020905b81548152906001019060200180831161127a57829003601f168201915b5050505050905090565b6112b36112ac611a79565b8383611efb565b5050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6112e88484846109d9565b6112fc6112f3611a79565b8585858561206a565b50505050565b606061130d826119b4565b50600060066000848152602001908152602001600020805461132e906133f2565b80601f016020809104026020016040519081016040528092919081815260200182805461135a906133f2565b80156113a75780601f1061137c576101008083540402835291602001916113a7565b820191906000526020600020905b81548152906001019060200180831161138a57829003601f168201915b5050505050905060006113b861221b565b905060008151036113cd578192505050611410565b6000825111156114025780826040516020016113ea929190613a4d565b60405160208183030381529060405292505050611410565b61140b84612232565b925050505b919050565b600c5481565b611423611a93565b6000600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60095481565b600b5481565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166115aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a1906136c0565b60405180910390fd5b6000600e600083815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611653576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164a90613abd565b60405180910390fd5b8060040160019054906101000a900460ff166116a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169b906139f1565b60405180910390fd5b8060040160009054906101000a900460ff16156116f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116ed90613b29565b60405180910390fd5b6117473330600a54600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611e79909392919063ffffffff16565b611751338361229b565b6117e782826002018054611764906133f2565b80601f0160208091040260200160405190810160405280929190818152602001828054611790906133f2565b80156117dd5780601f106117b2576101008083540402835291602001916117dd565b820191906000526020600020905b8154815290600101906020018083116117c057829003601f168201915b50505050506122b9565b60018160040160006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff16827fb2ba4c72a840d1937561f5018e205ce84b4ee1fbafccfa1a2c56fed4b4faed5860405160405180910390a35050565b611854611a93565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036118c65760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016118bd9190612d35565b60405180910390fd5b6118cf81611db3565b50565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061199d57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806119ad57506119ac82612315565b5b9050919050565b6000806119c08361237f565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611a3357826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611a2a9190612aff565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b611a8e83838360016123bc565b505050565b611a9b611a79565b73ffffffffffffffffffffffffffffffffffffffff16611ab96111e5565b73ffffffffffffffffffffffffffffffffffffffff1614611b1857611adc611a79565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611b0f9190612d35565b60405180910390fd5b565b611b94838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611b4d929190613b49565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612581565b505050565b600080611ba58461237f565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611be757611be6818486612623565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611c7857611c296000856000806123bc565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614611cfb576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611ef5848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401611eae93929190613b72565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612581565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611f6c57816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401611f639190612d35565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161205d9190612bce565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115612214578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b81526004016120c99493929190613bfe565b6020604051808303816000875af192505050801561210557506040513d601f19601f820116820180604052508101906121029190613c5f565b60015b612189573d8060008114612135576040519150601f19603f3d011682016040523d82523d6000602084013e61213a565b606091505b50600081510361218157836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016121789190612d35565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461221257836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016122099190612d35565b60405180910390fd5b505b5050505050565b606060405180602001604052806000815250905090565b606061223d826119b4565b50600061224861221b565b905060008151116122685760405180602001604052806000815250612293565b80612272846126e7565b604051602001612283929190613a4d565b6040516020818303038152906040525b915050919050565b6122b58282604051806020016040528060008152506127b5565b5050565b806006600084815260200190815260200160002090816122d99190613882565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516123099190612aff565b60405180910390a15050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806123f55750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15612529576000612405846119b4565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561247057508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156124835750612481818461148a565b155b156124c557826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016124bc9190612d35565b60405180910390fd5b811561252757838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b600080602060008451602086016000885af1806125a4576040513d6000823e3d81fd5b3d9250600051915050600082146125bf5760018114156125db565b60008473ffffffffffffffffffffffffffffffffffffffff163b145b1561261d57836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016126149190612d35565b60405180910390fd5b50505050565b61262e8383836127d9565b6126e257600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036126a357806040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161269a9190612aff565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016126d9929190613b49565b60405180910390fd5b505050565b6060600060016126f68461289a565b01905060008167ffffffffffffffff811115612715576127146131d5565b5b6040519080825280601f01601f1916602001820160405280156127475781602001600182028036833780820191505090505b509050600082602001820190505b6001156127aa578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161279e5761279d613c8c565b5b04945060008503612755575b819350505050919050565b6127bf83836129ed565b6127d46127ca611a79565b600085858561206a565b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561289157508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806128525750612851848461148a565b5b8061289057508273ffffffffffffffffffffffffffffffffffffffff1661287883611a3c565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106128f8577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816128ee576128ed613c8c565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310612935576d04ee2d6d415b85acef8100000000838161292b5761292a613c8c565b5b0492506020810190505b662386f26fc10000831061296457662386f26fc10000838161295a57612959613c8c565b5b0492506010810190505b6305f5e100831061298d576305f5e100838161298357612982613c8c565b5b0492506008810190505b61271083106129b25761271083816129a8576129a7613c8c565b5b0492506004810190505b606483106129d557606483816129cb576129ca613c8c565b5b0492506002810190505b600a83106129e4576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612a5f5760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401612a569190612d35565b60405180910390fd5b6000612a6d83836000611b99565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612ae15760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401612ad89190612d35565b60405180910390fd5b505050565b6000819050919050565b612af981612ae6565b82525050565b6000602082019050612b146000830184612af0565b92915050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612b6381612b2e565b8114612b6e57600080fd5b50565b600081359050612b8081612b5a565b92915050565b600060208284031215612b9c57612b9b612b24565b5b6000612baa84828501612b71565b91505092915050565b60008115159050919050565b612bc881612bb3565b82525050565b6000602082019050612be36000830184612bbf565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612c23578082015181840152602081019050612c08565b60008484015250505050565b6000601f19601f8301169050919050565b6000612c4b82612be9565b612c558185612bf4565b9350612c65818560208601612c05565b612c6e81612c2f565b840191505092915050565b60006020820190508181036000830152612c938184612c40565b905092915050565b612ca481612ae6565b8114612caf57600080fd5b50565b600081359050612cc181612c9b565b92915050565b600060208284031215612cdd57612cdc612b24565b5b6000612ceb84828501612cb2565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612d1f82612cf4565b9050919050565b612d2f81612d14565b82525050565b6000602082019050612d4a6000830184612d26565b92915050565b612d5981612d14565b8114612d6457600080fd5b50565b600081359050612d7681612d50565b92915050565b60008060408385031215612d9357612d92612b24565b5b6000612da185828601612d67565b9250506020612db285828601612cb2565b9150509250929050565b600080fd5b600080fd5b600080fd5b60008083601f840112612de157612de0612dbc565b5b8235905067ffffffffffffffff811115612dfe57612dfd612dc1565b5b602083019150836020820283011115612e1a57612e19612dc6565b5b9250929050565b60008083601f840112612e3757612e36612dbc565b5b8235905067ffffffffffffffff811115612e5457612e53612dc1565b5b602083019150836020820283011115612e7057612e6f612dc6565b5b9250929050565b60008060008060408587031215612e9157612e90612b24565b5b600085013567ffffffffffffffff811115612eaf57612eae612b29565b5b612ebb87828801612dcb565b9450945050602085013567ffffffffffffffff811115612ede57612edd612b29565b5b612eea87828801612e21565b925092505092959194509250565b600060208284031215612f0e57612f0d612b24565b5b6000612f1c84828501612d67565b91505092915050565b600080600060608486031215612f3e57612f3d612b24565b5b6000612f4c86828701612d67565b9350506020612f5d86828701612d67565b9250506040612f6e86828701612cb2565b9150509250925092565b600060c082019050612f8d6000830189612af0565b612f9a6020830188612d26565b8181036040830152612fac8187612c40565b9050612fbb6060830186612af0565b612fc86080830185612bbf565b612fd560a0830184612bbf565b979650505050505050565b60008060008060808587031215612ffa57612ff9612b24565b5b600061300887828801612cb2565b945050602061301987828801612cb2565b935050604061302a87828801612cb2565b925050606061303b87828801612cb2565b91505092959194509250565b60008083601f84011261305d5761305c612dbc565b5b8235905067ffffffffffffffff81111561307a57613079612dc1565b5b60208301915083600182028301111561309657613095612dc6565b5b9250929050565b600080602083850312156130b4576130b3612b24565b5b600083013567ffffffffffffffff8111156130d2576130d1612b29565b5b6130de85828601613047565b92509250509250929050565b6130f381612bb3565b81146130fe57600080fd5b50565b600081359050613110816130ea565b92915050565b6000806040838503121561312d5761312c612b24565b5b600061313b85828601612d67565b925050602061314c85828601613101565b9150509250929050565b6000819050919050565b600061317b61317661317184612cf4565b613156565b612cf4565b9050919050565b600061318d82613160565b9050919050565b600061319f82613182565b9050919050565b6131af81613194565b82525050565b60006020820190506131ca60008301846131a6565b92915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61320d82612c2f565b810181811067ffffffffffffffff8211171561322c5761322b6131d5565b5b80604052505050565b600061323f612b1a565b905061324b8282613204565b919050565b600067ffffffffffffffff82111561326b5761326a6131d5565b5b61327482612c2f565b9050602081019050919050565b82818337600083830152505050565b60006132a361329e84613250565b613235565b9050828152602081018484840111156132bf576132be6131d0565b5b6132ca848285613281565b509392505050565b600082601f8301126132e7576132e6612dbc565b5b81356132f7848260208601613290565b91505092915050565b6000806000806080858703121561331a57613319612b24565b5b600061332887828801612d67565b945050602061333987828801612d67565b935050604061334a87828801612cb2565b925050606085013567ffffffffffffffff81111561336b5761336a612b29565b5b613377878288016132d2565b91505092959194509250565b6000806040838503121561339a57613399612b24565b5b60006133a885828601612d67565b92505060206133b985828601612d67565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061340a57607f821691505b60208210810361341d5761341c6133c3565b5b50919050565b7f4d69736d617463686564206172726179206c656e677468730000000000000000600082015250565b6000613459601883612bf4565b915061346482613423565b602082019050919050565b600060208201905081810360008301526134888161344c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006134f882612ae6565b915061350383612ae6565b925082820190508082111561351b5761351a6134be565b5b92915050565b600061352c82612ae6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361355e5761355d6134be565b5b600182019050919050565b60008151905061357881612c9b565b92915050565b60006020828403121561359457613593612b24565b5b60006135a284828501613569565b91505092915050565b7f496e73756666696369656e742062616c616e636520666f722072657761726473600082015250565b60006135e1602083612bf4565b91506135ec826135ab565b602082019050919050565b60006020820190508181036000830152613610816135d4565b9050919050565b600060608201905061362c6000830186612d26565b6136396020830185612af0565b6136466040830184612d26565b949350505050565b7f4f6e6c792047616c6163746963204720726f6c65206f776e65727320616c6c6f60008201527f7765640000000000000000000000000000000000000000000000000000000000602082015250565b60006136aa602383612bf4565b91506136b58261364e565b604082019050919050565b600060208201905081810360008301526136d98161369d565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026137427fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613705565b61374c8683613705565b95508019841693508086168417925050509392505050565b600061377f61377a61377584612ae6565b613156565b612ae6565b9050919050565b6000819050919050565b61379983613764565b6137ad6137a582613786565b848454613712565b825550505050565b600090565b6137c26137b5565b6137cd818484613790565b505050565b5b818110156137f1576137e66000826137ba565b6001810190506137d3565b5050565b601f82111561383657613807816136e0565b613810846136f5565b8101602085101561381f578190505b61383361382b856136f5565b8301826137d2565b50505b505050565b600082821c905092915050565b60006138596000198460080261383b565b1980831691505092915050565b60006138728383613848565b9150826002028217905092915050565b61388b82612be9565b67ffffffffffffffff8111156138a4576138a36131d5565b5b6138ae82546133f2565b6138b98282856137f5565b600060209050601f8311600181146138ec57600084156138da578287015190505b6138e48582613866565b86555061394c565b601f1984166138fa866136e0565b60005b82811015613922578489015182556001820191506020850194506020810190506138fd565b8683101561393f578489015161393b601f891682613848565b8355505b6001600288020188555050505b505050505050565b60006139608385612bf4565b935061396d838584613281565b61397683612c2f565b840190509392505050565b6000602082019050818103600083015261399c818486613954565b90509392505050565b7f4d656d65206e6f74207375626d69747465640000000000000000000000000000600082015250565b60006139db601283612bf4565b91506139e6826139a5565b602082019050919050565b60006020820190508181036000830152613a0a816139ce565b9050919050565b600081905092915050565b6000613a2782612be9565b613a318185613a11565b9350613a41818560208601612c05565b80840191505092915050565b6000613a598285613a1c565b9150613a658284613a1c565b91508190509392505050565b7f4f6e6c792063726561746f722063616e206d696e740000000000000000000000600082015250565b6000613aa7601583612bf4565b9150613ab282613a71565b602082019050919050565b60006020820190508181036000830152613ad681613a9a565b9050919050565b7f4d656d6520616c7265616479206d696e74656400000000000000000000000000600082015250565b6000613b13601383612bf4565b9150613b1e82613add565b602082019050919050565b60006020820190508181036000830152613b4281613b06565b9050919050565b6000604082019050613b5e6000830185612d26565b613b6b6020830184612af0565b9392505050565b6000606082019050613b876000830186612d26565b613b946020830185612d26565b613ba16040830184612af0565b949350505050565b600081519050919050565b600082825260208201905092915050565b6000613bd082613ba9565b613bda8185613bb4565b9350613bea818560208601612c05565b613bf381612c2f565b840191505092915050565b6000608082019050613c136000830187612d26565b613c206020830186612d26565b613c2d6040830185612af0565b8181036060830152613c3f8184613bc5565b905095945050505050565b600081519050613c5981612b5a565b92915050565b600060208284031215613c7557613c74612b24565b5b6000613c8384828501613c4a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea26469706673582212206904fb05828c7846a54b24d4bbb4e2d865fe65dccc67ca86fa729add1055b4aa64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1EF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE8888942 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE8888942 EQ PUSH2 0x593 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x5B1 JUMPI DUP1 PUSH4 0xEB3A9EF7 EQ PUSH2 0x5E1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5FD JUMPI PUSH2 0x1EF JUMP JUMPDEST DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x50B JUMPI DUP1 PUSH4 0xDA2B4C1E EQ PUSH2 0x53B JUMPI DUP1 PUSH4 0xDC185604 EQ PUSH2 0x559 JUMPI DUP1 PUSH4 0xDCE0B4E4 EQ PUSH2 0x575 JUMPI PUSH2 0x1EF JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x497 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4B5 JUMPI DUP1 PUSH4 0xB24C4FA0 EQ PUSH2 0x4D1 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x4EF JUMPI PUSH2 0x1EF JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x7E39CB2B EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0x867D6073 EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x479 JUMPI PUSH2 0x1EF JUMP JUMPDEST DUP1 PUSH4 0x2F5B6FFE GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x5E318E07 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x5E318E07 EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0x6FCBA377 EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x407 JUMPI PUSH2 0x1EF JUMP JUMPDEST DUP1 PUSH4 0x2F5B6FFE EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x388F6064 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x5A64AD95 EQ PUSH2 0x381 JUMPI PUSH2 0x1EF JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x143BA4F3 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x1809B5F5 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2E4 JUMPI PUSH2 0x1EF JUMP JUMPDEST DUP1 PUSH3 0x9A9B7B EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x260 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FC PUSH2 0x619 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x2B86 JUMP JUMPDEST PUSH2 0x61F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x2BCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24A PUSH2 0x680 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x2C79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x2CC7 JUMP JUMPDEST PUSH2 0x712 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x2D7C JUMP JUMPDEST PUSH2 0x72E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x2E77 JUMP JUMPDEST PUSH2 0x744 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x2EF8 JUMP JUMPDEST PUSH2 0x976 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x2F25 JUMP JUMPDEST PUSH2 0x9D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x315 SWAP2 SWAP1 PUSH2 0x2EF8 JUMP JUMPDEST PUSH2 0xADB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x2BCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x2CC7 JUMP JUMPDEST PUSH2 0xAFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35C SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x2F25 JUMP JUMPDEST PUSH2 0xBF9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x389 PUSH2 0xC19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x2CC7 JUMP JUMPDEST PUSH2 0xC1F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x2CC7 JUMP JUMPDEST PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x405 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x400 SWAP2 SWAP1 PUSH2 0x2FE0 JUMP JUMPDEST PUSH2 0xC90 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x421 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41C SWAP2 SWAP1 PUSH2 0x2EF8 JUMP JUMPDEST PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43F PUSH2 0xD74 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x45B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x456 SWAP2 SWAP1 PUSH2 0x309D JUMP JUMPDEST PUSH2 0xD88 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x477 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x472 SWAP2 SWAP1 PUSH2 0x2CC7 JUMP JUMPDEST PUSH2 0x102D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x481 PUSH2 0x11E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48E SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49F PUSH2 0x120F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AC SWAP2 SWAP1 PUSH2 0x2C79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4CA SWAP2 SWAP1 PUSH2 0x3116 JUMP JUMPDEST PUSH2 0x12A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D9 PUSH2 0x12B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E6 SWAP2 SWAP1 PUSH2 0x31B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x509 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x504 SWAP2 SWAP1 PUSH2 0x3300 JUMP JUMPDEST PUSH2 0x12DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x525 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x520 SWAP2 SWAP1 PUSH2 0x2CC7 JUMP JUMPDEST PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x532 SWAP2 SWAP1 PUSH2 0x2C79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x543 PUSH2 0x1415 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x550 SWAP2 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x573 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x56E SWAP2 SWAP1 PUSH2 0x2EF8 JUMP JUMPDEST PUSH2 0x141B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x57D PUSH2 0x147E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58A SWAP2 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59B PUSH2 0x1484 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A8 SWAP2 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C6 SWAP2 SWAP1 PUSH2 0x3383 JUMP JUMPDEST PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D8 SWAP2 SWAP1 PUSH2 0x2BCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F6 SWAP2 SWAP1 PUSH2 0x2CC7 JUMP JUMPDEST PUSH2 0x151E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x617 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x612 SWAP2 SWAP1 PUSH2 0x2EF8 JUMP JUMPDEST PUSH2 0x184C JUMP JUMPDEST STOP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x679 JUMPI POP PUSH2 0x678 DUP3 PUSH2 0x18D2 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x68F SWAP1 PUSH2 0x33F2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6BB SWAP1 PUSH2 0x33F2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x708 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6DD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x708 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6EB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x71D DUP3 PUSH2 0x19B4 JUMP JUMPDEST POP PUSH2 0x727 DUP3 PUSH2 0x1A3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x740 DUP3 DUP3 PUSH2 0x73B PUSH2 0x1A79 JUMP JUMPDEST PUSH2 0x1A81 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x74C PUSH2 0x1A93 JUMP JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0x794 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78B SWAP1 PUSH2 0x346F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP6 DUP6 SWAP1 POP DUP2 LT ISZERO PUSH2 0x7E1 JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x7BA JUMPI PUSH2 0x7B9 PUSH2 0x348F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH2 0x7CC SWAP2 SWAP1 PUSH2 0x34ED JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x7D9 SWAP1 PUSH2 0x3521 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x79C JUMP JUMPDEST POP DUP1 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83E SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x85B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x87F SWAP2 SWAP1 PUSH2 0x357E JUMP JUMPDEST LT ISZERO PUSH2 0x8C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B7 SWAP1 PUSH2 0x35F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP6 SWAP1 POP DUP2 LT ISZERO PUSH2 0x96E JUMPI PUSH2 0x95B DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0x8E4 JUMPI PUSH2 0x8E3 PUSH2 0x348F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x8F9 SWAP2 SWAP1 PUSH2 0x2EF8 JUMP JUMPDEST DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x90C JUMPI PUSH2 0x90B PUSH2 0x348F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B1A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 DUP1 PUSH2 0x966 SWAP1 PUSH2 0x3521 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8C3 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x97E PUSH2 0x1A93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA4B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA42 SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA5F DUP4 DUP4 PUSH2 0xA5A PUSH2 0x1A79 JUMP JUMPDEST PUSH2 0x1B99 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAD5 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0xB4A SWAP1 PUSH2 0x33F2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB76 SWAP1 PUSH2 0x33F2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBC3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB98 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBC3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBA6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP7 JUMP JUMPDEST PUSH2 0xC14 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x12DD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC27 PUSH2 0x1A93 JUMP JUMPDEST PUSH2 0xC7B PUSH2 0xC32 PUSH2 0x11E5 JUMP JUMPDEST DUP3 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B1A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC89 DUP3 PUSH2 0x19B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC98 PUSH2 0x1A93 JUMP JUMPDEST DUP4 PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0xA DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xB DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xC DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD2D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD24 SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD7C PUSH2 0x1A93 JUMP JUMPDEST PUSH2 0xD86 PUSH1 0x0 PUSH2 0x1DB3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xE14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0B SWAP1 PUSH2 0x36C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE65 CALLER ADDRESS PUSH1 0xB SLOAD PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E79 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xE78 SWAP1 PUSH2 0x3521 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD SLOAD DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0xE PUSH1 0x0 PUSH1 0xD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0xF88 SWAP2 SWAP1 PUSH2 0x3882 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xD SLOAD PUSH32 0x5A20AB1D9DC88654CE4B0ECD06DBBB66115F3E86CFE70F6717102BCAE2A4A5C0 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1021 SWAP3 SWAP2 SWAP1 PUSH2 0x3981 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x10B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B0 SWAP1 PUSH2 0x36C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x110A CALLER ADDRESS PUSH1 0xC SLOAD PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E79 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1172 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1169 SWAP1 PUSH2 0x39F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1187 SWAP2 SWAP1 PUSH2 0x34ED JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0x903D955FFC4C7D3AE887133F90927B5C2A5177CBE7AF0C949B0BF110A86AF0B1 DUP4 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x11D9 SWAP2 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x121E SWAP1 PUSH2 0x33F2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x124A SWAP1 PUSH2 0x33F2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1297 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x126C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1297 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x127A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x12B3 PUSH2 0x12AC PUSH2 0x1A79 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1EFB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x12E8 DUP5 DUP5 DUP5 PUSH2 0x9D9 JUMP JUMPDEST PUSH2 0x12FC PUSH2 0x12F3 PUSH2 0x1A79 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x206A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x130D DUP3 PUSH2 0x19B4 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x132E SWAP1 PUSH2 0x33F2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x135A SWAP1 PUSH2 0x33F2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13A7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x137C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13A7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x138A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x13B8 PUSH2 0x221B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x13CD JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x1410 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1402 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x13EA SWAP3 SWAP2 SWAP1 PUSH2 0x3A4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x1410 JUMP JUMPDEST PUSH2 0x140B DUP5 PUSH2 0x2232 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1423 PUSH2 0x1A93 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x15AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15A1 SWAP1 PUSH2 0x36C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1653 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x164A SWAP1 PUSH2 0x3ABD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x16A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x169B SWAP1 PUSH2 0x39F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x16F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16ED SWAP1 PUSH2 0x3B29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1747 CALLER ADDRESS PUSH1 0xA SLOAD PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E79 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1751 CALLER DUP4 PUSH2 0x229B JUMP JUMPDEST PUSH2 0x17E7 DUP3 DUP3 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1764 SWAP1 PUSH2 0x33F2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1790 SWAP1 PUSH2 0x33F2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17DD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17B2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x17DD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x17C0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x22B9 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0xB2BA4C72A840D1937561F5018E205CE84B4EE1FBAFCCFA1A2C56FED4B4FAED58 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1854 PUSH2 0x1A93 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18C6 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18BD SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18CF DUP2 PUSH2 0x1DB3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x199D JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x19AD JUMPI POP PUSH2 0x19AC DUP3 PUSH2 0x2315 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x19C0 DUP4 PUSH2 0x237F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A33 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A2A SWAP2 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1A8E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x23BC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1A9B PUSH2 0x1A79 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AB9 PUSH2 0x11E5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B18 JUMPI PUSH2 0x1ADC PUSH2 0x1A79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B0F SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1B94 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1B4D SWAP3 SWAP2 SWAP1 PUSH2 0x3B49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2581 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1BA5 DUP5 PUSH2 0x237F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BE7 JUMPI PUSH2 0x1BE6 DUP2 DUP5 DUP7 PUSH2 0x2623 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C78 JUMPI PUSH2 0x1C29 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x23BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CFB JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1EF5 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1EAE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2581 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F6C JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F63 SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x205D SWAP2 SWAP1 PUSH2 0x2BCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x2214 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20C9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3BFE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2105 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2102 SWAP2 SWAP1 PUSH2 0x3C5F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2189 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2135 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x213A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x2181 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2178 SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x2212 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2209 SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x223D DUP3 PUSH2 0x19B4 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2248 PUSH2 0x221B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x2268 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2293 JUMP JUMPDEST DUP1 PUSH2 0x2272 DUP5 PUSH2 0x26E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2283 SWAP3 SWAP2 SWAP1 PUSH2 0x3A4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22B5 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x27B5 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x22D9 SWAP2 SWAP1 PUSH2 0x3882 JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2309 SWAP2 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x23F5 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2529 JUMPI PUSH1 0x0 PUSH2 0x2405 DUP5 PUSH2 0x19B4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2470 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2483 JUMPI POP PUSH2 0x2481 DUP2 DUP5 PUSH2 0x148A JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x24C5 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24BC SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x2527 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x25A4 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH1 0x0 MLOAD SWAP2 POP POP PUSH1 0x0 DUP3 EQ PUSH2 0x25BF JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x25DB JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x261D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2614 SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x262E DUP4 DUP4 DUP4 PUSH2 0x27D9 JUMP JUMPDEST PUSH2 0x26E2 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x26A3 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x269A SWAP2 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26D9 SWAP3 SWAP2 SWAP1 PUSH2 0x3B49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x26F6 DUP5 PUSH2 0x289A JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2715 JUMPI PUSH2 0x2714 PUSH2 0x31D5 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2747 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x27AA JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x279E JUMPI PUSH2 0x279D PUSH2 0x3C8C JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x2755 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27BF DUP4 DUP4 PUSH2 0x29ED JUMP JUMPDEST PUSH2 0x27D4 PUSH2 0x27CA PUSH2 0x1A79 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x206A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2891 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2852 JUMPI POP PUSH2 0x2851 DUP5 DUP5 PUSH2 0x148A JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x2890 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2878 DUP4 PUSH2 0x1A3C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x28F8 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x28EE JUMPI PUSH2 0x28ED PUSH2 0x3C8C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x2935 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x292B JUMPI PUSH2 0x292A PUSH2 0x3C8C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x2964 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x295A JUMPI PUSH2 0x2959 PUSH2 0x3C8C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x298D JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x2983 JUMPI PUSH2 0x2982 PUSH2 0x3C8C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x29B2 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x29A8 JUMPI PUSH2 0x29A7 PUSH2 0x3C8C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x29D5 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x29CB JUMPI PUSH2 0x29CA PUSH2 0x3C8C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x29E4 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2A5F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A56 SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2A6D DUP4 DUP4 PUSH1 0x0 PUSH2 0x1B99 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2AE1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AD8 SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AF9 DUP2 PUSH2 0x2AE6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B14 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2AF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B63 DUP2 PUSH2 0x2B2E JUMP JUMPDEST DUP2 EQ PUSH2 0x2B6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B80 DUP2 PUSH2 0x2B5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B9C JUMPI PUSH2 0x2B9B PUSH2 0x2B24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2BAA DUP5 DUP3 DUP6 ADD PUSH2 0x2B71 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BC8 DUP2 PUSH2 0x2BB3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2BE3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2BBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C23 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C08 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C4B DUP3 PUSH2 0x2BE9 JUMP JUMPDEST PUSH2 0x2C55 DUP2 DUP6 PUSH2 0x2BF4 JUMP JUMPDEST SWAP4 POP PUSH2 0x2C65 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2C05 JUMP JUMPDEST PUSH2 0x2C6E DUP2 PUSH2 0x2C2F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C93 DUP2 DUP5 PUSH2 0x2C40 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2CA4 DUP2 PUSH2 0x2AE6 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CC1 DUP2 PUSH2 0x2C9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CDD JUMPI PUSH2 0x2CDC PUSH2 0x2B24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CEB DUP5 DUP3 DUP6 ADD PUSH2 0x2CB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D1F DUP3 PUSH2 0x2CF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D2F DUP2 PUSH2 0x2D14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D4A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2D59 DUP2 PUSH2 0x2D14 JUMP JUMPDEST DUP2 EQ PUSH2 0x2D64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2D76 DUP2 PUSH2 0x2D50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D93 JUMPI PUSH2 0x2D92 PUSH2 0x2B24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DA1 DUP6 DUP3 DUP7 ADD PUSH2 0x2D67 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2DB2 DUP6 DUP3 DUP7 ADD PUSH2 0x2CB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2DE1 JUMPI PUSH2 0x2DE0 PUSH2 0x2DBC JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DFE JUMPI PUSH2 0x2DFD PUSH2 0x2DC1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2E1A JUMPI PUSH2 0x2E19 PUSH2 0x2DC6 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2E37 JUMPI PUSH2 0x2E36 PUSH2 0x2DBC JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E54 JUMPI PUSH2 0x2E53 PUSH2 0x2DC1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2E70 JUMPI PUSH2 0x2E6F PUSH2 0x2DC6 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2E91 JUMPI PUSH2 0x2E90 PUSH2 0x2B24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2EAF JUMPI PUSH2 0x2EAE PUSH2 0x2B29 JUMP JUMPDEST JUMPDEST PUSH2 0x2EBB DUP8 DUP3 DUP9 ADD PUSH2 0x2DCB JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2EDE JUMPI PUSH2 0x2EDD PUSH2 0x2B29 JUMP JUMPDEST JUMPDEST PUSH2 0x2EEA DUP8 DUP3 DUP9 ADD PUSH2 0x2E21 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F0E JUMPI PUSH2 0x2F0D PUSH2 0x2B24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F1C DUP5 DUP3 DUP6 ADD PUSH2 0x2D67 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2F3E JUMPI PUSH2 0x2F3D PUSH2 0x2B24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F4C DUP7 DUP3 DUP8 ADD PUSH2 0x2D67 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2F5D DUP7 DUP3 DUP8 ADD PUSH2 0x2D67 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2F6E DUP7 DUP3 DUP8 ADD PUSH2 0x2CB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2F8D PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x2AF0 JUMP JUMPDEST PUSH2 0x2F9A PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x2D26 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2FAC DUP2 DUP8 PUSH2 0x2C40 JUMP JUMPDEST SWAP1 POP PUSH2 0x2FBB PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2AF0 JUMP JUMPDEST PUSH2 0x2FC8 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2BBF JUMP JUMPDEST PUSH2 0x2FD5 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2BBF JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2FFA JUMPI PUSH2 0x2FF9 PUSH2 0x2B24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3008 DUP8 DUP3 DUP9 ADD PUSH2 0x2CB2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3019 DUP8 DUP3 DUP9 ADD PUSH2 0x2CB2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x302A DUP8 DUP3 DUP9 ADD PUSH2 0x2CB2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x303B DUP8 DUP3 DUP9 ADD PUSH2 0x2CB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x305D JUMPI PUSH2 0x305C PUSH2 0x2DBC JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x307A JUMPI PUSH2 0x3079 PUSH2 0x2DC1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x3096 JUMPI PUSH2 0x3095 PUSH2 0x2DC6 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x30B4 JUMPI PUSH2 0x30B3 PUSH2 0x2B24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x30D2 JUMPI PUSH2 0x30D1 PUSH2 0x2B29 JUMP JUMPDEST JUMPDEST PUSH2 0x30DE DUP6 DUP3 DUP7 ADD PUSH2 0x3047 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x30F3 DUP2 PUSH2 0x2BB3 JUMP JUMPDEST DUP2 EQ PUSH2 0x30FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3110 DUP2 PUSH2 0x30EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x312D JUMPI PUSH2 0x312C PUSH2 0x2B24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x313B DUP6 DUP3 DUP7 ADD PUSH2 0x2D67 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x314C DUP6 DUP3 DUP7 ADD PUSH2 0x3101 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x317B PUSH2 0x3176 PUSH2 0x3171 DUP5 PUSH2 0x2CF4 JUMP JUMPDEST PUSH2 0x3156 JUMP JUMPDEST PUSH2 0x2CF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x318D DUP3 PUSH2 0x3160 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x319F DUP3 PUSH2 0x3182 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31AF DUP2 PUSH2 0x3194 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x31CA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x31A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x320D DUP3 PUSH2 0x2C2F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x322C JUMPI PUSH2 0x322B PUSH2 0x31D5 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x323F PUSH2 0x2B1A JUMP JUMPDEST SWAP1 POP PUSH2 0x324B DUP3 DUP3 PUSH2 0x3204 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x326B JUMPI PUSH2 0x326A PUSH2 0x31D5 JUMP JUMPDEST JUMPDEST PUSH2 0x3274 DUP3 PUSH2 0x2C2F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32A3 PUSH2 0x329E DUP5 PUSH2 0x3250 JUMP JUMPDEST PUSH2 0x3235 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x32BF JUMPI PUSH2 0x32BE PUSH2 0x31D0 JUMP JUMPDEST JUMPDEST PUSH2 0x32CA DUP5 DUP3 DUP6 PUSH2 0x3281 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x32E7 JUMPI PUSH2 0x32E6 PUSH2 0x2DBC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x32F7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3290 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x331A JUMPI PUSH2 0x3319 PUSH2 0x2B24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3328 DUP8 DUP3 DUP9 ADD PUSH2 0x2D67 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3339 DUP8 DUP3 DUP9 ADD PUSH2 0x2D67 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x334A DUP8 DUP3 DUP9 ADD PUSH2 0x2CB2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x336B JUMPI PUSH2 0x336A PUSH2 0x2B29 JUMP JUMPDEST JUMPDEST PUSH2 0x3377 DUP8 DUP3 DUP9 ADD PUSH2 0x32D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x339A JUMPI PUSH2 0x3399 PUSH2 0x2B24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x33A8 DUP6 DUP3 DUP7 ADD PUSH2 0x2D67 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x33B9 DUP6 DUP3 DUP7 ADD PUSH2 0x2D67 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x340A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x341D JUMPI PUSH2 0x341C PUSH2 0x33C3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D69736D617463686564206172726179206C656E677468730000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3459 PUSH1 0x18 DUP4 PUSH2 0x2BF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3464 DUP3 PUSH2 0x3423 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3488 DUP2 PUSH2 0x344C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x34F8 DUP3 PUSH2 0x2AE6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3503 DUP4 PUSH2 0x2AE6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x351B JUMPI PUSH2 0x351A PUSH2 0x34BE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x352C DUP3 PUSH2 0x2AE6 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x355E JUMPI PUSH2 0x355D PUSH2 0x34BE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3578 DUP2 PUSH2 0x2C9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3594 JUMPI PUSH2 0x3593 PUSH2 0x2B24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35A2 DUP5 DUP3 DUP6 ADD PUSH2 0x3569 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E636520666F722072657761726473 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35E1 PUSH1 0x20 DUP4 PUSH2 0x2BF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x35EC DUP3 PUSH2 0x35AB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3610 DUP2 PUSH2 0x35D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x362C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2D26 JUMP JUMPDEST PUSH2 0x3639 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2AF0 JUMP JUMPDEST PUSH2 0x3646 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2D26 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792047616C6163746963204720726F6C65206F776E65727320616C6C6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7765640000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36AA PUSH1 0x23 DUP4 PUSH2 0x2BF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x36B5 DUP3 PUSH2 0x364E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36D9 DUP2 PUSH2 0x369D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x3742 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3705 JUMP JUMPDEST PUSH2 0x374C DUP7 DUP4 PUSH2 0x3705 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x377F PUSH2 0x377A PUSH2 0x3775 DUP5 PUSH2 0x2AE6 JUMP JUMPDEST PUSH2 0x3156 JUMP JUMPDEST PUSH2 0x2AE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3799 DUP4 PUSH2 0x3764 JUMP JUMPDEST PUSH2 0x37AD PUSH2 0x37A5 DUP3 PUSH2 0x3786 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x3712 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x37C2 PUSH2 0x37B5 JUMP JUMPDEST PUSH2 0x37CD DUP2 DUP5 DUP5 PUSH2 0x3790 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x37F1 JUMPI PUSH2 0x37E6 PUSH1 0x0 DUP3 PUSH2 0x37BA JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x37D3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3836 JUMPI PUSH2 0x3807 DUP2 PUSH2 0x36E0 JUMP JUMPDEST PUSH2 0x3810 DUP5 PUSH2 0x36F5 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x381F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3833 PUSH2 0x382B DUP6 PUSH2 0x36F5 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x37D2 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3859 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x383B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3872 DUP4 DUP4 PUSH2 0x3848 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x388B DUP3 PUSH2 0x2BE9 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x38A4 JUMPI PUSH2 0x38A3 PUSH2 0x31D5 JUMP JUMPDEST JUMPDEST PUSH2 0x38AE DUP3 SLOAD PUSH2 0x33F2 JUMP JUMPDEST PUSH2 0x38B9 DUP3 DUP3 DUP6 PUSH2 0x37F5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x38EC JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x38DA JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x38E4 DUP6 DUP3 PUSH2 0x3866 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x394C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x38FA DUP7 PUSH2 0x36E0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3922 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x38FD JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x393F JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x393B PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3848 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3960 DUP4 DUP6 PUSH2 0x2BF4 JUMP JUMPDEST SWAP4 POP PUSH2 0x396D DUP4 DUP6 DUP5 PUSH2 0x3281 JUMP JUMPDEST PUSH2 0x3976 DUP4 PUSH2 0x2C2F JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x399C DUP2 DUP5 DUP7 PUSH2 0x3954 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4D656D65206E6F74207375626D69747465640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39DB PUSH1 0x12 DUP4 PUSH2 0x2BF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x39E6 DUP3 PUSH2 0x39A5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A0A DUP2 PUSH2 0x39CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A27 DUP3 PUSH2 0x2BE9 JUMP JUMPDEST PUSH2 0x3A31 DUP2 DUP6 PUSH2 0x3A11 JUMP JUMPDEST SWAP4 POP PUSH2 0x3A41 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2C05 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A59 DUP3 DUP6 PUSH2 0x3A1C JUMP JUMPDEST SWAP2 POP PUSH2 0x3A65 DUP3 DUP5 PUSH2 0x3A1C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792063726561746F722063616E206D696E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AA7 PUSH1 0x15 DUP4 PUSH2 0x2BF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3AB2 DUP3 PUSH2 0x3A71 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3AD6 DUP2 PUSH2 0x3A9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D656D6520616C7265616479206D696E74656400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B13 PUSH1 0x13 DUP4 PUSH2 0x2BF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B1E DUP3 PUSH2 0x3ADD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B42 DUP2 PUSH2 0x3B06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3B5E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D26 JUMP JUMPDEST PUSH2 0x3B6B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2AF0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3B87 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2D26 JUMP JUMPDEST PUSH2 0x3B94 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2D26 JUMP JUMPDEST PUSH2 0x3BA1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2AF0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BD0 DUP3 PUSH2 0x3BA9 JUMP JUMPDEST PUSH2 0x3BDA DUP2 DUP6 PUSH2 0x3BB4 JUMP JUMPDEST SWAP4 POP PUSH2 0x3BEA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2C05 JUMP JUMPDEST PUSH2 0x3BF3 DUP2 PUSH2 0x2C2F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3C13 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2D26 JUMP JUMPDEST PUSH2 0x3C20 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2D26 JUMP JUMPDEST PUSH2 0x3C2D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2AF0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3C3F DUP2 DUP5 PUSH2 0x3BC5 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3C59 DUP2 PUSH2 0x2B5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C75 JUMPI PUSH2 0x3C74 PUSH2 0x2B24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3C83 DUP5 DUP3 DUP6 ADD PUSH2 0x3C4A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x4FB05828C7846A54B24 0xD4 0xBB 0xB4 0xE2 0xD8 PUSH6 0xFE65DCCC67CA DUP7 STATICCALL PUSH19 0x9ADD1055B4AA64736F6C634300081400330000 ","sourceMap":"314:5906:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;860:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;938:207:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2364:89:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3496:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3322:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5454:550:23;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2665:98;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4142:578:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1379:43:23;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1250:37;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;4786:132:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;634:25:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6106:112;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2184:118:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2947:319:23;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1919:208:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;3461:605:23;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4958:404;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2517:93:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3717:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;451:22:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4984:233:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1211:593:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;774:22:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2773:102;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;562:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;699:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3927:153:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4206:612:23;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;860:29:23;;;;:::o;938:207:12:-;1040:4;761:10;754:18;;1063:35;;;:11;:35;;;;:75;;;;1102:36;1126:11;1102:23;:36::i;:::-;1063:75;1056:82;;938:207;;;:::o;2364:89:9:-;2409:13;2441:5;2434:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2364:89;:::o;3496:154::-;3563:7;3582:22;3596:7;3582:13;:22::i;:::-;;3622:21;3635:7;3622:12;:21::i;:::-;3615:28;;3496:154;;;:::o;3322:113::-;3393:35;3402:2;3406:7;3415:12;:10;:12::i;:::-;3393:8;:35::i;:::-;3322:113;;:::o;5454:550:23:-;1531:13:0;:11;:13::i;:::-;5592:7:23::1;;:14;;5574:7;;:14;;:32;5566:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;5646:19;5680:9:::0;5692:1:::1;5680:13;;5675:95;5699:7;;:14;;5695:1;:18;5675:95;;;5749:7;;5757:1;5749:10;;;;;;;:::i;:::-;;;;;;;;5734:25;;;;;:::i;:::-;;;5715:3;;;;;:::i;:::-;;;;5675:95;;;;5824:11;5787:8;;;;;;;;;;;:18;;;5814:4;5787:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;;5779:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;5888:9;5883:115;5907:7;;:14;;5903:1;:18;5883:115;;;5942:45;5964:7;;5972:1;5964:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;5976:7;;5984:1;5976:10;;;;;;;:::i;:::-;;;;;;;;5942:8;;;;;;;;;;;:21;;;;:45;;;;;:::i;:::-;5923:3;;;;;:::i;:::-;;;;5883:115;;;;5556:448;5454:550:::0;;;;:::o;2665:98::-;1531:13:0;:11;:13::i;:::-;2752:4:23::1;2731:11;:18;2743:5;2731:18;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;2665:98:::0;:::o;4142:578:9:-;4250:1;4236:16;;:2;:16;;;4232:87;;4305:1;4275:33;;;;;;;;;;;:::i;:::-;;;;;;;;4232:87;4537:21;4561:34;4569:2;4573:7;4582:12;:10;:12::i;:::-;4561:7;:34::i;:::-;4537:58;;4626:4;4609:21;;:13;:21;;;4605:109;;4674:4;4680:7;4689:13;4653:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4605:109;4222:498;4142:578;;;:::o;1379:43:23:-;;;;;;;;;;;;;;;;;;;;;;:::o;1250:37::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4786:132:9:-;4872:39;4889:4;4895:2;4899:7;4872:39;;;;;;;;;;;;:16;:39::i;:::-;4786:132;;;:::o;634:25:23:-;;;;:::o;6106:112::-;1531:13:0;:11;:13::i;:::-;6173:38:23::1;6195:7;:5;:7::i;:::-;6204:6;6173:8;;;;;;;;;;;:21;;;;:38;;;;;:::i;:::-;6106:112:::0;:::o;2184:118:9:-;2247:7;2273:22;2287:7;2273:13;:22::i;:::-;2266:29;;2184:118;;;:::o;2947:319:23:-;1531:13:0;:11;:13::i;:::-;3133:12:23::1;3116:11;:29;;;;3172:11;3155:10;:28;;;;3210:14;3193:13;:31;;;;3251:8;3234:7;:25;;;;2947:319:::0;;;;:::o;1919:208:9:-;1982:7;2022:1;2005:19;;:5;:19;;;2001:87;;2074:1;2047:30;;;;;;;;;;;:::i;:::-;;;;;;;;2001:87;2104:9;:16;2114:5;2104:16;;;;;;;;;;;;;;;;2097:23;;1919:208;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;3461:605:23:-;2485:11;:23;2497:10;2485:23;;;;;;;;;;;;;;;;;;;;;;;;;2477:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;3609:67:::1;3635:10;3655:4;3662:13;;3609:8;;;;;;;;;;;:25;;;;:67;;;;;;:::i;:::-;3745:14;;:16;;;;;;;;;:::i;:::-;;;;;;3795:198;;;;;;;;3823:14;;3795:198;;;;3860:10;3795:198;;;;;;3893:7;;3795:198;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3925:1;3795:198;;;;3948:5;3795:198;;;;;;3978:4;3795:198;;;;::::0;3771:5:::1;:21;3777:14;;3771:21;;;;;;;;;;;:222;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4039:10;4009:50;;4023:14;;4009:50;4051:7;;4009:50;;;;;;;:::i;:::-;;;;;;;;3461:605:::0;;:::o;4958:404::-;2485:11;:23;2497:10;2485:23;;;;;;;;;;;;;;;;;;;;;;;;;2477:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;5073:61:::1;5099:10;5119:4;5126:7;;5073:8;;;;;;;;;;;:25;;;;:61;;;;;;:::i;:::-;5144:17;5164:5;:13;5170:6;5164:13;;;;;;;;;;;5144:33;;5195:4;:14;;;;;;;;;;;;5187:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;5293:1;5275:4;:14;;;:19;;;;;;;:::i;:::-;;;;;;;;5328:10;5310:45;;5320:6;5310:45;5340:4;:14;;;5310:45;;;;;;:::i;:::-;;;;;;;;5019:343;4958:404:::0;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2517:93:9:-;2564:13;2596:7;2589:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2517:93;:::o;3717:144::-;3802:52;3821:12;:10;:12::i;:::-;3835:8;3845;3802:18;:52::i;:::-;3717:144;;:::o;451:22:23:-;;;;;;;;;;;;;:::o;4984:233:9:-;5097:31;5110:4;5116:2;5120:7;5097:12;:31::i;:::-;5138:72;5172:12;:10;:12::i;:::-;5186:4;5192:2;5196:7;5205:4;5138:33;:72::i;:::-;4984:233;;;;:::o;1211:593:12:-;1284:13;1309:22;1323:7;1309:13;:22::i;:::-;;1342:23;1368:10;:19;1379:7;1368:19;;;;;;;;;;;1342:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1397:18;1418:10;:8;:10::i;:::-;1397:31;;1523:1;1507:4;1501:18;:23;1497:70;;1547:9;1540:16;;;;;;1497:70;1692:1;1672:9;1666:23;:27;1662:95;;;1730:4;1736:9;1716:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1709:37;;;;;;1662:95;1774:23;1789:7;1774:14;:23::i;:::-;1767:30;;;;1211:593;;;;:::o;774:22:23:-;;;;:::o;2773:102::-;1531:13:0;:11;:13::i;:::-;2863:5:23::1;2842:11;:18;2854:5;2842:18;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;2773:102:::0;:::o;562:26::-;;;;:::o;699:28::-;;;;:::o;3927:153:9:-;4015:4;4038:18;:25;4057:5;4038:25;;;;;;;;;;;;;;;:35;4064:8;4038:35;;;;;;;;;;;;;;;;;;;;;;;;;4031:42;;3927:153;;;;:::o;4206:612:23:-;2485:11;:23;2497:10;2485:23;;;;;;;;;;;;;;;;;;;;;;;;;2477:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;4277:17:::1;4297:5;:13;4303:6;4297:13;;;;;;;;;;;4277:33;;4344:10;4328:26;;:4;:12;;;;;;;;;;;;:26;;;4320:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;4398:4;:14;;;;;;;;;;;;4390:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;4454:4;:11;;;;;;;;;;;;4453:12;4445:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;4546:64;4572:10;4592:4;4599:10;;4546:8;;;;;;;;;;;:25;;;;:64;;;;;;:::i;:::-;4664:29;4674:10;4686:6;4664:9;:29::i;:::-;4703:34;4716:6;4724:4;:12;;4703:34;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:12;:34::i;:::-;4761:4;4747;:11;;;:18;;;;;;;;;;;;;;;;;;4800:10;4781:30;;4792:6;4781:30;;;;;;;;;;4267:551;4206:612:::0;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1560:300:9:-;1662:4;1712:25;1697:40;;;:11;:40;;;;:104;;;;1768:33;1753:48;;;:11;:48;;;;1697:104;:156;;;;1817:36;1841:11;1817:23;:36::i;:::-;1697:156;1678:175;;1560:300;;;:::o;16212:241::-;16275:7;16294:13;16310:17;16319:7;16310:8;:17::i;:::-;16294:33;;16358:1;16341:19;;:5;:19;;;16337:88;;16406:7;16383:31;;;;;;;;;;;:::i;:::-;;;;;;;;16337:88;16441:5;16434:12;;;16212:241;;;:::o;5963:127::-;6033:7;6059:15;:24;6075:7;6059:24;;;;;;;;;;;;;;;;;;;;;6052:31;;5963:127;;;:::o;656:96:15:-;709:7;735:10;728:17;;656:96;:::o;14492:120:9:-;14572:33;14581:2;14585:7;14594:4;14600;14572:8;:33::i;:::-;14492:120;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;1219:160:8:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;8861:795:9:-;8947:7;8966:12;8981:17;8990:7;8981:8;:17::i;:::-;8966:32;;9074:1;9058:18;;:4;:18;;;9054:86;;9092:37;9109:4;9115;9121:7;9092:16;:37::i;:::-;9054:86;9200:1;9184:18;;:4;:18;;;9180:256;;9300:48;9317:1;9321:7;9338:1;9342:5;9300:8;:48::i;:::-;9410:1;9391:9;:15;9401:4;9391:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9180:256;9464:1;9450:16;;:2;:16;;;9446:107;;9527:1;9510:9;:13;9520:2;9510:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9446:107;9582:2;9563:7;:16;9571:7;9563:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9619:7;9615:2;9600:27;;9609:4;9600:27;;;;;;;;;;;;9645:4;9638:11;;;8861:795;;;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1618:188:8:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;15665:312:9:-;15792:1;15772:22;;:8;:22;;;15768:91;;15839:8;15817:31;;;;;;;;;;;:::i;:::-;;;;;;;;15768:91;15906:8;15868:18;:25;15887:5;15868:25;;;;;;;;;;;;;;;:35;15894:8;15868:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15951:8;15929:41;;15944:5;15929:41;;;15961:8;15929:41;;;;;;:::i;:::-;;;;;;;;15665:312;;;:::o;985:924:14:-;1182:1;1165:2;:14;;;:18;1161:742;;;1219:2;1203:36;;;1240:8;1250:4;1256:7;1265:4;1203:67;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1199:694;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1577:1;1560:6;:13;:18;1556:323;;1700:2;1664:39;;;;;;;;;;;:::i;:::-;;;;;;;;1556:323;1831:6;1825:13;1816:6;1812:2;1808:15;1801:38;1199:694;1327:41;;;1317:51;;;:6;:51;;;;1313:182;;1473:2;1437:39;;;;;;;;;;;:::i;:::-;;;;;;;;1313:182;1271:238;1161:742;985:924;;;;;:::o;3173:92:9:-;3224:13;3249:9;;;;;;;;;;;;;;3173:92;:::o;2676:255::-;2740:13;2765:22;2779:7;2765:13;:22::i;:::-;;2798:21;2822:10;:8;:10::i;:::-;2798:34;;2873:1;2855:7;2849:21;:25;:75;;;;;;;;;;;;;;;;;2891:7;2900:18;:7;:16;:18::i;:::-;2877:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2849:75;2842:82;;;2676:255;;;:::o;10656:100::-;10723:26;10733:2;10737:7;10723:26;;;;;;;;;;;;:9;:26::i;:::-;10656:100;;:::o;1923:167:12:-;2036:9;2014:10;:19;2025:7;2014:19;;;;;;;;;;;:31;;;;;;:::i;:::-;;2060:23;2075:7;2060:23;;;;;;:::i;:::-;;;;;;;;1923:167;;:::o;763:146:18:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;5732:115:9:-;5798:7;5824;:16;5832:7;5824:16;;;;;;;;;;;;;;;;;;;;;5817:23;;5732:115;;;:::o;14794:662::-;14954:9;:31;;;;14983:1;14967:18;;:4;:18;;;;14954:31;14950:460;;;15001:13;15017:22;15031:7;15017:13;:22::i;:::-;15001:38;;15183:1;15167:18;;:4;:18;;;;:35;;;;;15198:4;15189:13;;:5;:13;;;;15167:35;:69;;;;;15207:29;15224:5;15231:4;15207:16;:29::i;:::-;15206:30;15167:69;15163:142;;;15285:4;15263:27;;;;;;;;;;;:::i;:::-;;;;;;;;15163:142;15323:9;15319:81;;;15377:7;15373:2;15357:28;;15366:5;15357:28;;;;;;;;;;;;15319:81;14987:423;14950:460;15447:2;15420:15;:24;15436:7;15420:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14794:662;;;;:::o;7686:720:8:-;7766:18;7794:19;7932:4;7929:1;7922:4;7916:11;7909:4;7903;7899:15;7896:1;7889:5;7882;7877:60;7989:7;7979:176;;8033:4;8027:11;8078:16;8075:1;8070:3;8055:40;8124:16;8119:3;8112:29;7979:176;8182:16;8168:30;;8232:1;8226:8;8211:23;;7848:396;8272:1;8258:10;:15;:68;;8325:1;8310:11;:16;;8258:68;;;8306:1;8284:5;8276:26;;;:31;8258:68;8254:146;;;8382:5;8349:40;;;;;;;;;;;:::i;:::-;;;;;;;;8254:146;7756:650;;7686:720;;:::o;7105:368:9:-;7217:38;7231:5;7238:7;7247;7217:13;:38::i;:::-;7212:255;;7292:1;7275:19;;:5;:19;;;7271:186;;7344:7;7321:31;;;;;;;;;;;:::i;:::-;;;;;;;;7271:186;7425:7;7434;7398:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7212:255;7105:368;;;:::o;987:632:17:-;1043:13;1092:14;1129:1;1109:17;1120:5;1109:10;:17::i;:::-;:21;1092:38;;1144:20;1178:6;1167:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1144:41;;1199:11;1294:6;1290:2;1286:15;1278:6;1274:28;1267:35;;1329:247;1336:4;1329:247;;;1360:5;;;;;;;;1464:10;1459:2;1452:5;1448:14;1443:32;1438:3;1430:46;1520:2;1511:11;;;;;;:::i;:::-;;;;;1553:1;1544:5;:10;1329:247;1540:21;1329:247;1596:6;1589:13;;;;;987:632;;;:::o;10977:207:9:-;11071:18;11077:2;11081:7;11071:5;:18::i;:::-;11099:78;11133:12;:10;:12::i;:::-;11155:1;11159:2;11163:7;11172:4;11099:33;:78::i;:::-;10977:207;;;:::o;6401:272::-;6504:4;6558:1;6539:21;;:7;:21;;;;:127;;;;;6586:7;6577:16;;:5;:16;;;:52;;;;6597:32;6614:5;6621:7;6597:16;:32::i;:::-;6577:52;:88;;;;6658:7;6633:32;;:21;6646:7;6633:12;:21::i;:::-;:32;;;6577:88;6539:127;6520:146;;6401:272;;;;;:::o;25316:916:20:-;25369:7;25388:14;25405:1;25388:18;;25453:8;25444:5;:17;25440:103;;25490:8;25481:17;;;;;;:::i;:::-;;;;;25526:2;25516:12;;;;25440:103;25569:8;25560:5;:17;25556:103;;25606:8;25597:17;;;;;;:::i;:::-;;;;;25642:2;25632:12;;;;25556:103;25685:8;25676:5;:17;25672:103;;25722:8;25713:17;;;;;;:::i;:::-;;;;;25758:2;25748:12;;;;25672:103;25801:7;25792:5;:16;25788:100;;25837:7;25828:16;;;;;;:::i;:::-;;;;;25872:1;25862:11;;;;25788:100;25914:7;25905:5;:16;25901:100;;25950:7;25941:16;;;;;;:::i;:::-;;;;;25985:1;25975:11;;;;25901:100;26027:7;26018:5;:16;26014:100;;26063:7;26054:16;;;;;;:::i;:::-;;;;;26098:1;26088:11;;;;26014:100;26140:7;26131:5;:16;26127:66;;26177:1;26167:11;;;;26127:66;26219:6;26212:13;;;25316:916;;;:::o;9978:327:9:-;10059:1;10045:16;;:2;:16;;;10041:87;;10114:1;10084:33;;;;;;;;;;;:::i;:::-;;;;;;;;10041:87;10137:21;10161:32;10169:2;10173:7;10190:1;10161:7;:32::i;:::-;10137:56;;10232:1;10207:27;;:13;:27;;;10203:96;;10285:1;10257:31;;;;;;;;;;;:::i;:::-;;;;;;;;10203:96;10031:274;9978:327;;:::o;7:77:25:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:75::-;475:6;508:2;502:9;492:19;;442:75;:::o;523:117::-;632:1;629;622:12;646:117;755:1;752;745:12;769:149;805:7;845:66;838:5;834:78;823:89;;769:149;;;:::o;924:120::-;996:23;1013:5;996:23;:::i;:::-;989:5;986:34;976:62;;1034:1;1031;1024:12;976:62;924:120;:::o;1050:137::-;1095:5;1133:6;1120:20;1111:29;;1149:32;1175:5;1149:32;:::i;:::-;1050:137;;;;:::o;1193:327::-;1251:6;1300:2;1288:9;1279:7;1275:23;1271:32;1268:119;;;1306:79;;:::i;:::-;1268:119;1426:1;1451:52;1495:7;1486:6;1475:9;1471:22;1451:52;:::i;:::-;1441:62;;1397:116;1193:327;;;;:::o;1526:90::-;1560:7;1603:5;1596:13;1589:21;1578:32;;1526:90;;;:::o;1622:109::-;1703:21;1718:5;1703:21;:::i;:::-;1698:3;1691:34;1622:109;;:::o;1737:210::-;1824:4;1862:2;1851:9;1847:18;1839:26;;1875:65;1937:1;1926:9;1922:17;1913:6;1875:65;:::i;:::-;1737:210;;;;:::o;1953:99::-;2005:6;2039:5;2033:12;2023:22;;1953:99;;;:::o;2058:169::-;2142:11;2176:6;2171:3;2164:19;2216:4;2211:3;2207:14;2192:29;;2058:169;;;;:::o;2233:246::-;2314:1;2324:113;2338:6;2335:1;2332:13;2324:113;;;2423:1;2418:3;2414:11;2408:18;2404:1;2399:3;2395:11;2388:39;2360:2;2357:1;2353:10;2348:15;;2324:113;;;2471:1;2462:6;2457:3;2453:16;2446:27;2295:184;2233:246;;;:::o;2485:102::-;2526:6;2577:2;2573:7;2568:2;2561:5;2557:14;2553:28;2543:38;;2485:102;;;:::o;2593:377::-;2681:3;2709:39;2742:5;2709:39;:::i;:::-;2764:71;2828:6;2823:3;2764:71;:::i;:::-;2757:78;;2844:65;2902:6;2897:3;2890:4;2883:5;2879:16;2844:65;:::i;:::-;2934:29;2956:6;2934:29;:::i;:::-;2929:3;2925:39;2918:46;;2685:285;2593:377;;;;:::o;2976:313::-;3089:4;3127:2;3116:9;3112:18;3104:26;;3176:9;3170:4;3166:20;3162:1;3151:9;3147:17;3140:47;3204:78;3277:4;3268:6;3204:78;:::i;:::-;3196:86;;2976:313;;;;:::o;3295:122::-;3368:24;3386:5;3368:24;:::i;:::-;3361:5;3358:35;3348:63;;3407:1;3404;3397:12;3348:63;3295:122;:::o;3423:139::-;3469:5;3507:6;3494:20;3485:29;;3523:33;3550:5;3523:33;:::i;:::-;3423:139;;;;:::o;3568:329::-;3627:6;3676:2;3664:9;3655:7;3651:23;3647:32;3644:119;;;3682:79;;:::i;:::-;3644:119;3802:1;3827:53;3872:7;3863:6;3852:9;3848:22;3827:53;:::i;:::-;3817:63;;3773:117;3568:329;;;;:::o;3903:126::-;3940:7;3980:42;3973:5;3969:54;3958:65;;3903:126;;;:::o;4035:96::-;4072:7;4101:24;4119:5;4101:24;:::i;:::-;4090:35;;4035:96;;;:::o;4137:118::-;4224:24;4242:5;4224:24;:::i;:::-;4219:3;4212:37;4137:118;;:::o;4261:222::-;4354:4;4392:2;4381:9;4377:18;4369:26;;4405:71;4473:1;4462:9;4458:17;4449:6;4405:71;:::i;:::-;4261:222;;;;:::o;4489:122::-;4562:24;4580:5;4562:24;:::i;:::-;4555:5;4552:35;4542:63;;4601:1;4598;4591:12;4542:63;4489:122;:::o;4617:139::-;4663:5;4701:6;4688:20;4679:29;;4717:33;4744:5;4717:33;:::i;:::-;4617:139;;;;:::o;4762:474::-;4830:6;4838;4887:2;4875:9;4866:7;4862:23;4858:32;4855:119;;;4893:79;;:::i;:::-;4855:119;5013:1;5038:53;5083:7;5074:6;5063:9;5059:22;5038:53;:::i;:::-;5028:63;;4984:117;5140:2;5166:53;5211:7;5202:6;5191:9;5187:22;5166:53;:::i;:::-;5156:63;;5111:118;4762:474;;;;;:::o;5242:117::-;5351:1;5348;5341:12;5365:117;5474:1;5471;5464:12;5488:117;5597:1;5594;5587:12;5628:568;5701:8;5711:6;5761:3;5754:4;5746:6;5742:17;5738:27;5728:122;;5769:79;;:::i;:::-;5728:122;5882:6;5869:20;5859:30;;5912:18;5904:6;5901:30;5898:117;;;5934:79;;:::i;:::-;5898:117;6048:4;6040:6;6036:17;6024:29;;6102:3;6094:4;6086:6;6082:17;6072:8;6068:32;6065:41;6062:128;;;6109:79;;:::i;:::-;6062:128;5628:568;;;;;:::o;6219:::-;6292:8;6302:6;6352:3;6345:4;6337:6;6333:17;6329:27;6319:122;;6360:79;;:::i;:::-;6319:122;6473:6;6460:20;6450:30;;6503:18;6495:6;6492:30;6489:117;;;6525:79;;:::i;:::-;6489:117;6639:4;6631:6;6627:17;6615:29;;6693:3;6685:4;6677:6;6673:17;6663:8;6659:32;6656:41;6653:128;;;6700:79;;:::i;:::-;6653:128;6219:568;;;;;:::o;6793:934::-;6915:6;6923;6931;6939;6988:2;6976:9;6967:7;6963:23;6959:32;6956:119;;;6994:79;;:::i;:::-;6956:119;7142:1;7131:9;7127:17;7114:31;7172:18;7164:6;7161:30;7158:117;;;7194:79;;:::i;:::-;7158:117;7307:80;7379:7;7370:6;7359:9;7355:22;7307:80;:::i;:::-;7289:98;;;;7085:312;7464:2;7453:9;7449:18;7436:32;7495:18;7487:6;7484:30;7481:117;;;7517:79;;:::i;:::-;7481:117;7630:80;7702:7;7693:6;7682:9;7678:22;7630:80;:::i;:::-;7612:98;;;;7407:313;6793:934;;;;;;;:::o;7733:329::-;7792:6;7841:2;7829:9;7820:7;7816:23;7812:32;7809:119;;;7847:79;;:::i;:::-;7809:119;7967:1;7992:53;8037:7;8028:6;8017:9;8013:22;7992:53;:::i;:::-;7982:63;;7938:117;7733:329;;;;:::o;8068:619::-;8145:6;8153;8161;8210:2;8198:9;8189:7;8185:23;8181:32;8178:119;;;8216:79;;:::i;:::-;8178:119;8336:1;8361:53;8406:7;8397:6;8386:9;8382:22;8361:53;:::i;:::-;8351:63;;8307:117;8463:2;8489:53;8534:7;8525:6;8514:9;8510:22;8489:53;:::i;:::-;8479:63;;8434:118;8591:2;8617:53;8662:7;8653:6;8642:9;8638:22;8617:53;:::i;:::-;8607:63;;8562:118;8068:619;;;;;:::o;8693:842::-;8934:4;8972:3;8961:9;8957:19;8949:27;;8986:71;9054:1;9043:9;9039:17;9030:6;8986:71;:::i;:::-;9067:72;9135:2;9124:9;9120:18;9111:6;9067:72;:::i;:::-;9186:9;9180:4;9176:20;9171:2;9160:9;9156:18;9149:48;9214:78;9287:4;9278:6;9214:78;:::i;:::-;9206:86;;9302:72;9370:2;9359:9;9355:18;9346:6;9302:72;:::i;:::-;9384:67;9446:3;9435:9;9431:19;9422:6;9384:67;:::i;:::-;9461;9523:3;9512:9;9508:19;9499:6;9461:67;:::i;:::-;8693:842;;;;;;;;;:::o;9541:765::-;9627:6;9635;9643;9651;9700:3;9688:9;9679:7;9675:23;9671:33;9668:120;;;9707:79;;:::i;:::-;9668:120;9827:1;9852:53;9897:7;9888:6;9877:9;9873:22;9852:53;:::i;:::-;9842:63;;9798:117;9954:2;9980:53;10025:7;10016:6;10005:9;10001:22;9980:53;:::i;:::-;9970:63;;9925:118;10082:2;10108:53;10153:7;10144:6;10133:9;10129:22;10108:53;:::i;:::-;10098:63;;10053:118;10210:2;10236:53;10281:7;10272:6;10261:9;10257:22;10236:53;:::i;:::-;10226:63;;10181:118;9541:765;;;;;;;:::o;10326:553::-;10384:8;10394:6;10444:3;10437:4;10429:6;10425:17;10421:27;10411:122;;10452:79;;:::i;:::-;10411:122;10565:6;10552:20;10542:30;;10595:18;10587:6;10584:30;10581:117;;;10617:79;;:::i;:::-;10581:117;10731:4;10723:6;10719:17;10707:29;;10785:3;10777:4;10769:6;10765:17;10755:8;10751:32;10748:41;10745:128;;;10792:79;;:::i;:::-;10745:128;10326:553;;;;;:::o;10885:529::-;10956:6;10964;11013:2;11001:9;10992:7;10988:23;10984:32;10981:119;;;11019:79;;:::i;:::-;10981:119;11167:1;11156:9;11152:17;11139:31;11197:18;11189:6;11186:30;11183:117;;;11219:79;;:::i;:::-;11183:117;11332:65;11389:7;11380:6;11369:9;11365:22;11332:65;:::i;:::-;11314:83;;;;11110:297;10885:529;;;;;:::o;11420:116::-;11490:21;11505:5;11490:21;:::i;:::-;11483:5;11480:32;11470:60;;11526:1;11523;11516:12;11470:60;11420:116;:::o;11542:133::-;11585:5;11623:6;11610:20;11601:29;;11639:30;11663:5;11639:30;:::i;:::-;11542:133;;;;:::o;11681:468::-;11746:6;11754;11803:2;11791:9;11782:7;11778:23;11774:32;11771:119;;;11809:79;;:::i;:::-;11771:119;11929:1;11954:53;11999:7;11990:6;11979:9;11975:22;11954:53;:::i;:::-;11944:63;;11900:117;12056:2;12082:50;12124:7;12115:6;12104:9;12100:22;12082:50;:::i;:::-;12072:60;;12027:115;11681:468;;;;;:::o;12155:60::-;12183:3;12204:5;12197:12;;12155:60;;;:::o;12221:142::-;12271:9;12304:53;12322:34;12331:24;12349:5;12331:24;:::i;:::-;12322:34;:::i;:::-;12304:53;:::i;:::-;12291:66;;12221:142;;;:::o;12369:126::-;12419:9;12452:37;12483:5;12452:37;:::i;:::-;12439:50;;12369:126;;;:::o;12501:140::-;12565:9;12598:37;12629:5;12598:37;:::i;:::-;12585:50;;12501:140;;;:::o;12647:159::-;12748:51;12793:5;12748:51;:::i;:::-;12743:3;12736:64;12647:159;;:::o;12812:250::-;12919:4;12957:2;12946:9;12942:18;12934:26;;12970:85;13052:1;13041:9;13037:17;13028:6;12970:85;:::i;:::-;12812:250;;;;:::o;13068:117::-;13177:1;13174;13167:12;13191:180;13239:77;13236:1;13229:88;13336:4;13333:1;13326:15;13360:4;13357:1;13350:15;13377:281;13460:27;13482:4;13460:27;:::i;:::-;13452:6;13448:40;13590:6;13578:10;13575:22;13554:18;13542:10;13539:34;13536:62;13533:88;;;13601:18;;:::i;:::-;13533:88;13641:10;13637:2;13630:22;13420:238;13377:281;;:::o;13664:129::-;13698:6;13725:20;;:::i;:::-;13715:30;;13754:33;13782:4;13774:6;13754:33;:::i;:::-;13664:129;;;:::o;13799:307::-;13860:4;13950:18;13942:6;13939:30;13936:56;;;13972:18;;:::i;:::-;13936:56;14010:29;14032:6;14010:29;:::i;:::-;14002:37;;14094:4;14088;14084:15;14076:23;;13799:307;;;:::o;14112:146::-;14209:6;14204:3;14199;14186:30;14250:1;14241:6;14236:3;14232:16;14225:27;14112:146;;;:::o;14264:423::-;14341:5;14366:65;14382:48;14423:6;14382:48;:::i;:::-;14366:65;:::i;:::-;14357:74;;14454:6;14447:5;14440:21;14492:4;14485:5;14481:16;14530:3;14521:6;14516:3;14512:16;14509:25;14506:112;;;14537:79;;:::i;:::-;14506:112;14627:54;14674:6;14669:3;14664;14627:54;:::i;:::-;14347:340;14264:423;;;;;:::o;14706:338::-;14761:5;14810:3;14803:4;14795:6;14791:17;14787:27;14777:122;;14818:79;;:::i;:::-;14777:122;14935:6;14922:20;14960:78;15034:3;15026:6;15019:4;15011:6;15007:17;14960:78;:::i;:::-;14951:87;;14767:277;14706:338;;;;:::o;15050:943::-;15145:6;15153;15161;15169;15218:3;15206:9;15197:7;15193:23;15189:33;15186:120;;;15225:79;;:::i;:::-;15186:120;15345:1;15370:53;15415:7;15406:6;15395:9;15391:22;15370:53;:::i;:::-;15360:63;;15316:117;15472:2;15498:53;15543:7;15534:6;15523:9;15519:22;15498:53;:::i;:::-;15488:63;;15443:118;15600:2;15626:53;15671:7;15662:6;15651:9;15647:22;15626:53;:::i;:::-;15616:63;;15571:118;15756:2;15745:9;15741:18;15728:32;15787:18;15779:6;15776:30;15773:117;;;15809:79;;:::i;:::-;15773:117;15914:62;15968:7;15959:6;15948:9;15944:22;15914:62;:::i;:::-;15904:72;;15699:287;15050:943;;;;;;;:::o;15999:474::-;16067:6;16075;16124:2;16112:9;16103:7;16099:23;16095:32;16092:119;;;16130:79;;:::i;:::-;16092:119;16250:1;16275:53;16320:7;16311:6;16300:9;16296:22;16275:53;:::i;:::-;16265:63;;16221:117;16377:2;16403:53;16448:7;16439:6;16428:9;16424:22;16403:53;:::i;:::-;16393:63;;16348:118;15999:474;;;;;:::o;16479:180::-;16527:77;16524:1;16517:88;16624:4;16621:1;16614:15;16648:4;16645:1;16638:15;16665:320;16709:6;16746:1;16740:4;16736:12;16726:22;;16793:1;16787:4;16783:12;16814:18;16804:81;;16870:4;16862:6;16858:17;16848:27;;16804:81;16932:2;16924:6;16921:14;16901:18;16898:38;16895:84;;16951:18;;:::i;:::-;16895:84;16716:269;16665:320;;;:::o;16991:174::-;17131:26;17127:1;17119:6;17115:14;17108:50;16991:174;:::o;17171:366::-;17313:3;17334:67;17398:2;17393:3;17334:67;:::i;:::-;17327:74;;17410:93;17499:3;17410:93;:::i;:::-;17528:2;17523:3;17519:12;17512:19;;17171:366;;;:::o;17543:419::-;17709:4;17747:2;17736:9;17732:18;17724:26;;17796:9;17790:4;17786:20;17782:1;17771:9;17767:17;17760:47;17824:131;17950:4;17824:131;:::i;:::-;17816:139;;17543:419;;;:::o;17968:180::-;18016:77;18013:1;18006:88;18113:4;18110:1;18103:15;18137:4;18134:1;18127:15;18154:180;18202:77;18199:1;18192:88;18299:4;18296:1;18289:15;18323:4;18320:1;18313:15;18340:191;18380:3;18399:20;18417:1;18399:20;:::i;:::-;18394:25;;18433:20;18451:1;18433:20;:::i;:::-;18428:25;;18476:1;18473;18469:9;18462:16;;18497:3;18494:1;18491:10;18488:36;;;18504:18;;:::i;:::-;18488:36;18340:191;;;;:::o;18537:233::-;18576:3;18599:24;18617:5;18599:24;:::i;:::-;18590:33;;18645:66;18638:5;18635:77;18632:103;;18715:18;;:::i;:::-;18632:103;18762:1;18755:5;18751:13;18744:20;;18537:233;;;:::o;18776:143::-;18833:5;18864:6;18858:13;18849:22;;18880:33;18907:5;18880:33;:::i;:::-;18776:143;;;;:::o;18925:351::-;18995:6;19044:2;19032:9;19023:7;19019:23;19015:32;19012:119;;;19050:79;;:::i;:::-;19012:119;19170:1;19195:64;19251:7;19242:6;19231:9;19227:22;19195:64;:::i;:::-;19185:74;;19141:128;18925:351;;;;:::o;19282:182::-;19422:34;19418:1;19410:6;19406:14;19399:58;19282:182;:::o;19470:366::-;19612:3;19633:67;19697:2;19692:3;19633:67;:::i;:::-;19626:74;;19709:93;19798:3;19709:93;:::i;:::-;19827:2;19822:3;19818:12;19811:19;;19470:366;;;:::o;19842:419::-;20008:4;20046:2;20035:9;20031:18;20023:26;;20095:9;20089:4;20085:20;20081:1;20070:9;20066:17;20059:47;20123:131;20249:4;20123:131;:::i;:::-;20115:139;;19842:419;;;:::o;20267:442::-;20416:4;20454:2;20443:9;20439:18;20431:26;;20467:71;20535:1;20524:9;20520:17;20511:6;20467:71;:::i;:::-;20548:72;20616:2;20605:9;20601:18;20592:6;20548:72;:::i;:::-;20630;20698:2;20687:9;20683:18;20674:6;20630:72;:::i;:::-;20267:442;;;;;;:::o;20715:222::-;20855:34;20851:1;20843:6;20839:14;20832:58;20924:5;20919:2;20911:6;20907:15;20900:30;20715:222;:::o;20943:366::-;21085:3;21106:67;21170:2;21165:3;21106:67;:::i;:::-;21099:74;;21182:93;21271:3;21182:93;:::i;:::-;21300:2;21295:3;21291:12;21284:19;;20943:366;;;:::o;21315:419::-;21481:4;21519:2;21508:9;21504:18;21496:26;;21568:9;21562:4;21558:20;21554:1;21543:9;21539:17;21532:47;21596:131;21722:4;21596:131;:::i;:::-;21588:139;;21315:419;;;:::o;21740:141::-;21789:4;21812:3;21804:11;;21835:3;21832:1;21825:14;21869:4;21866:1;21856:18;21848:26;;21740:141;;;:::o;21887:93::-;21924:6;21971:2;21966;21959:5;21955:14;21951:23;21941:33;;21887:93;;;:::o;21986:107::-;22030:8;22080:5;22074:4;22070:16;22049:37;;21986:107;;;;:::o;22099:393::-;22168:6;22218:1;22206:10;22202:18;22241:97;22271:66;22260:9;22241:97;:::i;:::-;22359:39;22389:8;22378:9;22359:39;:::i;:::-;22347:51;;22431:4;22427:9;22420:5;22416:21;22407:30;;22480:4;22470:8;22466:19;22459:5;22456:30;22446:40;;22175:317;;22099:393;;;;;:::o;22498:142::-;22548:9;22581:53;22599:34;22608:24;22626:5;22608:24;:::i;:::-;22599:34;:::i;:::-;22581:53;:::i;:::-;22568:66;;22498:142;;;:::o;22646:75::-;22689:3;22710:5;22703:12;;22646:75;;;:::o;22727:269::-;22837:39;22868:7;22837:39;:::i;:::-;22898:91;22947:41;22971:16;22947:41;:::i;:::-;22939:6;22932:4;22926:11;22898:91;:::i;:::-;22892:4;22885:105;22803:193;22727:269;;;:::o;23002:73::-;23047:3;23002:73;:::o;23081:189::-;23158:32;;:::i;:::-;23199:65;23257:6;23249;23243:4;23199:65;:::i;:::-;23134:136;23081:189;;:::o;23276:186::-;23336:120;23353:3;23346:5;23343:14;23336:120;;;23407:39;23444:1;23437:5;23407:39;:::i;:::-;23380:1;23373:5;23369:13;23360:22;;23336:120;;;23276:186;;:::o;23468:543::-;23569:2;23564:3;23561:11;23558:446;;;23603:38;23635:5;23603:38;:::i;:::-;23687:29;23705:10;23687:29;:::i;:::-;23677:8;23673:44;23870:2;23858:10;23855:18;23852:49;;;23891:8;23876:23;;23852:49;23914:80;23970:22;23988:3;23970:22;:::i;:::-;23960:8;23956:37;23943:11;23914:80;:::i;:::-;23573:431;;23558:446;23468:543;;;:::o;24017:117::-;24071:8;24121:5;24115:4;24111:16;24090:37;;24017:117;;;;:::o;24140:169::-;24184:6;24217:51;24265:1;24261:6;24253:5;24250:1;24246:13;24217:51;:::i;:::-;24213:56;24298:4;24292;24288:15;24278:25;;24191:118;24140:169;;;;:::o;24314:295::-;24390:4;24536:29;24561:3;24555:4;24536:29;:::i;:::-;24528:37;;24598:3;24595:1;24591:11;24585:4;24582:21;24574:29;;24314:295;;;;:::o;24614:1395::-;24731:37;24764:3;24731:37;:::i;:::-;24833:18;24825:6;24822:30;24819:56;;;24855:18;;:::i;:::-;24819:56;24899:38;24931:4;24925:11;24899:38;:::i;:::-;24984:67;25044:6;25036;25030:4;24984:67;:::i;:::-;25078:1;25102:4;25089:17;;25134:2;25126:6;25123:14;25151:1;25146:618;;;;25808:1;25825:6;25822:77;;;25874:9;25869:3;25865:19;25859:26;25850:35;;25822:77;25925:67;25985:6;25978:5;25925:67;:::i;:::-;25919:4;25912:81;25781:222;25116:887;;25146:618;25198:4;25194:9;25186:6;25182:22;25232:37;25264:4;25232:37;:::i;:::-;25291:1;25305:208;25319:7;25316:1;25313:14;25305:208;;;25398:9;25393:3;25389:19;25383:26;25375:6;25368:42;25449:1;25441:6;25437:14;25427:24;;25496:2;25485:9;25481:18;25468:31;;25342:4;25339:1;25335:12;25330:17;;25305:208;;;25541:6;25532:7;25529:19;25526:179;;;25599:9;25594:3;25590:19;25584:26;25642:48;25684:4;25676:6;25672:17;25661:9;25642:48;:::i;:::-;25634:6;25627:64;25549:156;25526:179;25751:1;25747;25739:6;25735:14;25731:22;25725:4;25718:36;25153:611;;;25116:887;;24706:1303;;;24614:1395;;:::o;26039:317::-;26137:3;26158:71;26222:6;26217:3;26158:71;:::i;:::-;26151:78;;26239:56;26288:6;26283:3;26276:5;26239:56;:::i;:::-;26320:29;26342:6;26320:29;:::i;:::-;26315:3;26311:39;26304:46;;26039:317;;;;;:::o;26362:333::-;26485:4;26523:2;26512:9;26508:18;26500:26;;26572:9;26566:4;26562:20;26558:1;26547:9;26543:17;26536:47;26600:88;26683:4;26674:6;26666;26600:88;:::i;:::-;26592:96;;26362:333;;;;;:::o;26701:168::-;26841:20;26837:1;26829:6;26825:14;26818:44;26701:168;:::o;26875:366::-;27017:3;27038:67;27102:2;27097:3;27038:67;:::i;:::-;27031:74;;27114:93;27203:3;27114:93;:::i;:::-;27232:2;27227:3;27223:12;27216:19;;26875:366;;;:::o;27247:419::-;27413:4;27451:2;27440:9;27436:18;27428:26;;27500:9;27494:4;27490:20;27486:1;27475:9;27471:17;27464:47;27528:131;27654:4;27528:131;:::i;:::-;27520:139;;27247:419;;;:::o;27672:148::-;27774:11;27811:3;27796:18;;27672:148;;;;:::o;27826:390::-;27932:3;27960:39;27993:5;27960:39;:::i;:::-;28015:89;28097:6;28092:3;28015:89;:::i;:::-;28008:96;;28113:65;28171:6;28166:3;28159:4;28152:5;28148:16;28113:65;:::i;:::-;28203:6;28198:3;28194:16;28187:23;;27936:280;27826:390;;;;:::o;28222:435::-;28402:3;28424:95;28515:3;28506:6;28424:95;:::i;:::-;28417:102;;28536:95;28627:3;28618:6;28536:95;:::i;:::-;28529:102;;28648:3;28641:10;;28222:435;;;;;:::o;28663:171::-;28803:23;28799:1;28791:6;28787:14;28780:47;28663:171;:::o;28840:366::-;28982:3;29003:67;29067:2;29062:3;29003:67;:::i;:::-;28996:74;;29079:93;29168:3;29079:93;:::i;:::-;29197:2;29192:3;29188:12;29181:19;;28840:366;;;:::o;29212:419::-;29378:4;29416:2;29405:9;29401:18;29393:26;;29465:9;29459:4;29455:20;29451:1;29440:9;29436:17;29429:47;29493:131;29619:4;29493:131;:::i;:::-;29485:139;;29212:419;;;:::o;29637:169::-;29777:21;29773:1;29765:6;29761:14;29754:45;29637:169;:::o;29812:366::-;29954:3;29975:67;30039:2;30034:3;29975:67;:::i;:::-;29968:74;;30051:93;30140:3;30051:93;:::i;:::-;30169:2;30164:3;30160:12;30153:19;;29812:366;;;:::o;30184:419::-;30350:4;30388:2;30377:9;30373:18;30365:26;;30437:9;30431:4;30427:20;30423:1;30412:9;30408:17;30401:47;30465:131;30591:4;30465:131;:::i;:::-;30457:139;;30184:419;;;:::o;30609:332::-;30730:4;30768:2;30757:9;30753:18;30745:26;;30781:71;30849:1;30838:9;30834:17;30825:6;30781:71;:::i;:::-;30862:72;30930:2;30919:9;30915:18;30906:6;30862:72;:::i;:::-;30609:332;;;;;:::o;30947:442::-;31096:4;31134:2;31123:9;31119:18;31111:26;;31147:71;31215:1;31204:9;31200:17;31191:6;31147:71;:::i;:::-;31228:72;31296:2;31285:9;31281:18;31272:6;31228:72;:::i;:::-;31310;31378:2;31367:9;31363:18;31354:6;31310:72;:::i;:::-;30947:442;;;;;;:::o;31395:98::-;31446:6;31480:5;31474:12;31464:22;;31395:98;;;:::o;31499:168::-;31582:11;31616:6;31611:3;31604:19;31656:4;31651:3;31647:14;31632:29;;31499:168;;;;:::o;31673:373::-;31759:3;31787:38;31819:5;31787:38;:::i;:::-;31841:70;31904:6;31899:3;31841:70;:::i;:::-;31834:77;;31920:65;31978:6;31973:3;31966:4;31959:5;31955:16;31920:65;:::i;:::-;32010:29;32032:6;32010:29;:::i;:::-;32005:3;32001:39;31994:46;;31763:283;31673:373;;;;:::o;32052:640::-;32247:4;32285:3;32274:9;32270:19;32262:27;;32299:71;32367:1;32356:9;32352:17;32343:6;32299:71;:::i;:::-;32380:72;32448:2;32437:9;32433:18;32424:6;32380:72;:::i;:::-;32462;32530:2;32519:9;32515:18;32506:6;32462:72;:::i;:::-;32581:9;32575:4;32571:20;32566:2;32555:9;32551:18;32544:48;32609:76;32680:4;32671:6;32609:76;:::i;:::-;32601:84;;32052:640;;;;;;;:::o;32698:141::-;32754:5;32785:6;32779:13;32770:22;;32801:32;32827:5;32801:32;:::i;:::-;32698:141;;;;:::o;32845:349::-;32914:6;32963:2;32951:9;32942:7;32938:23;32934:32;32931:119;;;32969:79;;:::i;:::-;32931:119;33089:1;33114:63;33169:7;33160:6;33149:9;33145:22;33114:63;:::i;:::-;33104:73;;33060:127;32845:349;;;;:::o;33200:180::-;33248:77;33245:1;33238:88;33345:4;33342:1;33335:15;33369:4;33366:1;33359:15"},"methodIdentifiers":{"addGalacticG(address)":"1809b5f5","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","creationFee()":"dce0b4e4","currentTokenId()":"009a9b7b","distributeRewards(address[],uint256[])":"143ba4f3","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","isGalacticG(address)":"2f5b6ffe","memes(uint256)":"388f6064","mintMeme(uint256)":"eb3a9ef7","mintingFee()":"5a64ad95","name()":"06fdde03","nguToken()":"b24c4fa0","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","removeGalacticG(address)":"dc185604","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setFees(uint256,uint256,uint256,uint256)":"6fcba377","submissionFee()":"e8888942","submitMeme(string)":"7e39cb2b","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","voteFee()":"da2b4c1e","voteMeme(uint256)":"867d6073","withdrawFees(uint256)":"5e318e07"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_nguToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"MemeMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"memeURI\",\"type\":\"string\"}],\"name\":\"MemeSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"}],\"name\":\"MemeVoted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"addGalacticG\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creationFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"winners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"rewards\",\"type\":\"uint256[]\"}],\"name\":\"distributeRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isGalacticG\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"memes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"memeURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"minted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"submitted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"memeId\",\"type\":\"uint256\"}],\"name\":\"mintMeme\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nguToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"removeGalacticG\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_creationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mintingFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_submissionFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_voteFee\",\"type\":\"uint256\"}],\"name\":\"setFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"submissionFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"memeURI\",\"type\":\"string\"}],\"name\":\"submitMeme\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voteFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"memeId\",\"type\":\"uint256\"}],\"name\":\"voteMeme\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"addGalacticG(address)\":{\"details\":\"Owner can add or remove addresses that have the Galactic G role.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Constructor sets the NGU token address and default fee amounts. Adjust the fee values based on NGU token decimals (commonly 18 decimals).\"},\"distributeRewards(address[],uint256[])\":{\"details\":\"Admin function to distribute rewards from collected fees.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"mintMeme(uint256)\":{\"details\":\"Mint an NFT for a submitted meme. The caller must be the original creator and pay the minting fee.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setFees(uint256,uint256,uint256,uint256)\":{\"details\":\"Owner function to update fee amounts.\"},\"submitMeme(string)\":{\"details\":\"Submit a meme for contest participation. The caller must pay the submission fee in NGU tokens. Only whitelisted Galactic G users can submit memes.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"voteMeme(uint256)\":{\"details\":\"Vote on a submitted meme by paying the vote fee. Each call increases the meme's vote count by one.\"},\"withdrawFees(uint256)\":{\"details\":\"Owner can withdraw accumulated NGU tokens (fees) from the contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MemeContest.sol\":\"MemeContest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xe52813067c6d5838eeb34e1da8beb2514371a7d778266013b04ca3be1dda7100\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53fb552d625eb5f60ef9dce439c826bb780952cbbafc985db6e48ac6382a5585\",\"dweb:/ipfs/QmSEbLqEWN1SqsWekfqt6RWC4oEajFWtZ5j8i6gKaGdtKr\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/MemeContest.sol\":{\"keccak256\":\"0x94fc7d6db7355ccff2b1656a565c33be8f6f254aec4da2edeba4e65719ddcab2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86a9246dbd3e166e8db42a1185088459d4044285e5925ea0addca83086035ea9\",\"dweb:/ipfs/Qmf9cWjMkN5mBmtEcmQRAKed8Jm3VX9XqXXyqimFhhqBNm\"]}},\"version\":1}"}},"contracts/SBT.sol":{"SoulBoundToken":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"hasSBT","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_7545":{"entryPoint":null,"id":7545,"parameterSlots":0,"returnSlots":0},"@_959":{"entryPoint":null,"id":959,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":314,"id":146,"parameterSlots":1,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1429,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1446,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":670,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":512,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":991,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1409,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1377,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":806,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":952,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":826,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1146,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":691,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":617,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1116,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":816,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1084,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":570,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":523,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":866,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":707,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1071,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":924,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":720,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":876,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":919,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5817:25","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:25","statements":[{"nodeType":"YulAssignment","src":"77:22:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:25"},"nodeType":"YulFunctionCall","src":"87:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:25"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:25","type":""}],"src":"7:99:25"},{"body":{"nodeType":"YulBlock","src":"140:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"157:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"160:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"150:6:25"},"nodeType":"YulFunctionCall","src":"150:88:25"},"nodeType":"YulExpressionStatement","src":"150:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"254:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"257:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"247:6:25"},"nodeType":"YulFunctionCall","src":"247:15:25"},"nodeType":"YulExpressionStatement","src":"247:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"278:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"281:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"271:6:25"},"nodeType":"YulFunctionCall","src":"271:15:25"},"nodeType":"YulExpressionStatement","src":"271:15:25"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"112:180:25"},{"body":{"nodeType":"YulBlock","src":"326:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"343:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"346:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"336:6:25"},"nodeType":"YulFunctionCall","src":"336:88:25"},"nodeType":"YulExpressionStatement","src":"336:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"443:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"433:6:25"},"nodeType":"YulFunctionCall","src":"433:15:25"},"nodeType":"YulExpressionStatement","src":"433:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"464:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"467:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"457:6:25"},"nodeType":"YulFunctionCall","src":"457:15:25"},"nodeType":"YulExpressionStatement","src":"457:15:25"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"298:180:25"},{"body":{"nodeType":"YulBlock","src":"535:269:25","statements":[{"nodeType":"YulAssignment","src":"545:22:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"559:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"565:1:25","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"555:3:25"},"nodeType":"YulFunctionCall","src":"555:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"545:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"576:38:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"606:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"612:1:25","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"602:3:25"},"nodeType":"YulFunctionCall","src":"602:12:25"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"580:18:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"653:51:25","statements":[{"nodeType":"YulAssignment","src":"667:27:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"681:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"689:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"677:3:25"},"nodeType":"YulFunctionCall","src":"677:17:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"667:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"633:18:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"626:6:25"},"nodeType":"YulFunctionCall","src":"626:26:25"},"nodeType":"YulIf","src":"623:81:25"},{"body":{"nodeType":"YulBlock","src":"756:42:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"770:16:25"},"nodeType":"YulFunctionCall","src":"770:18:25"},"nodeType":"YulExpressionStatement","src":"770:18:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"720:18:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"743:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"751:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"740:2:25"},"nodeType":"YulFunctionCall","src":"740:14:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"717:2:25"},"nodeType":"YulFunctionCall","src":"717:38:25"},"nodeType":"YulIf","src":"714:84:25"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"519:4:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"528:6:25","type":""}],"src":"484:320:25"},{"body":{"nodeType":"YulBlock","src":"864:87:25","statements":[{"nodeType":"YulAssignment","src":"874:11:25","value":{"name":"ptr","nodeType":"YulIdentifier","src":"882:3:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"874:4:25"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"902:1:25","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"905:3:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"895:6:25"},"nodeType":"YulFunctionCall","src":"895:14:25"},"nodeType":"YulExpressionStatement","src":"895:14:25"},{"nodeType":"YulAssignment","src":"918:26:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"926:9:25"},"nodeType":"YulFunctionCall","src":"926:18:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"918:4:25"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"851:3:25","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"859:4:25","type":""}],"src":"810:141:25"},{"body":{"nodeType":"YulBlock","src":"1001:49:25","statements":[{"nodeType":"YulAssignment","src":"1011:33:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1029:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"1036:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1025:3:25"},"nodeType":"YulFunctionCall","src":"1025:14:25"},{"kind":"number","nodeType":"YulLiteral","src":"1041:2:25","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1021:3:25"},"nodeType":"YulFunctionCall","src":"1021:23:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1011:6:25"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"984:5:25","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"994:6:25","type":""}],"src":"957:93:25"},{"body":{"nodeType":"YulBlock","src":"1109:54:25","statements":[{"nodeType":"YulAssignment","src":"1119:37:25","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"1144:4:25"},{"name":"value","nodeType":"YulIdentifier","src":"1150:5:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1140:3:25"},"nodeType":"YulFunctionCall","src":"1140:16:25"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"1119:8:25"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"1084:4:25","type":""},{"name":"value","nodeType":"YulTypedName","src":"1090:5:25","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"1100:8:25","type":""}],"src":"1056:107:25"},{"body":{"nodeType":"YulBlock","src":"1245:317:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1255:35:25","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"1276:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"1288:1:25","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1272:3:25"},"nodeType":"YulFunctionCall","src":"1272:18:25"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"1259:9:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1299:109:25","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1330:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1341:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1311:18:25"},"nodeType":"YulFunctionCall","src":"1311:97:25"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"1303:4:25","type":""}]},{"nodeType":"YulAssignment","src":"1417:51:25","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1448:9:25"},{"name":"toInsert","nodeType":"YulIdentifier","src":"1459:8:25"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1429:18:25"},"nodeType":"YulFunctionCall","src":"1429:39:25"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1417:8:25"}]},{"nodeType":"YulAssignment","src":"1477:30:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1490:5:25"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"1501:4:25"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1497:3:25"},"nodeType":"YulFunctionCall","src":"1497:9:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1486:3:25"},"nodeType":"YulFunctionCall","src":"1486:21:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1477:5:25"}]},{"nodeType":"YulAssignment","src":"1516:40:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1529:5:25"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1540:8:25"},{"name":"mask","nodeType":"YulIdentifier","src":"1550:4:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1536:3:25"},"nodeType":"YulFunctionCall","src":"1536:19:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1526:2:25"},"nodeType":"YulFunctionCall","src":"1526:30:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1516:6:25"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1206:5:25","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"1213:10:25","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"1225:8:25","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1238:6:25","type":""}],"src":"1169:393:25"},{"body":{"nodeType":"YulBlock","src":"1613:32:25","statements":[{"nodeType":"YulAssignment","src":"1623:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"1634:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1623:7:25"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1595:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1605:7:25","type":""}],"src":"1568:77:25"},{"body":{"nodeType":"YulBlock","src":"1683:28:25","statements":[{"nodeType":"YulAssignment","src":"1693:12:25","value":{"name":"value","nodeType":"YulIdentifier","src":"1700:5:25"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1693:3:25"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1669:5:25","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1679:3:25","type":""}],"src":"1651:60:25"},{"body":{"nodeType":"YulBlock","src":"1777:82:25","statements":[{"nodeType":"YulAssignment","src":"1787:66:25","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1845:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1827:17:25"},"nodeType":"YulFunctionCall","src":"1827:24:25"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"1818:8:25"},"nodeType":"YulFunctionCall","src":"1818:34:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1800:17:25"},"nodeType":"YulFunctionCall","src":"1800:53:25"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1787:9:25"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1757:5:25","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1767:9:25","type":""}],"src":"1717:142:25"},{"body":{"nodeType":"YulBlock","src":"1912:28:25","statements":[{"nodeType":"YulAssignment","src":"1922:12:25","value":{"name":"value","nodeType":"YulIdentifier","src":"1929:5:25"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1922:3:25"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1898:5:25","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1908:3:25","type":""}],"src":"1865:75:25"},{"body":{"nodeType":"YulBlock","src":"2022:193:25","statements":[{"nodeType":"YulVariableDeclaration","src":"2032:63:25","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"2087:7:25"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2056:30:25"},"nodeType":"YulFunctionCall","src":"2056:39:25"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"2036:16:25","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2111:4:25"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2151:4:25"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2145:5:25"},"nodeType":"YulFunctionCall","src":"2145:11:25"},{"name":"offset","nodeType":"YulIdentifier","src":"2158:6:25"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"2190:16:25"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"2166:23:25"},"nodeType":"YulFunctionCall","src":"2166:41:25"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"2117:27:25"},"nodeType":"YulFunctionCall","src":"2117:91:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2104:6:25"},"nodeType":"YulFunctionCall","src":"2104:105:25"},"nodeType":"YulExpressionStatement","src":"2104:105:25"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1999:4:25","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2005:6:25","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"2013:7:25","type":""}],"src":"1946:269:25"},{"body":{"nodeType":"YulBlock","src":"2270:24:25","statements":[{"nodeType":"YulAssignment","src":"2280:8:25","value":{"kind":"number","nodeType":"YulLiteral","src":"2287:1:25","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2280:3:25"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2266:3:25","type":""}],"src":"2221:73:25"},{"body":{"nodeType":"YulBlock","src":"2353:136:25","statements":[{"nodeType":"YulVariableDeclaration","src":"2363:46:25","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"2377:30:25"},"nodeType":"YulFunctionCall","src":"2377:32:25"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"2367:6:25","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2462:4:25"},{"name":"offset","nodeType":"YulIdentifier","src":"2468:6:25"},{"name":"zero_0","nodeType":"YulIdentifier","src":"2476:6:25"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2418:43:25"},"nodeType":"YulFunctionCall","src":"2418:65:25"},"nodeType":"YulExpressionStatement","src":"2418:65:25"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2339:4:25","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2345:6:25","type":""}],"src":"2300:189:25"},{"body":{"nodeType":"YulBlock","src":"2545:136:25","statements":[{"body":{"nodeType":"YulBlock","src":"2612:63:25","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2656:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"2663:1:25","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"2626:29:25"},"nodeType":"YulFunctionCall","src":"2626:39:25"},"nodeType":"YulExpressionStatement","src":"2626:39:25"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2565:5:25"},{"name":"end","nodeType":"YulIdentifier","src":"2572:3:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2562:2:25"},"nodeType":"YulFunctionCall","src":"2562:14:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2577:26:25","statements":[{"nodeType":"YulAssignment","src":"2579:22:25","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2592:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"2599:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2588:3:25"},"nodeType":"YulFunctionCall","src":"2588:13:25"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2579:5:25"}]}]},"pre":{"nodeType":"YulBlock","src":"2559:2:25","statements":[]},"src":"2555:120:25"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"2533:5:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"2540:3:25","type":""}],"src":"2495:186:25"},{"body":{"nodeType":"YulBlock","src":"2766:464:25","statements":[{"body":{"nodeType":"YulBlock","src":"2792:431:25","statements":[{"nodeType":"YulVariableDeclaration","src":"2806:54:25","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2854:5:25"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"2822:31:25"},"nodeType":"YulFunctionCall","src":"2822:38:25"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"2810:8:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2873:63:25","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"2896:8:25"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2924:10:25"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"2906:17:25"},"nodeType":"YulFunctionCall","src":"2906:29:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2892:3:25"},"nodeType":"YulFunctionCall","src":"2892:44:25"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2877:11:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"3093:27:25","statements":[{"nodeType":"YulAssignment","src":"3095:23:25","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"3110:8:25"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3095:11:25"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3077:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"3089:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3074:2:25"},"nodeType":"YulFunctionCall","src":"3074:18:25"},"nodeType":"YulIf","src":"3071:49:25"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3162:11:25"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3179:8:25"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3207:3:25"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3189:17:25"},"nodeType":"YulFunctionCall","src":"3189:22:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3175:3:25"},"nodeType":"YulFunctionCall","src":"3175:37:25"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"3133:28:25"},"nodeType":"YulFunctionCall","src":"3133:80:25"},"nodeType":"YulExpressionStatement","src":"3133:80:25"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2783:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"2788:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2780:2:25"},"nodeType":"YulFunctionCall","src":"2780:11:25"},"nodeType":"YulIf","src":"2777:446:25"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2742:5:25","type":""},{"name":"len","nodeType":"YulTypedName","src":"2749:3:25","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2754:10:25","type":""}],"src":"2687:543:25"},{"body":{"nodeType":"YulBlock","src":"3299:54:25","statements":[{"nodeType":"YulAssignment","src":"3309:37:25","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3334:4:25"},{"name":"value","nodeType":"YulIdentifier","src":"3340:5:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3330:3:25"},"nodeType":"YulFunctionCall","src":"3330:16:25"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3309:8:25"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3274:4:25","type":""},{"name":"value","nodeType":"YulTypedName","src":"3280:5:25","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3290:8:25","type":""}],"src":"3236:117:25"},{"body":{"nodeType":"YulBlock","src":"3410:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"3420:68:25","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3469:1:25","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"3472:5:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3465:3:25"},"nodeType":"YulFunctionCall","src":"3465:13:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3484:1:25","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3480:3:25"},"nodeType":"YulFunctionCall","src":"3480:6:25"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"3436:28:25"},"nodeType":"YulFunctionCall","src":"3436:51:25"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3432:3:25"},"nodeType":"YulFunctionCall","src":"3432:56:25"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"3424:4:25","type":""}]},{"nodeType":"YulAssignment","src":"3497:25:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3511:4:25"},{"name":"mask","nodeType":"YulIdentifier","src":"3517:4:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3507:3:25"},"nodeType":"YulFunctionCall","src":"3507:15:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3497:6:25"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3387:4:25","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"3393:5:25","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3403:6:25","type":""}],"src":"3359:169:25"},{"body":{"nodeType":"YulBlock","src":"3614:214:25","statements":[{"nodeType":"YulAssignment","src":"3747:37:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3774:4:25"},{"name":"len","nodeType":"YulIdentifier","src":"3780:3:25"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"3755:18:25"},"nodeType":"YulFunctionCall","src":"3755:29:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3747:4:25"}]},{"nodeType":"YulAssignment","src":"3793:29:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3804:4:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3814:1:25","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"3817:3:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3810:3:25"},"nodeType":"YulFunctionCall","src":"3810:11:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3801:2:25"},"nodeType":"YulFunctionCall","src":"3801:21:25"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3793:4:25"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3595:4:25","type":""},{"name":"len","nodeType":"YulTypedName","src":"3601:3:25","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3609:4:25","type":""}],"src":"3533:295:25"},{"body":{"nodeType":"YulBlock","src":"3925:1303:25","statements":[{"nodeType":"YulVariableDeclaration","src":"3936:51:25","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3983:3:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3950:32:25"},"nodeType":"YulFunctionCall","src":"3950:37:25"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3940:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"4072:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4074:16:25"},"nodeType":"YulFunctionCall","src":"4074:18:25"},"nodeType":"YulExpressionStatement","src":"4074:18:25"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4044:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"4052:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4041:2:25"},"nodeType":"YulFunctionCall","src":"4041:30:25"},"nodeType":"YulIf","src":"4038:56:25"},{"nodeType":"YulVariableDeclaration","src":"4104:52:25","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4150:4:25"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4144:5:25"},"nodeType":"YulFunctionCall","src":"4144:11:25"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4118:25:25"},"nodeType":"YulFunctionCall","src":"4118:38:25"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"4108:6:25","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4249:4:25"},{"name":"oldLen","nodeType":"YulIdentifier","src":"4255:6:25"},{"name":"newLen","nodeType":"YulIdentifier","src":"4263:6:25"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"4203:45:25"},"nodeType":"YulFunctionCall","src":"4203:67:25"},"nodeType":"YulExpressionStatement","src":"4203:67:25"},{"nodeType":"YulVariableDeclaration","src":"4280:18:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4297:1:25","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4284:9:25","type":""}]},{"nodeType":"YulAssignment","src":"4308:17:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:4:25","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4308:9:25"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4372:611:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4386:37:25","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4405:6:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4417:4:25","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4413:3:25"},"nodeType":"YulFunctionCall","src":"4413:9:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4401:3:25"},"nodeType":"YulFunctionCall","src":"4401:22:25"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4390:7:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4437:51:25","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4483:4:25"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4451:31:25"},"nodeType":"YulFunctionCall","src":"4451:37:25"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"4441:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4501:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4510:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4505:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"4569:163:25","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4594:6:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4612:3:25"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4617:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4608:3:25"},"nodeType":"YulFunctionCall","src":"4608:19:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4602:5:25"},"nodeType":"YulFunctionCall","src":"4602:26:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4587:6:25"},"nodeType":"YulFunctionCall","src":"4587:42:25"},"nodeType":"YulExpressionStatement","src":"4587:42:25"},{"nodeType":"YulAssignment","src":"4646:24:25","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4660:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"4668:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4656:3:25"},"nodeType":"YulFunctionCall","src":"4656:14:25"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4646:6:25"}]},{"nodeType":"YulAssignment","src":"4687:31:25","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4704:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4715:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4700:3:25"},"nodeType":"YulFunctionCall","src":"4700:18:25"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4687:9:25"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4535:1:25"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"4538:7:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4532:2:25"},"nodeType":"YulFunctionCall","src":"4532:14:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4547:21:25","statements":[{"nodeType":"YulAssignment","src":"4549:17:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4558:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"4561:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4554:3:25"},"nodeType":"YulFunctionCall","src":"4554:12:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4549:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"4528:3:25","statements":[]},"src":"4524:208:25"},{"body":{"nodeType":"YulBlock","src":"4768:156:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4786:43:25","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4813:3:25"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4818:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4809:3:25"},"nodeType":"YulFunctionCall","src":"4809:19:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4803:5:25"},"nodeType":"YulFunctionCall","src":"4803:26:25"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4790:9:25","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4853:6:25"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4880:9:25"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4895:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"4903:4:25","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4891:3:25"},"nodeType":"YulFunctionCall","src":"4891:17:25"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4861:18:25"},"nodeType":"YulFunctionCall","src":"4861:48:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4846:6:25"},"nodeType":"YulFunctionCall","src":"4846:64:25"},"nodeType":"YulExpressionStatement","src":"4846:64:25"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"4751:7:25"},{"name":"newLen","nodeType":"YulIdentifier","src":"4760:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4748:2:25"},"nodeType":"YulFunctionCall","src":"4748:19:25"},"nodeType":"YulIf","src":"4745:179:25"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4944:4:25"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4958:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"4966:1:25","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4954:3:25"},"nodeType":"YulFunctionCall","src":"4954:14:25"},{"kind":"number","nodeType":"YulLiteral","src":"4970:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4950:3:25"},"nodeType":"YulFunctionCall","src":"4950:22:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4937:6:25"},"nodeType":"YulFunctionCall","src":"4937:36:25"},"nodeType":"YulExpressionStatement","src":"4937:36:25"}]},"nodeType":"YulCase","src":"4365:618:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4370:1:25","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5000:222:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5014:14:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5027:1:25","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5018:5:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"5051:67:25","statements":[{"nodeType":"YulAssignment","src":"5069:35:25","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5088:3:25"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5093:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5084:3:25"},"nodeType":"YulFunctionCall","src":"5084:19:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5078:5:25"},"nodeType":"YulFunctionCall","src":"5078:26:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5069:5:25"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5044:6:25"},"nodeType":"YulIf","src":"5041:77:25"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5138:4:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5197:5:25"},{"name":"newLen","nodeType":"YulIdentifier","src":"5204:6:25"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5144:52:25"},"nodeType":"YulFunctionCall","src":"5144:67:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5131:6:25"},"nodeType":"YulFunctionCall","src":"5131:81:25"},"nodeType":"YulExpressionStatement","src":"5131:81:25"}]},"nodeType":"YulCase","src":"4992:230:25","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4345:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"4353:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4342:2:25"},"nodeType":"YulFunctionCall","src":"4342:14:25"},"nodeType":"YulSwitch","src":"4335:887:25"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3914:4:25","type":""},{"name":"src","nodeType":"YulTypedName","src":"3920:3:25","type":""}],"src":"3833:1395:25"},{"body":{"nodeType":"YulBlock","src":"5279:81:25","statements":[{"nodeType":"YulAssignment","src":"5289:65:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5304:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"5311:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5300:3:25"},"nodeType":"YulFunctionCall","src":"5300:54:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5289:7:25"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5261:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5271:7:25","type":""}],"src":"5234:126:25"},{"body":{"nodeType":"YulBlock","src":"5411:51:25","statements":[{"nodeType":"YulAssignment","src":"5421:35:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5450:5:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5432:17:25"},"nodeType":"YulFunctionCall","src":"5432:24:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5421:7:25"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5393:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5403:7:25","type":""}],"src":"5366:96:25"},{"body":{"nodeType":"YulBlock","src":"5533:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5550:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5573:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5555:17:25"},"nodeType":"YulFunctionCall","src":"5555:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5543:6:25"},"nodeType":"YulFunctionCall","src":"5543:37:25"},"nodeType":"YulExpressionStatement","src":"5543:37:25"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5521:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5528:3:25","type":""}],"src":"5468:118:25"},{"body":{"nodeType":"YulBlock","src":"5690:124:25","statements":[{"nodeType":"YulAssignment","src":"5700:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5712:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5723:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5708:3:25"},"nodeType":"YulFunctionCall","src":"5708:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5700:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5780:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5793:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5804:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5789:3:25"},"nodeType":"YulFunctionCall","src":"5789:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5736:43:25"},"nodeType":"YulFunctionCall","src":"5736:71:25"},"nodeType":"YulExpressionStatement","src":"5736:71:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5662:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5674:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5685:4:25","type":""}],"src":"5592:222:25"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50336040518060400160405280601481526020017f4e475520536f756c20426f756e6420546f6b656e0000000000000000000000008152506040518060400160405280600681526020017f4e4755534254000000000000000000000000000000000000000000000000000081525081600090816200009091906200047a565b508060019081620000a291906200047a565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200011a5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620001119190620005a6565b60405180910390fd5b6200012b816200013a60201b60201c565b506000600781905550620005c3565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200028257607f821691505b6020821081036200029857620002976200023a565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002c3565b6200030e8683620002c3565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200035b620003556200034f8462000326565b62000330565b62000326565b9050919050565b6000819050919050565b62000377836200033a565b6200038f620003868262000362565b848454620002d0565b825550505050565b600090565b620003a662000397565b620003b38184846200036c565b505050565b5b81811015620003db57620003cf6000826200039c565b600181019050620003b9565b5050565b601f8211156200042a57620003f4816200029e565b620003ff84620002b3565b810160208510156200040f578190505b620004276200041e85620002b3565b830182620003b8565b50505b505050565b600082821c905092915050565b60006200044f600019846008026200042f565b1980831691505092915050565b60006200046a83836200043c565b9150826002028217905092915050565b620004858262000200565b67ffffffffffffffff811115620004a157620004a06200020b565b5b620004ad825462000269565b620004ba828285620003df565b600060209050601f831160018114620004f25760008415620004dd578287015190505b620004e985826200045c565b86555062000559565b601f19841662000502866200029e565b60005b828110156200052c5784890151825560018201915060208501945060208101905062000505565b868310156200054c578489015162000548601f8916826200043c565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200058e8262000561565b9050919050565b620005a08162000581565b82525050565b6000602082019050620005bd600083018462000595565b92915050565b611fd680620005d36000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063a22cb46511610071578063a22cb465146102df578063b88d4fde146102fb578063c87b56dd14610317578063e985e9c514610347578063f2fde38b1461037757610116565b806370a0823114610269578063715018a6146102995780638da5cb5b146102a357806395d89b41146102c157610116565b806323b872dd116100e957806323b872dd146101b557806342842e0e146101d157806356a9c454146101ed5780636352211e1461021d5780636a6278421461024d57610116565b806301ffc9a71461011b57806306fdde031461014b578063081812fc14610169578063095ea7b314610199575b600080fd5b610135600480360381019061013091906117b3565b610393565b60405161014291906117fb565b60405180910390f35b610153610475565b60405161016091906118a6565b60405180910390f35b610183600480360381019061017e91906118fe565b610507565b604051610190919061196c565b60405180910390f35b6101b360048036038101906101ae91906119b3565b610523565b005b6101cf60048036038101906101ca91906119f3565b610539565b005b6101eb60048036038101906101e691906119f3565b610574565b005b61020760048036038101906102029190611a46565b610594565b60405161021491906117fb565b60405180910390f35b610237600480360381019061023291906118fe565b6105ea565b604051610244919061196c565b60405180910390f35b61026760048036038101906102629190611a46565b6105fc565b005b610283600480360381019061027e9190611a46565b610712565b6040516102909190611a82565b60405180910390f35b6102a16107cc565b005b6102ab6107e0565b6040516102b8919061196c565b60405180910390f35b6102c961080a565b6040516102d691906118a6565b60405180910390f35b6102f960048036038101906102f49190611ac9565b61089c565b005b61031560048036038101906103109190611c3e565b6108b2565b005b610331600480360381019061032c91906118fe565b6108ed565b60405161033e91906118a6565b60405180910390f35b610361600480360381019061035c9190611cc1565b610956565b60405161036e91906117fb565b60405180910390f35b610391600480360381019061038c9190611a46565b6109ea565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061045e57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061046e575061046d82610a70565b5b9050919050565b60606000805461048490611d30565b80601f01602080910402602001604051908101604052809291908181526020018280546104b090611d30565b80156104fd5780601f106104d2576101008083540402835291602001916104fd565b820191906000526020600020905b8154815290600101906020018083116104e057829003601f168201915b5050505050905090565b600061051282610ada565b5061051c82610b62565b9050919050565b6105358282610530610b9f565b610ba7565b5050565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056b90611dd3565b60405180910390fd5b61058f838383604051806020016040528060008152506108b2565b505050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60006105f582610ada565b9050919050565b610604610bb9565b600860008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610691576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068890611e65565b60405180910390fd5b6001600760008282546106a49190611eb4565b925050819055506106b781600754610c40565b6001600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107855760006040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161077c919061196c565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6107d4610bb9565b6107de6000610d39565b565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461081990611d30565b80601f016020809104026020016040519081016040528092919081815260200182805461084590611d30565b80156108925780601f1061086757610100808354040283529160200191610892565b820191906000526020600020905b81548152906001019060200180831161087557829003601f168201915b5050505050905090565b6108ae6108a7610b9f565b8383610dff565b5050565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e490611dd3565b60405180910390fd5b60606108f882610ada565b506000610903610f6e565b90506000815111610923576040518060200160405280600081525061094e565b8061092d84610f85565b60405160200161093e929190611f24565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6109f2610bb9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a645760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a5b919061196c565b60405180910390fd5b610a6d81610d39565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600080610ae683611053565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b5957826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610b509190611a82565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610bb48383836001611090565b505050565b610bc1610b9f565b73ffffffffffffffffffffffffffffffffffffffff16610bdf6107e0565b73ffffffffffffffffffffffffffffffffffffffff1614610c3e57610c02610b9f565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c35919061196c565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cb25760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610ca9919061196c565b60405180910390fd5b6000610cc083836000611255565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610d345760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401610d2b919061196c565b60405180910390fd5b505050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e7057816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610e67919061196c565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f6191906117fb565b60405180910390a3505050565b606060405180602001604052806000815250905090565b606060006001610f948461146f565b01905060008167ffffffffffffffff811115610fb357610fb2611b13565b5b6040519080825280601f01601f191660200182016040528015610fe55781602001600182028036833780820191505090505b509050600082602001820190505b600115611048578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161103c5761103b611f48565b5b04945060008503610ff3575b819350505050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806110c95750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156111fd5760006110d984610ada565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561114457508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561115757506111558184610956565b155b1561119957826040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401611190919061196c565b60405180910390fd5b81156111fb57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b60008061126184611053565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146112a3576112a28184866115c2565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611334576112e5600085600080611090565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146113b7576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106114cd577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816114c3576114c2611f48565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061150a576d04ee2d6d415b85acef81000000008381611500576114ff611f48565b5b0492506020810190505b662386f26fc10000831061153957662386f26fc10000838161152f5761152e611f48565b5b0492506010810190505b6305f5e1008310611562576305f5e100838161155857611557611f48565b5b0492506008810190505b612710831061158757612710838161157d5761157c611f48565b5b0492506004810190505b606483106115aa57606483816115a05761159f611f48565b5b0492506002810190505b600a83106115b9576001810190505b80915050919050565b6115cd838383611686565b61168157600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361164257806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016116399190611a82565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611678929190611f77565b60405180910390fd5b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561173e57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806116ff57506116fe8484610956565b5b8061173d57508273ffffffffffffffffffffffffffffffffffffffff1661172583610b62565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6117908161175b565b811461179b57600080fd5b50565b6000813590506117ad81611787565b92915050565b6000602082840312156117c9576117c8611751565b5b60006117d78482850161179e565b91505092915050565b60008115159050919050565b6117f5816117e0565b82525050565b600060208201905061181060008301846117ec565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611850578082015181840152602081019050611835565b60008484015250505050565b6000601f19601f8301169050919050565b600061187882611816565b6118828185611821565b9350611892818560208601611832565b61189b8161185c565b840191505092915050565b600060208201905081810360008301526118c0818461186d565b905092915050565b6000819050919050565b6118db816118c8565b81146118e657600080fd5b50565b6000813590506118f8816118d2565b92915050565b60006020828403121561191457611913611751565b5b6000611922848285016118e9565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119568261192b565b9050919050565b6119668161194b565b82525050565b6000602082019050611981600083018461195d565b92915050565b6119908161194b565b811461199b57600080fd5b50565b6000813590506119ad81611987565b92915050565b600080604083850312156119ca576119c9611751565b5b60006119d88582860161199e565b92505060206119e9858286016118e9565b9150509250929050565b600080600060608486031215611a0c57611a0b611751565b5b6000611a1a8682870161199e565b9350506020611a2b8682870161199e565b9250506040611a3c868287016118e9565b9150509250925092565b600060208284031215611a5c57611a5b611751565b5b6000611a6a8482850161199e565b91505092915050565b611a7c816118c8565b82525050565b6000602082019050611a976000830184611a73565b92915050565b611aa6816117e0565b8114611ab157600080fd5b50565b600081359050611ac381611a9d565b92915050565b60008060408385031215611ae057611adf611751565b5b6000611aee8582860161199e565b9250506020611aff85828601611ab4565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611b4b8261185c565b810181811067ffffffffffffffff82111715611b6a57611b69611b13565b5b80604052505050565b6000611b7d611747565b9050611b898282611b42565b919050565b600067ffffffffffffffff821115611ba957611ba8611b13565b5b611bb28261185c565b9050602081019050919050565b82818337600083830152505050565b6000611be1611bdc84611b8e565b611b73565b905082815260208101848484011115611bfd57611bfc611b0e565b5b611c08848285611bbf565b509392505050565b600082601f830112611c2557611c24611b09565b5b8135611c35848260208601611bce565b91505092915050565b60008060008060808587031215611c5857611c57611751565b5b6000611c668782880161199e565b9450506020611c778782880161199e565b9350506040611c88878288016118e9565b925050606085013567ffffffffffffffff811115611ca957611ca8611756565b5b611cb587828801611c10565b91505092959194509250565b60008060408385031215611cd857611cd7611751565b5b6000611ce68582860161199e565b9250506020611cf78582860161199e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611d4857607f821691505b602082108103611d5b57611d5a611d01565b5b50919050565b7f536f756c426f756e64546f6b656e3a20546f6b656e7320617265206e6f6e2d7460008201527f72616e7366657261626c65000000000000000000000000000000000000000000602082015250565b6000611dbd602b83611821565b9150611dc882611d61565b604082019050919050565b60006020820190508181036000830152611dec81611db0565b9050919050565b7f416464726573732068617320616c7265616479206d696e74656420616e20534260008201527f5400000000000000000000000000000000000000000000000000000000000000602082015250565b6000611e4f602183611821565b9150611e5a82611df3565b604082019050919050565b60006020820190508181036000830152611e7e81611e42565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611ebf826118c8565b9150611eca836118c8565b9250828201905080821115611ee257611ee1611e85565b5b92915050565b600081905092915050565b6000611efe82611816565b611f088185611ee8565b9350611f18818560208601611832565b80840191505092915050565b6000611f308285611ef3565b9150611f3c8284611ef3565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000604082019050611f8c600083018561195d565b611f996020830184611a73565b939250505056fea26469706673582212209dc77044c48b05b3840a2be4db7acf796a347c64b30fb9add2cd1b6e0b61035264736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E475520536F756C20426F756E6420546F6B656E000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E47555342540000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x90 SWAP2 SWAP1 PUSH3 0x47A JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xA2 SWAP2 SWAP1 PUSH3 0x47A JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x11A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x111 SWAP2 SWAP1 PUSH3 0x5A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x12B DUP2 PUSH3 0x13A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH3 0x5C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x282 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x298 JUMPI PUSH3 0x297 PUSH3 0x23A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x302 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2C3 JUMP JUMPDEST PUSH3 0x30E DUP7 DUP4 PUSH3 0x2C3 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x35B PUSH3 0x355 PUSH3 0x34F DUP5 PUSH3 0x326 JUMP JUMPDEST PUSH3 0x330 JUMP JUMPDEST PUSH3 0x326 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x377 DUP4 PUSH3 0x33A JUMP JUMPDEST PUSH3 0x38F PUSH3 0x386 DUP3 PUSH3 0x362 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x2D0 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3A6 PUSH3 0x397 JUMP JUMPDEST PUSH3 0x3B3 DUP2 DUP5 DUP5 PUSH3 0x36C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3DB JUMPI PUSH3 0x3CF PUSH1 0x0 DUP3 PUSH3 0x39C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3B9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x42A JUMPI PUSH3 0x3F4 DUP2 PUSH3 0x29E JUMP JUMPDEST PUSH3 0x3FF DUP5 PUSH3 0x2B3 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x40F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x427 PUSH3 0x41E DUP6 PUSH3 0x2B3 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3B8 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x44F PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x42F JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x46A DUP4 DUP4 PUSH3 0x43C JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x485 DUP3 PUSH3 0x200 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4A1 JUMPI PUSH3 0x4A0 PUSH3 0x20B JUMP JUMPDEST JUMPDEST PUSH3 0x4AD DUP3 SLOAD PUSH3 0x269 JUMP JUMPDEST PUSH3 0x4BA DUP3 DUP3 DUP6 PUSH3 0x3DF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x4F2 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x4DD JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x4E9 DUP6 DUP3 PUSH3 0x45C JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x559 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x502 DUP7 PUSH3 0x29E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x52C JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x505 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x54C JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x548 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x43C JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x58E DUP3 PUSH3 0x561 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x5A0 DUP2 PUSH3 0x581 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x5BD PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x595 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FD6 DUP1 PUSH3 0x5D3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x377 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2C1 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x56A9C454 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x24D JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x199 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x17B3 JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x475 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x18A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x18FE JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x196C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x19B3 JUMP JUMPDEST PUSH2 0x523 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0x539 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x1A46 JUMP JUMPDEST PUSH2 0x594 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x18FE JUMP JUMPDEST PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x196C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x267 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x1A46 JUMP JUMPDEST PUSH2 0x5FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x283 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x1A46 JUMP JUMPDEST PUSH2 0x712 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x1A82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH2 0x7CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AB PUSH2 0x7E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x196C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C9 PUSH2 0x80A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x18A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x1AC9 JUMP JUMPDEST PUSH2 0x89C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x1C3E JUMP JUMPDEST PUSH2 0x8B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x18FE JUMP JUMPDEST PUSH2 0x8ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x18A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x361 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35C SWAP2 SWAP1 PUSH2 0x1CC1 JUMP JUMPDEST PUSH2 0x956 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x391 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x1A46 JUMP JUMPDEST PUSH2 0x9EA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x45E JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x46E JUMPI POP PUSH2 0x46D DUP3 PUSH2 0xA70 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x484 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4B0 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x512 DUP3 PUSH2 0xADA JUMP JUMPDEST POP PUSH2 0x51C DUP3 PUSH2 0xB62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x535 DUP3 DUP3 PUSH2 0x530 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0xBA7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56B SWAP1 PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x58F DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F5 DUP3 PUSH2 0xADA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x604 PUSH2 0xBB9 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x691 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x688 SWAP1 PUSH2 0x1E65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6A4 SWAP2 SWAP1 PUSH2 0x1EB4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x6B7 DUP2 PUSH1 0x7 SLOAD PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x785 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77C SWAP2 SWAP1 PUSH2 0x196C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7D4 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x7DE PUSH1 0x0 PUSH2 0xD39 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x819 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x845 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x892 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x867 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x892 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x875 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8AE PUSH2 0x8A7 PUSH2 0xB9F JUMP JUMPDEST DUP4 DUP4 PUSH2 0xDFF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E4 SWAP1 PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH2 0x8F8 DUP3 PUSH2 0xADA JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x903 PUSH2 0xF6E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x923 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x94E JUMP JUMPDEST DUP1 PUSH2 0x92D DUP5 PUSH2 0xF85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x93E SWAP3 SWAP2 SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9F2 PUSH2 0xBB9 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA64 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5B SWAP2 SWAP1 PUSH2 0x196C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA6D DUP2 PUSH2 0xD39 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAE6 DUP4 PUSH2 0x1053 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB59 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB50 SWAP2 SWAP1 PUSH2 0x1A82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBB4 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1090 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xBC1 PUSH2 0xB9F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBDF PUSH2 0x7E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC3E JUMPI PUSH2 0xC02 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC35 SWAP2 SWAP1 PUSH2 0x196C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCB2 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA9 SWAP2 SWAP1 PUSH2 0x196C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCC0 DUP4 DUP4 PUSH1 0x0 PUSH2 0x1255 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD34 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2B SWAP2 SWAP1 PUSH2 0x196C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE70 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE67 SWAP2 SWAP1 PUSH2 0x196C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF61 SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0xF94 DUP5 PUSH2 0x146F JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFB3 JUMPI PUSH2 0xFB2 PUSH2 0x1B13 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFE5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1048 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x103C JUMPI PUSH2 0x103B PUSH2 0x1F48 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0xFF3 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x10C9 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x11FD JUMPI PUSH1 0x0 PUSH2 0x10D9 DUP5 PUSH2 0xADA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1144 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1157 JUMPI POP PUSH2 0x1155 DUP2 DUP5 PUSH2 0x956 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1199 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1190 SWAP2 SWAP1 PUSH2 0x196C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x11FB JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1261 DUP5 PUSH2 0x1053 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12A3 JUMPI PUSH2 0x12A2 DUP2 DUP5 DUP7 PUSH2 0x15C2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1334 JUMPI PUSH2 0x12E5 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x1090 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13B7 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x14CD JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x14C3 JUMPI PUSH2 0x14C2 PUSH2 0x1F48 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x150A JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1500 JUMPI PUSH2 0x14FF PUSH2 0x1F48 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1539 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x152F JUMPI PUSH2 0x152E PUSH2 0x1F48 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1562 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1558 JUMPI PUSH2 0x1557 PUSH2 0x1F48 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1587 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x157D JUMPI PUSH2 0x157C PUSH2 0x1F48 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x15AA JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x15A0 JUMPI PUSH2 0x159F PUSH2 0x1F48 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x15B9 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15CD DUP4 DUP4 DUP4 PUSH2 0x1686 JUMP JUMPDEST PUSH2 0x1681 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1642 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1639 SWAP2 SWAP1 PUSH2 0x1A82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1678 SWAP3 SWAP2 SWAP1 PUSH2 0x1F77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x173E JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x16FF JUMPI POP PUSH2 0x16FE DUP5 DUP5 PUSH2 0x956 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x173D JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1725 DUP4 PUSH2 0xB62 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1790 DUP2 PUSH2 0x175B JUMP JUMPDEST DUP2 EQ PUSH2 0x179B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17AD DUP2 PUSH2 0x1787 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17C9 JUMPI PUSH2 0x17C8 PUSH2 0x1751 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17D7 DUP5 DUP3 DUP6 ADD PUSH2 0x179E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17F5 DUP2 PUSH2 0x17E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1810 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1850 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1835 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1878 DUP3 PUSH2 0x1816 JUMP JUMPDEST PUSH2 0x1882 DUP2 DUP6 PUSH2 0x1821 JUMP JUMPDEST SWAP4 POP PUSH2 0x1892 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1832 JUMP JUMPDEST PUSH2 0x189B DUP2 PUSH2 0x185C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18C0 DUP2 DUP5 PUSH2 0x186D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18DB DUP2 PUSH2 0x18C8 JUMP JUMPDEST DUP2 EQ PUSH2 0x18E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18F8 DUP2 PUSH2 0x18D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1914 JUMPI PUSH2 0x1913 PUSH2 0x1751 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1922 DUP5 DUP3 DUP6 ADD PUSH2 0x18E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1956 DUP3 PUSH2 0x192B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1966 DUP2 PUSH2 0x194B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1981 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x195D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1990 DUP2 PUSH2 0x194B JUMP JUMPDEST DUP2 EQ PUSH2 0x199B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19AD DUP2 PUSH2 0x1987 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19CA JUMPI PUSH2 0x19C9 PUSH2 0x1751 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19D8 DUP6 DUP3 DUP7 ADD PUSH2 0x199E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19E9 DUP6 DUP3 DUP7 ADD PUSH2 0x18E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A0C JUMPI PUSH2 0x1A0B PUSH2 0x1751 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A1A DUP7 DUP3 DUP8 ADD PUSH2 0x199E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A2B DUP7 DUP3 DUP8 ADD PUSH2 0x199E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A3C DUP7 DUP3 DUP8 ADD PUSH2 0x18E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A5C JUMPI PUSH2 0x1A5B PUSH2 0x1751 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A6A DUP5 DUP3 DUP6 ADD PUSH2 0x199E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A7C DUP2 PUSH2 0x18C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A97 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A73 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AA6 DUP2 PUSH2 0x17E0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AC3 DUP2 PUSH2 0x1A9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AE0 JUMPI PUSH2 0x1ADF PUSH2 0x1751 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AEE DUP6 DUP3 DUP7 ADD PUSH2 0x199E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AFF DUP6 DUP3 DUP7 ADD PUSH2 0x1AB4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1B4B DUP3 PUSH2 0x185C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1B6A JUMPI PUSH2 0x1B69 PUSH2 0x1B13 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B7D PUSH2 0x1747 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B89 DUP3 DUP3 PUSH2 0x1B42 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BA9 JUMPI PUSH2 0x1BA8 PUSH2 0x1B13 JUMP JUMPDEST JUMPDEST PUSH2 0x1BB2 DUP3 PUSH2 0x185C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE1 PUSH2 0x1BDC DUP5 PUSH2 0x1B8E JUMP JUMPDEST PUSH2 0x1B73 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1BFD JUMPI PUSH2 0x1BFC PUSH2 0x1B0E JUMP JUMPDEST JUMPDEST PUSH2 0x1C08 DUP5 DUP3 DUP6 PUSH2 0x1BBF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C25 JUMPI PUSH2 0x1C24 PUSH2 0x1B09 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C35 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1BCE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C58 JUMPI PUSH2 0x1C57 PUSH2 0x1751 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C66 DUP8 DUP3 DUP9 ADD PUSH2 0x199E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1C77 DUP8 DUP3 DUP9 ADD PUSH2 0x199E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1C88 DUP8 DUP3 DUP9 ADD PUSH2 0x18E9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CA9 JUMPI PUSH2 0x1CA8 PUSH2 0x1756 JUMP JUMPDEST JUMPDEST PUSH2 0x1CB5 DUP8 DUP3 DUP9 ADD PUSH2 0x1C10 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CD8 JUMPI PUSH2 0x1CD7 PUSH2 0x1751 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CE6 DUP6 DUP3 DUP7 ADD PUSH2 0x199E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CF7 DUP6 DUP3 DUP7 ADD PUSH2 0x199E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1D48 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1D5B JUMPI PUSH2 0x1D5A PUSH2 0x1D01 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536F756C426F756E64546F6B656E3A20546F6B656E7320617265206E6F6E2D74 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72616E7366657261626C65000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DBD PUSH1 0x2B DUP4 PUSH2 0x1821 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DC8 DUP3 PUSH2 0x1D61 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DEC DUP2 PUSH2 0x1DB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573732068617320616C7265616479206D696E74656420616E205342 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x5400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E4F PUSH1 0x21 DUP4 PUSH2 0x1821 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E5A DUP3 PUSH2 0x1DF3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E7E DUP2 PUSH2 0x1E42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1EBF DUP3 PUSH2 0x18C8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ECA DUP4 PUSH2 0x18C8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1EE2 JUMPI PUSH2 0x1EE1 PUSH2 0x1E85 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EFE DUP3 PUSH2 0x1816 JUMP JUMPDEST PUSH2 0x1F08 DUP2 DUP6 PUSH2 0x1EE8 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F18 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1832 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F30 DUP3 DUP6 PUSH2 0x1EF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F3C DUP3 DUP5 PUSH2 0x1EF3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F8C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x195D JUMP JUMPDEST PUSH2 0x1F99 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A73 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 0xC7 PUSH17 0x44C48B05B3840A2BE4DB7ACF796A347C64 0xB3 0xF 0xB9 0xAD 0xD2 0xCD SHL PUSH15 0xB61035264736F6C63430008140033 ","sourceMap":"170:965:24:-:0;;;306:111;;;;;;;;;;369:10;1380:113:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1454:5;1446;:13;;;;;;:::i;:::-;;1479:7;1469;:17;;;;;;:::i;:::-;;1380:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;409:1:24::2;391:15;:19;;;;170:965:::0;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:99:25:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;170:965:24:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_1713":{"entryPoint":2983,"id":1713,"parameterSlots":3,"returnSlots":0},"@_approve_1779":{"entryPoint":4240,"id":1779,"parameterSlots":4,"returnSlots":0},"@_baseURI_1094":{"entryPoint":3950,"id":1094,"parameterSlots":0,"returnSlots":1},"@_checkAuthorized_1353":{"entryPoint":5570,"id":1353,"parameterSlots":3,"returnSlots":0},"@_checkOwner_84":{"entryPoint":3001,"id":84,"parameterSlots":0,"returnSlots":0},"@_getApproved_1280":{"entryPoint":2914,"id":1280,"parameterSlots":1,"returnSlots":1},"@_isAuthorized_1316":{"entryPoint":5766,"id":1316,"parameterSlots":3,"returnSlots":1},"@_mint_1509":{"entryPoint":3136,"id":1509,"parameterSlots":2,"returnSlots":0},"@_msgSender_2224":{"entryPoint":2975,"id":2224,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1267":{"entryPoint":4179,"id":1267,"parameterSlots":1,"returnSlots":1},"@_requireOwned_1845":{"entryPoint":2778,"id":1845,"parameterSlots":1,"returnSlots":1},"@_setApprovalForAll_1816":{"entryPoint":3583,"id":1816,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":3385,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_1459":{"entryPoint":4693,"id":1459,"parameterSlots":3,"returnSlots":1},"@approve_1110":{"entryPoint":1315,"id":1110,"parameterSlots":2,"returnSlots":0},"@balanceOf_1018":{"entryPoint":1810,"id":1018,"parameterSlots":1,"returnSlots":1},"@getApproved_1127":{"entryPoint":1287,"id":1127,"parameterSlots":1,"returnSlots":1},"@hasSBT_7620":{"entryPoint":1428,"id":7620,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_1160":{"entryPoint":2390,"id":1160,"parameterSlots":2,"returnSlots":1},"@log10_4908":{"entryPoint":5231,"id":4908,"parameterSlots":1,"returnSlots":1},"@mint_7576":{"entryPoint":1532,"id":7576,"parameterSlots":1,"returnSlots":0},"@name_1040":{"entryPoint":1141,"id":1040,"parameterSlots":0,"returnSlots":1},"@ownerOf_1031":{"entryPoint":1514,"id":1031,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":2016,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1996,"id":98,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_1224":{"entryPoint":1396,"id":1224,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_7608":{"entryPoint":2226,"id":7608,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1143":{"entryPoint":2204,"id":1143,"parameterSlots":2,"returnSlots":0},"@supportsInterface_3517":{"entryPoint":2672,"id":3517,"parameterSlots":1,"returnSlots":1},"@supportsInterface_990":{"entryPoint":915,"id":990,"parameterSlots":1,"returnSlots":1},"@symbol_1049":{"entryPoint":2058,"id":1049,"parameterSlots":0,"returnSlots":1},"@toString_2372":{"entryPoint":3973,"id":2372,"parameterSlots":1,"returnSlots":1},"@tokenURI_1085":{"entryPoint":2285,"id":1085,"parameterSlots":1,"returnSlots":1},"@transferFrom_7591":{"entryPoint":1337,"id":7591,"parameterSlots":3,"returnSlots":0},"@transferOwnership_126":{"entryPoint":2538,"id":126,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":7118,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":6558,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":6836,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":6046,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":7184,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6377,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6726,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":7361,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":6643,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":7230,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":6857,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6579,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":6067,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6398,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6493,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6124,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6253,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7923,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_2597068d33a295edc85a1ae1f52030e1853f79ea98290f0d7046806186b0c635_to_t_string_memory_ptr_fromStack":{"entryPoint":7600,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e3b737c0f4e11dbbe996f8c49d6412d2a2d006b0d7072d02a885755268728a3c_to_t_string_memory_ptr_fromStack":{"entryPoint":7746,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6771,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7972,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":6508,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":8055,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":6139,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6310,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2597068d33a295edc85a1ae1f52030e1853f79ea98290f0d7046806186b0c635__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7635,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e3b737c0f4e11dbbe996f8c49d6412d2a2d006b0d7072d02a885755268728a3c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7781,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6786,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":7027,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":5959,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":7054,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":6166,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6177,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7912,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7860,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":6475,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":6112,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":5979,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":6443,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":6344,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":7103,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":6194,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7472,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":6978,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x11":{"entryPoint":7813,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":8008,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":7425,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6931,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":6921,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":6926,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5974,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5969,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":6236,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_2597068d33a295edc85a1ae1f52030e1853f79ea98290f0d7046806186b0c635":{"entryPoint":7521,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e3b737c0f4e11dbbe996f8c49d6412d2a2d006b0d7072d02a885755268728a3c":{"entryPoint":7667,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":6535,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":6813,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":6023,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":6354,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:14934:25","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:25","statements":[{"nodeType":"YulAssignment","src":"57:19:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:25"},"nodeType":"YulFunctionCall","src":"67:9:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:25"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:25","type":""}],"src":"7:75:25"},{"body":{"nodeType":"YulBlock","src":"177:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:25"},"nodeType":"YulFunctionCall","src":"187:12:25"},"nodeType":"YulExpressionStatement","src":"187:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:25"},{"body":{"nodeType":"YulBlock","src":"300:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:25"},"nodeType":"YulFunctionCall","src":"310:12:25"},"nodeType":"YulExpressionStatement","src":"310:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:25"},{"body":{"nodeType":"YulBlock","src":"378:105:25","statements":[{"nodeType":"YulAssignment","src":"388:89:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:25","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:25"},"nodeType":"YulFunctionCall","src":"399:78:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:25"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:25","type":""}],"src":"334:149:25"},{"body":{"nodeType":"YulBlock","src":"531:78:25","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:25"},"nodeType":"YulFunctionCall","src":"589:12:25"},"nodeType":"YulExpressionStatement","src":"589:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:25"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:25"},"nodeType":"YulFunctionCall","src":"561:23:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:25"},"nodeType":"YulFunctionCall","src":"551:34:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:25"},"nodeType":"YulFunctionCall","src":"544:42:25"},"nodeType":"YulIf","src":"541:62:25"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:25","type":""}],"src":"489:120:25"},{"body":{"nodeType":"YulBlock","src":"666:86:25","statements":[{"nodeType":"YulAssignment","src":"676:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:25"},"nodeType":"YulFunctionCall","src":"685:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:25"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:25"},"nodeType":"YulFunctionCall","src":"714:32:25"},"nodeType":"YulExpressionStatement","src":"714:32:25"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:25","type":""}],"src":"615:137:25"},{"body":{"nodeType":"YulBlock","src":"823:262:25","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:25"},"nodeType":"YulFunctionCall","src":"871:79:25"},"nodeType":"YulExpressionStatement","src":"871:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:25"},"nodeType":"YulFunctionCall","src":"840:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:25"},"nodeType":"YulFunctionCall","src":"836:32:25"},"nodeType":"YulIf","src":"833:119:25"},{"nodeType":"YulBlock","src":"962:116:25","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:25","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:25"},"nodeType":"YulFunctionCall","src":"1036:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:25"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:25"},"nodeType":"YulFunctionCall","src":"1016:52:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:25"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:25","type":""}],"src":"758:327:25"},{"body":{"nodeType":"YulBlock","src":"1133:48:25","statements":[{"nodeType":"YulAssignment","src":"1143:32:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:25"},"nodeType":"YulFunctionCall","src":"1161:13:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:25"},"nodeType":"YulFunctionCall","src":"1154:21:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:25"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:25","type":""}],"src":"1091:90:25"},{"body":{"nodeType":"YulBlock","src":"1246:50:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:25"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:25"},"nodeType":"YulFunctionCall","src":"1268:21:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:25"},"nodeType":"YulFunctionCall","src":"1256:34:25"},"nodeType":"YulExpressionStatement","src":"1256:34:25"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:25","type":""}],"src":"1187:109:25"},{"body":{"nodeType":"YulBlock","src":"1394:118:25","statements":[{"nodeType":"YulAssignment","src":"1404:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:25"},"nodeType":"YulFunctionCall","src":"1412:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:25"},"nodeType":"YulFunctionCall","src":"1487:17:25"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:25"},"nodeType":"YulFunctionCall","src":"1440:65:25"},"nodeType":"YulExpressionStatement","src":"1440:65:25"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:25","type":""}],"src":"1302:210:25"},{"body":{"nodeType":"YulBlock","src":"1577:40:25","statements":[{"nodeType":"YulAssignment","src":"1588:22:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:25"},"nodeType":"YulFunctionCall","src":"1598:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:25"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:25","type":""}],"src":"1518:99:25"},{"body":{"nodeType":"YulBlock","src":"1719:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:25"},"nodeType":"YulFunctionCall","src":"1729:19:25"},"nodeType":"YulExpressionStatement","src":"1729:19:25"},{"nodeType":"YulAssignment","src":"1757:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:25"},"nodeType":"YulFunctionCall","src":"1772:14:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:25","type":""}],"src":"1623:169:25"},{"body":{"nodeType":"YulBlock","src":"1860:184:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1870:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"1879:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1874:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"1939:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1964:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"1969:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1960:3:25"},"nodeType":"YulFunctionCall","src":"1960:11:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1983:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"1988:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1979:3:25"},"nodeType":"YulFunctionCall","src":"1979:11:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1973:5:25"},"nodeType":"YulFunctionCall","src":"1973:18:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1953:6:25"},"nodeType":"YulFunctionCall","src":"1953:39:25"},"nodeType":"YulExpressionStatement","src":"1953:39:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"1903:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1897:2:25"},"nodeType":"YulFunctionCall","src":"1897:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1911:19:25","statements":[{"nodeType":"YulAssignment","src":"1913:15:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1922:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"1925:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1918:3:25"},"nodeType":"YulFunctionCall","src":"1918:10:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1913:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"1893:3:25","statements":[]},"src":"1889:113:25"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2022:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"2027:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2018:3:25"},"nodeType":"YulFunctionCall","src":"2018:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"2036:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2011:6:25"},"nodeType":"YulFunctionCall","src":"2011:27:25"},"nodeType":"YulExpressionStatement","src":"2011:27:25"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1842:3:25","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1847:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"1852:6:25","type":""}],"src":"1798:246:25"},{"body":{"nodeType":"YulBlock","src":"2098:54:25","statements":[{"nodeType":"YulAssignment","src":"2108:38:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2126:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"2133:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2122:3:25"},"nodeType":"YulFunctionCall","src":"2122:14:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2142:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2138:3:25"},"nodeType":"YulFunctionCall","src":"2138:7:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2118:3:25"},"nodeType":"YulFunctionCall","src":"2118:28:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2108:6:25"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2081:5:25","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2091:6:25","type":""}],"src":"2050:102:25"},{"body":{"nodeType":"YulBlock","src":"2250:285:25","statements":[{"nodeType":"YulVariableDeclaration","src":"2260:53:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2307:5:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2274:32:25"},"nodeType":"YulFunctionCall","src":"2274:39:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2264:6:25","type":""}]},{"nodeType":"YulAssignment","src":"2322:78:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2388:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"2393:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2329:58:25"},"nodeType":"YulFunctionCall","src":"2329:71:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2322:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2448:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"2455:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2444:3:25"},"nodeType":"YulFunctionCall","src":"2444:16:25"},{"name":"pos","nodeType":"YulIdentifier","src":"2462:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"2467:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2409:34:25"},"nodeType":"YulFunctionCall","src":"2409:65:25"},"nodeType":"YulExpressionStatement","src":"2409:65:25"},{"nodeType":"YulAssignment","src":"2483:46:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2494:3:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2521:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2499:21:25"},"nodeType":"YulFunctionCall","src":"2499:29:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2490:3:25"},"nodeType":"YulFunctionCall","src":"2490:39:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2483:3:25"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2231:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2238:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2246:3:25","type":""}],"src":"2158:377:25"},{"body":{"nodeType":"YulBlock","src":"2659:195:25","statements":[{"nodeType":"YulAssignment","src":"2669:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2681:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2692:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2677:3:25"},"nodeType":"YulFunctionCall","src":"2677:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2669:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2716:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2727:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:25"},"nodeType":"YulFunctionCall","src":"2712:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2735:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"2741:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2731:3:25"},"nodeType":"YulFunctionCall","src":"2731:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2705:6:25"},"nodeType":"YulFunctionCall","src":"2705:47:25"},"nodeType":"YulExpressionStatement","src":"2705:47:25"},{"nodeType":"YulAssignment","src":"2761:86:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2833:6:25"},{"name":"tail","nodeType":"YulIdentifier","src":"2842:4:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2769:63:25"},"nodeType":"YulFunctionCall","src":"2769:78:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2761:4:25"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2631:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2643:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2654:4:25","type":""}],"src":"2541:313:25"},{"body":{"nodeType":"YulBlock","src":"2905:32:25","statements":[{"nodeType":"YulAssignment","src":"2915:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"2926:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2915:7:25"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2887:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2897:7:25","type":""}],"src":"2860:77:25"},{"body":{"nodeType":"YulBlock","src":"2986:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"3043:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3052:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3055:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3045:6:25"},"nodeType":"YulFunctionCall","src":"3045:12:25"},"nodeType":"YulExpressionStatement","src":"3045:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3009:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3034:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3016:17:25"},"nodeType":"YulFunctionCall","src":"3016:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3006:2:25"},"nodeType":"YulFunctionCall","src":"3006:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2999:6:25"},"nodeType":"YulFunctionCall","src":"2999:43:25"},"nodeType":"YulIf","src":"2996:63:25"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2979:5:25","type":""}],"src":"2943:122:25"},{"body":{"nodeType":"YulBlock","src":"3123:87:25","statements":[{"nodeType":"YulAssignment","src":"3133:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3155:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3142:12:25"},"nodeType":"YulFunctionCall","src":"3142:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3133:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3198:5:25"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3171:26:25"},"nodeType":"YulFunctionCall","src":"3171:33:25"},"nodeType":"YulExpressionStatement","src":"3171:33:25"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3101:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"3109:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3117:5:25","type":""}],"src":"3071:139:25"},{"body":{"nodeType":"YulBlock","src":"3282:263:25","statements":[{"body":{"nodeType":"YulBlock","src":"3328:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3330:77:25"},"nodeType":"YulFunctionCall","src":"3330:79:25"},"nodeType":"YulExpressionStatement","src":"3330:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3303:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"3312:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3299:3:25"},"nodeType":"YulFunctionCall","src":"3299:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"3324:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3295:3:25"},"nodeType":"YulFunctionCall","src":"3295:32:25"},"nodeType":"YulIf","src":"3292:119:25"},{"nodeType":"YulBlock","src":"3421:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"3436:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"3450:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3440:6:25","type":""}]},{"nodeType":"YulAssignment","src":"3465:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3500:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"3511:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3496:3:25"},"nodeType":"YulFunctionCall","src":"3496:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3520:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3475:20:25"},"nodeType":"YulFunctionCall","src":"3475:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3465:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3252:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3263:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3275:6:25","type":""}],"src":"3216:329:25"},{"body":{"nodeType":"YulBlock","src":"3596:81:25","statements":[{"nodeType":"YulAssignment","src":"3606:65:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3621:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"3628:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3617:3:25"},"nodeType":"YulFunctionCall","src":"3617:54:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3606:7:25"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3588:7:25","type":""}],"src":"3551:126:25"},{"body":{"nodeType":"YulBlock","src":"3728:51:25","statements":[{"nodeType":"YulAssignment","src":"3738:35:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3767:5:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3749:17:25"},"nodeType":"YulFunctionCall","src":"3749:24:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3738:7:25"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3710:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3720:7:25","type":""}],"src":"3683:96:25"},{"body":{"nodeType":"YulBlock","src":"3850:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3867:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3890:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3872:17:25"},"nodeType":"YulFunctionCall","src":"3872:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3860:6:25"},"nodeType":"YulFunctionCall","src":"3860:37:25"},"nodeType":"YulExpressionStatement","src":"3860:37:25"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3838:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3845:3:25","type":""}],"src":"3785:118:25"},{"body":{"nodeType":"YulBlock","src":"4007:124:25","statements":[{"nodeType":"YulAssignment","src":"4017:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4029:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4040:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4025:3:25"},"nodeType":"YulFunctionCall","src":"4025:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4017:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4097:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4110:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4121:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4106:3:25"},"nodeType":"YulFunctionCall","src":"4106:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4053:43:25"},"nodeType":"YulFunctionCall","src":"4053:71:25"},"nodeType":"YulExpressionStatement","src":"4053:71:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3979:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3991:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4002:4:25","type":""}],"src":"3909:222:25"},{"body":{"nodeType":"YulBlock","src":"4180:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"4237:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4246:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4249:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4239:6:25"},"nodeType":"YulFunctionCall","src":"4239:12:25"},"nodeType":"YulExpressionStatement","src":"4239:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4203:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4228:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4210:17:25"},"nodeType":"YulFunctionCall","src":"4210:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4200:2:25"},"nodeType":"YulFunctionCall","src":"4200:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4193:6:25"},"nodeType":"YulFunctionCall","src":"4193:43:25"},"nodeType":"YulIf","src":"4190:63:25"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4173:5:25","type":""}],"src":"4137:122:25"},{"body":{"nodeType":"YulBlock","src":"4317:87:25","statements":[{"nodeType":"YulAssignment","src":"4327:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4349:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4336:12:25"},"nodeType":"YulFunctionCall","src":"4336:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4327:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4392:5:25"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4365:26:25"},"nodeType":"YulFunctionCall","src":"4365:33:25"},"nodeType":"YulExpressionStatement","src":"4365:33:25"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4295:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"4303:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4311:5:25","type":""}],"src":"4265:139:25"},{"body":{"nodeType":"YulBlock","src":"4493:391:25","statements":[{"body":{"nodeType":"YulBlock","src":"4539:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4541:77:25"},"nodeType":"YulFunctionCall","src":"4541:79:25"},"nodeType":"YulExpressionStatement","src":"4541:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4514:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"4523:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4510:3:25"},"nodeType":"YulFunctionCall","src":"4510:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"4535:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4506:3:25"},"nodeType":"YulFunctionCall","src":"4506:32:25"},"nodeType":"YulIf","src":"4503:119:25"},{"nodeType":"YulBlock","src":"4632:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4647:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4661:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4651:6:25","type":""}]},{"nodeType":"YulAssignment","src":"4676:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4711:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"4722:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4707:3:25"},"nodeType":"YulFunctionCall","src":"4707:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4731:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4686:20:25"},"nodeType":"YulFunctionCall","src":"4686:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4676:6:25"}]}]},{"nodeType":"YulBlock","src":"4759:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4774:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4788:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4778:6:25","type":""}]},{"nodeType":"YulAssignment","src":"4804:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4839:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"4850:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4835:3:25"},"nodeType":"YulFunctionCall","src":"4835:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4859:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4814:20:25"},"nodeType":"YulFunctionCall","src":"4814:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4804:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4455:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4466:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4478:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4486:6:25","type":""}],"src":"4410:474:25"},{"body":{"nodeType":"YulBlock","src":"4990:519:25","statements":[{"body":{"nodeType":"YulBlock","src":"5036:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5038:77:25"},"nodeType":"YulFunctionCall","src":"5038:79:25"},"nodeType":"YulExpressionStatement","src":"5038:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5011:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"5020:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5007:3:25"},"nodeType":"YulFunctionCall","src":"5007:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"5032:2:25","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5003:3:25"},"nodeType":"YulFunctionCall","src":"5003:32:25"},"nodeType":"YulIf","src":"5000:119:25"},{"nodeType":"YulBlock","src":"5129:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5144:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5158:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5148:6:25","type":""}]},{"nodeType":"YulAssignment","src":"5173:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5208:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"5219:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5204:3:25"},"nodeType":"YulFunctionCall","src":"5204:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5228:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5183:20:25"},"nodeType":"YulFunctionCall","src":"5183:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5173:6:25"}]}]},{"nodeType":"YulBlock","src":"5256:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5271:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5285:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5275:6:25","type":""}]},{"nodeType":"YulAssignment","src":"5301:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5336:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"5347:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5332:3:25"},"nodeType":"YulFunctionCall","src":"5332:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5356:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5311:20:25"},"nodeType":"YulFunctionCall","src":"5311:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5301:6:25"}]}]},{"nodeType":"YulBlock","src":"5384:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5399:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5413:2:25","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5403:6:25","type":""}]},{"nodeType":"YulAssignment","src":"5429:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5464:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"5475:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5460:3:25"},"nodeType":"YulFunctionCall","src":"5460:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5484:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5439:20:25"},"nodeType":"YulFunctionCall","src":"5439:53:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5429:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4944:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4955:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4967:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4975:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4983:6:25","type":""}],"src":"4890:619:25"},{"body":{"nodeType":"YulBlock","src":"5581:263:25","statements":[{"body":{"nodeType":"YulBlock","src":"5627:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5629:77:25"},"nodeType":"YulFunctionCall","src":"5629:79:25"},"nodeType":"YulExpressionStatement","src":"5629:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5602:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"5611:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5598:3:25"},"nodeType":"YulFunctionCall","src":"5598:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"5623:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5594:3:25"},"nodeType":"YulFunctionCall","src":"5594:32:25"},"nodeType":"YulIf","src":"5591:119:25"},{"nodeType":"YulBlock","src":"5720:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5735:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5749:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5739:6:25","type":""}]},{"nodeType":"YulAssignment","src":"5764:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5799:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"5810:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5795:3:25"},"nodeType":"YulFunctionCall","src":"5795:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5819:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5774:20:25"},"nodeType":"YulFunctionCall","src":"5774:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5764:6:25"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5551:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5562:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5574:6:25","type":""}],"src":"5515:329:25"},{"body":{"nodeType":"YulBlock","src":"5915:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5932:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5955:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5937:17:25"},"nodeType":"YulFunctionCall","src":"5937:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5925:6:25"},"nodeType":"YulFunctionCall","src":"5925:37:25"},"nodeType":"YulExpressionStatement","src":"5925:37:25"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5903:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5910:3:25","type":""}],"src":"5850:118:25"},{"body":{"nodeType":"YulBlock","src":"6072:124:25","statements":[{"nodeType":"YulAssignment","src":"6082:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6094:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6105:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6090:3:25"},"nodeType":"YulFunctionCall","src":"6090:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6082:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6162:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6175:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6186:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6171:3:25"},"nodeType":"YulFunctionCall","src":"6171:17:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6118:43:25"},"nodeType":"YulFunctionCall","src":"6118:71:25"},"nodeType":"YulExpressionStatement","src":"6118:71:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6044:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6056:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6067:4:25","type":""}],"src":"5974:222:25"},{"body":{"nodeType":"YulBlock","src":"6242:76:25","statements":[{"body":{"nodeType":"YulBlock","src":"6296:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6305:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6308:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6298:6:25"},"nodeType":"YulFunctionCall","src":"6298:12:25"},"nodeType":"YulExpressionStatement","src":"6298:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6265:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6287:5:25"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6272:14:25"},"nodeType":"YulFunctionCall","src":"6272:21:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6262:2:25"},"nodeType":"YulFunctionCall","src":"6262:32:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6255:6:25"},"nodeType":"YulFunctionCall","src":"6255:40:25"},"nodeType":"YulIf","src":"6252:60:25"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6235:5:25","type":""}],"src":"6202:116:25"},{"body":{"nodeType":"YulBlock","src":"6373:84:25","statements":[{"nodeType":"YulAssignment","src":"6383:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6405:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6392:12:25"},"nodeType":"YulFunctionCall","src":"6392:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6383:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6445:5:25"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"6421:23:25"},"nodeType":"YulFunctionCall","src":"6421:30:25"},"nodeType":"YulExpressionStatement","src":"6421:30:25"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6351:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"6359:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6367:5:25","type":""}],"src":"6324:133:25"},{"body":{"nodeType":"YulBlock","src":"6543:388:25","statements":[{"body":{"nodeType":"YulBlock","src":"6589:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6591:77:25"},"nodeType":"YulFunctionCall","src":"6591:79:25"},"nodeType":"YulExpressionStatement","src":"6591:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6564:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"6573:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6560:3:25"},"nodeType":"YulFunctionCall","src":"6560:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"6585:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6556:3:25"},"nodeType":"YulFunctionCall","src":"6556:32:25"},"nodeType":"YulIf","src":"6553:119:25"},{"nodeType":"YulBlock","src":"6682:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6697:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"6711:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6701:6:25","type":""}]},{"nodeType":"YulAssignment","src":"6726:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6761:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"6772:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6757:3:25"},"nodeType":"YulFunctionCall","src":"6757:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6781:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6736:20:25"},"nodeType":"YulFunctionCall","src":"6736:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6726:6:25"}]}]},{"nodeType":"YulBlock","src":"6809:115:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6824:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"6838:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6828:6:25","type":""}]},{"nodeType":"YulAssignment","src":"6854:60:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6886:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"6897:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6882:3:25"},"nodeType":"YulFunctionCall","src":"6882:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6906:7:25"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"6864:17:25"},"nodeType":"YulFunctionCall","src":"6864:50:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6854:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6505:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6516:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6528:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6536:6:25","type":""}],"src":"6463:468:25"},{"body":{"nodeType":"YulBlock","src":"7026:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7043:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7046:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7036:6:25"},"nodeType":"YulFunctionCall","src":"7036:12:25"},"nodeType":"YulExpressionStatement","src":"7036:12:25"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6937:117:25"},{"body":{"nodeType":"YulBlock","src":"7149:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7166:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7169:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7159:6:25"},"nodeType":"YulFunctionCall","src":"7159:12:25"},"nodeType":"YulExpressionStatement","src":"7159:12:25"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7060:117:25"},{"body":{"nodeType":"YulBlock","src":"7211:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7228:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7231:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7221:6:25"},"nodeType":"YulFunctionCall","src":"7221:88:25"},"nodeType":"YulExpressionStatement","src":"7221:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7325:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7328:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7318:6:25"},"nodeType":"YulFunctionCall","src":"7318:15:25"},"nodeType":"YulExpressionStatement","src":"7318:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7349:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7352:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7342:6:25"},"nodeType":"YulFunctionCall","src":"7342:15:25"},"nodeType":"YulExpressionStatement","src":"7342:15:25"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7183:180:25"},{"body":{"nodeType":"YulBlock","src":"7412:238:25","statements":[{"nodeType":"YulVariableDeclaration","src":"7422:58:25","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7444:6:25"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7474:4:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7452:21:25"},"nodeType":"YulFunctionCall","src":"7452:27:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7440:3:25"},"nodeType":"YulFunctionCall","src":"7440:40:25"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7426:10:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"7591:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7593:16:25"},"nodeType":"YulFunctionCall","src":"7593:18:25"},"nodeType":"YulExpressionStatement","src":"7593:18:25"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7534:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"7546:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7531:2:25"},"nodeType":"YulFunctionCall","src":"7531:34:25"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7570:10:25"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7582:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7567:2:25"},"nodeType":"YulFunctionCall","src":"7567:22:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7528:2:25"},"nodeType":"YulFunctionCall","src":"7528:62:25"},"nodeType":"YulIf","src":"7525:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7629:2:25","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7633:10:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7622:6:25"},"nodeType":"YulFunctionCall","src":"7622:22:25"},"nodeType":"YulExpressionStatement","src":"7622:22:25"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7398:6:25","type":""},{"name":"size","nodeType":"YulTypedName","src":"7406:4:25","type":""}],"src":"7369:281:25"},{"body":{"nodeType":"YulBlock","src":"7697:88:25","statements":[{"nodeType":"YulAssignment","src":"7707:30:25","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7717:18:25"},"nodeType":"YulFunctionCall","src":"7717:20:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7707:6:25"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7766:6:25"},{"name":"size","nodeType":"YulIdentifier","src":"7774:4:25"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7746:19:25"},"nodeType":"YulFunctionCall","src":"7746:33:25"},"nodeType":"YulExpressionStatement","src":"7746:33:25"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"7681:4:25","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7690:6:25","type":""}],"src":"7656:129:25"},{"body":{"nodeType":"YulBlock","src":"7857:241:25","statements":[{"body":{"nodeType":"YulBlock","src":"7962:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7964:16:25"},"nodeType":"YulFunctionCall","src":"7964:18:25"},"nodeType":"YulExpressionStatement","src":"7964:18:25"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7934:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"7942:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7931:2:25"},"nodeType":"YulFunctionCall","src":"7931:30:25"},"nodeType":"YulIf","src":"7928:56:25"},{"nodeType":"YulAssignment","src":"7994:37:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8024:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8002:21:25"},"nodeType":"YulFunctionCall","src":"8002:29:25"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7994:4:25"}]},{"nodeType":"YulAssignment","src":"8068:23:25","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8080:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"8086:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8076:3:25"},"nodeType":"YulFunctionCall","src":"8076:15:25"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8068:4:25"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7841:6:25","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7852:4:25","type":""}],"src":"7791:307:25"},{"body":{"nodeType":"YulBlock","src":"8168:82:25","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8191:3:25"},{"name":"src","nodeType":"YulIdentifier","src":"8196:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"8201:6:25"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8178:12:25"},"nodeType":"YulFunctionCall","src":"8178:30:25"},"nodeType":"YulExpressionStatement","src":"8178:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8228:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"8233:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8224:3:25"},"nodeType":"YulFunctionCall","src":"8224:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"8242:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8217:6:25"},"nodeType":"YulFunctionCall","src":"8217:27:25"},"nodeType":"YulExpressionStatement","src":"8217:27:25"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8150:3:25","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8155:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"8160:6:25","type":""}],"src":"8104:146:25"},{"body":{"nodeType":"YulBlock","src":"8339:340:25","statements":[{"nodeType":"YulAssignment","src":"8349:74:25","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8415:6:25"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8374:40:25"},"nodeType":"YulFunctionCall","src":"8374:48:25"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8358:15:25"},"nodeType":"YulFunctionCall","src":"8358:65:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8349:5:25"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8439:5:25"},{"name":"length","nodeType":"YulIdentifier","src":"8446:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8432:6:25"},"nodeType":"YulFunctionCall","src":"8432:21:25"},"nodeType":"YulExpressionStatement","src":"8432:21:25"},{"nodeType":"YulVariableDeclaration","src":"8462:27:25","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8477:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"8484:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8473:3:25"},"nodeType":"YulFunctionCall","src":"8473:16:25"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8466:3:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"8527:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8529:77:25"},"nodeType":"YulFunctionCall","src":"8529:79:25"},"nodeType":"YulExpressionStatement","src":"8529:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8508:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"8513:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8504:3:25"},"nodeType":"YulFunctionCall","src":"8504:16:25"},{"name":"end","nodeType":"YulIdentifier","src":"8522:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8501:2:25"},"nodeType":"YulFunctionCall","src":"8501:25:25"},"nodeType":"YulIf","src":"8498:112:25"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8656:3:25"},{"name":"dst","nodeType":"YulIdentifier","src":"8661:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"8666:6:25"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8619:36:25"},"nodeType":"YulFunctionCall","src":"8619:54:25"},"nodeType":"YulExpressionStatement","src":"8619:54:25"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8312:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"8317:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"8325:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8333:5:25","type":""}],"src":"8256:423:25"},{"body":{"nodeType":"YulBlock","src":"8759:277:25","statements":[{"body":{"nodeType":"YulBlock","src":"8808:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8810:77:25"},"nodeType":"YulFunctionCall","src":"8810:79:25"},"nodeType":"YulExpressionStatement","src":"8810:79:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8787:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"8795:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8783:3:25"},"nodeType":"YulFunctionCall","src":"8783:17:25"},{"name":"end","nodeType":"YulIdentifier","src":"8802:3:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8779:3:25"},"nodeType":"YulFunctionCall","src":"8779:27:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8772:6:25"},"nodeType":"YulFunctionCall","src":"8772:35:25"},"nodeType":"YulIf","src":"8769:122:25"},{"nodeType":"YulVariableDeclaration","src":"8900:34:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8927:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8914:12:25"},"nodeType":"YulFunctionCall","src":"8914:20:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8904:6:25","type":""}]},{"nodeType":"YulAssignment","src":"8943:87:25","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9003:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"9011:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8999:3:25"},"nodeType":"YulFunctionCall","src":"8999:17:25"},{"name":"length","nodeType":"YulIdentifier","src":"9018:6:25"},{"name":"end","nodeType":"YulIdentifier","src":"9026:3:25"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8952:46:25"},"nodeType":"YulFunctionCall","src":"8952:78:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8943:5:25"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8737:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"8745:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8753:5:25","type":""}],"src":"8698:338:25"},{"body":{"nodeType":"YulBlock","src":"9168:817:25","statements":[{"body":{"nodeType":"YulBlock","src":"9215:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9217:77:25"},"nodeType":"YulFunctionCall","src":"9217:79:25"},"nodeType":"YulExpressionStatement","src":"9217:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9189:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"9198:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9185:3:25"},"nodeType":"YulFunctionCall","src":"9185:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"9210:3:25","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9181:3:25"},"nodeType":"YulFunctionCall","src":"9181:33:25"},"nodeType":"YulIf","src":"9178:120:25"},{"nodeType":"YulBlock","src":"9308:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"9323:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"9337:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9327:6:25","type":""}]},{"nodeType":"YulAssignment","src":"9352:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9387:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"9398:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9383:3:25"},"nodeType":"YulFunctionCall","src":"9383:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9407:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9362:20:25"},"nodeType":"YulFunctionCall","src":"9362:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9352:6:25"}]}]},{"nodeType":"YulBlock","src":"9435:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"9450:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"9464:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9454:6:25","type":""}]},{"nodeType":"YulAssignment","src":"9480:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9515:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"9526:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9511:3:25"},"nodeType":"YulFunctionCall","src":"9511:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9535:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9490:20:25"},"nodeType":"YulFunctionCall","src":"9490:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9480:6:25"}]}]},{"nodeType":"YulBlock","src":"9563:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"9578:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"9592:2:25","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9582:6:25","type":""}]},{"nodeType":"YulAssignment","src":"9608:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9643:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"9654:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9639:3:25"},"nodeType":"YulFunctionCall","src":"9639:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9663:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9618:20:25"},"nodeType":"YulFunctionCall","src":"9618:53:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9608:6:25"}]}]},{"nodeType":"YulBlock","src":"9691:287:25","statements":[{"nodeType":"YulVariableDeclaration","src":"9706:46:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9737:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9748:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9733:3:25"},"nodeType":"YulFunctionCall","src":"9733:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9720:12:25"},"nodeType":"YulFunctionCall","src":"9720:32:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9710:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"9799:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9801:77:25"},"nodeType":"YulFunctionCall","src":"9801:79:25"},"nodeType":"YulExpressionStatement","src":"9801:79:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9771:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"9779:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9768:2:25"},"nodeType":"YulFunctionCall","src":"9768:30:25"},"nodeType":"YulIf","src":"9765:117:25"},{"nodeType":"YulAssignment","src":"9896:72:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9940:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"9951:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9936:3:25"},"nodeType":"YulFunctionCall","src":"9936:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9960:7:25"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9906:29:25"},"nodeType":"YulFunctionCall","src":"9906:62:25"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9896:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9114:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9125:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9137:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9145:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9153:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9161:6:25","type":""}],"src":"9042:943:25"},{"body":{"nodeType":"YulBlock","src":"10074:391:25","statements":[{"body":{"nodeType":"YulBlock","src":"10120:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10122:77:25"},"nodeType":"YulFunctionCall","src":"10122:79:25"},"nodeType":"YulExpressionStatement","src":"10122:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10095:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"10104:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10091:3:25"},"nodeType":"YulFunctionCall","src":"10091:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"10116:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10087:3:25"},"nodeType":"YulFunctionCall","src":"10087:32:25"},"nodeType":"YulIf","src":"10084:119:25"},{"nodeType":"YulBlock","src":"10213:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"10228:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"10242:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10232:6:25","type":""}]},{"nodeType":"YulAssignment","src":"10257:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10292:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"10303:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10288:3:25"},"nodeType":"YulFunctionCall","src":"10288:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10312:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10267:20:25"},"nodeType":"YulFunctionCall","src":"10267:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10257:6:25"}]}]},{"nodeType":"YulBlock","src":"10340:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"10355:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"10369:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10359:6:25","type":""}]},{"nodeType":"YulAssignment","src":"10385:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10420:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"10431:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10416:3:25"},"nodeType":"YulFunctionCall","src":"10416:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10440:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10395:20:25"},"nodeType":"YulFunctionCall","src":"10395:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10385:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10036:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10047:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10059:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10067:6:25","type":""}],"src":"9991:474:25"},{"body":{"nodeType":"YulBlock","src":"10499:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10516:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10519:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10509:6:25"},"nodeType":"YulFunctionCall","src":"10509:88:25"},"nodeType":"YulExpressionStatement","src":"10509:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10613:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10616:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10606:6:25"},"nodeType":"YulFunctionCall","src":"10606:15:25"},"nodeType":"YulExpressionStatement","src":"10606:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10637:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10640:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10630:6:25"},"nodeType":"YulFunctionCall","src":"10630:15:25"},"nodeType":"YulExpressionStatement","src":"10630:15:25"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"10471:180:25"},{"body":{"nodeType":"YulBlock","src":"10708:269:25","statements":[{"nodeType":"YulAssignment","src":"10718:22:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10732:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"10738:1:25","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10728:3:25"},"nodeType":"YulFunctionCall","src":"10728:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10718:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"10749:38:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10779:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"10785:1:25","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10775:3:25"},"nodeType":"YulFunctionCall","src":"10775:12:25"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"10753:18:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"10826:51:25","statements":[{"nodeType":"YulAssignment","src":"10840:27:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10854:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"10862:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10850:3:25"},"nodeType":"YulFunctionCall","src":"10850:17:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10840:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10806:18:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10799:6:25"},"nodeType":"YulFunctionCall","src":"10799:26:25"},"nodeType":"YulIf","src":"10796:81:25"},{"body":{"nodeType":"YulBlock","src":"10929:42:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"10943:16:25"},"nodeType":"YulFunctionCall","src":"10943:18:25"},"nodeType":"YulExpressionStatement","src":"10943:18:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10893:18:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10916:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"10924:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10913:2:25"},"nodeType":"YulFunctionCall","src":"10913:14:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10890:2:25"},"nodeType":"YulFunctionCall","src":"10890:38:25"},"nodeType":"YulIf","src":"10887:84:25"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10692:4:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10701:6:25","type":""}],"src":"10657:320:25"},{"body":{"nodeType":"YulBlock","src":"11089:124:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11111:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"11119:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11107:3:25"},"nodeType":"YulFunctionCall","src":"11107:14:25"},{"hexValue":"536f756c426f756e64546f6b656e3a20546f6b656e7320617265206e6f6e2d74","kind":"string","nodeType":"YulLiteral","src":"11123:34:25","type":"","value":"SoulBoundToken: Tokens are non-t"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11100:6:25"},"nodeType":"YulFunctionCall","src":"11100:58:25"},"nodeType":"YulExpressionStatement","src":"11100:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11179:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"11187:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11175:3:25"},"nodeType":"YulFunctionCall","src":"11175:15:25"},{"hexValue":"72616e7366657261626c65","kind":"string","nodeType":"YulLiteral","src":"11192:13:25","type":"","value":"ransferable"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11168:6:25"},"nodeType":"YulFunctionCall","src":"11168:38:25"},"nodeType":"YulExpressionStatement","src":"11168:38:25"}]},"name":"store_literal_in_memory_2597068d33a295edc85a1ae1f52030e1853f79ea98290f0d7046806186b0c635","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11081:6:25","type":""}],"src":"10983:230:25"},{"body":{"nodeType":"YulBlock","src":"11365:220:25","statements":[{"nodeType":"YulAssignment","src":"11375:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11441:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"11446:2:25","type":"","value":"43"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11382:58:25"},"nodeType":"YulFunctionCall","src":"11382:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11375:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11547:3:25"}],"functionName":{"name":"store_literal_in_memory_2597068d33a295edc85a1ae1f52030e1853f79ea98290f0d7046806186b0c635","nodeType":"YulIdentifier","src":"11458:88:25"},"nodeType":"YulFunctionCall","src":"11458:93:25"},"nodeType":"YulExpressionStatement","src":"11458:93:25"},{"nodeType":"YulAssignment","src":"11560:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11571:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"11576:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11567:3:25"},"nodeType":"YulFunctionCall","src":"11567:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11560:3:25"}]}]},"name":"abi_encode_t_stringliteral_2597068d33a295edc85a1ae1f52030e1853f79ea98290f0d7046806186b0c635_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11353:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11361:3:25","type":""}],"src":"11219:366:25"},{"body":{"nodeType":"YulBlock","src":"11762:248:25","statements":[{"nodeType":"YulAssignment","src":"11772:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11784:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11795:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11780:3:25"},"nodeType":"YulFunctionCall","src":"11780:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11772:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11819:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11830:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11815:3:25"},"nodeType":"YulFunctionCall","src":"11815:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11838:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"11844:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11834:3:25"},"nodeType":"YulFunctionCall","src":"11834:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11808:6:25"},"nodeType":"YulFunctionCall","src":"11808:47:25"},"nodeType":"YulExpressionStatement","src":"11808:47:25"},{"nodeType":"YulAssignment","src":"11864:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11998:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_2597068d33a295edc85a1ae1f52030e1853f79ea98290f0d7046806186b0c635_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11872:124:25"},"nodeType":"YulFunctionCall","src":"11872:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11864:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_2597068d33a295edc85a1ae1f52030e1853f79ea98290f0d7046806186b0c635__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11742:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11757:4:25","type":""}],"src":"11591:419:25"},{"body":{"nodeType":"YulBlock","src":"12122:114:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12144:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"12152:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12140:3:25"},"nodeType":"YulFunctionCall","src":"12140:14:25"},{"hexValue":"416464726573732068617320616c7265616479206d696e74656420616e205342","kind":"string","nodeType":"YulLiteral","src":"12156:34:25","type":"","value":"Address has already minted an SB"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12133:6:25"},"nodeType":"YulFunctionCall","src":"12133:58:25"},"nodeType":"YulExpressionStatement","src":"12133:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12212:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"12220:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12208:3:25"},"nodeType":"YulFunctionCall","src":"12208:15:25"},{"hexValue":"54","kind":"string","nodeType":"YulLiteral","src":"12225:3:25","type":"","value":"T"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12201:6:25"},"nodeType":"YulFunctionCall","src":"12201:28:25"},"nodeType":"YulExpressionStatement","src":"12201:28:25"}]},"name":"store_literal_in_memory_e3b737c0f4e11dbbe996f8c49d6412d2a2d006b0d7072d02a885755268728a3c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12114:6:25","type":""}],"src":"12016:220:25"},{"body":{"nodeType":"YulBlock","src":"12388:220:25","statements":[{"nodeType":"YulAssignment","src":"12398:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12464:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"12469:2:25","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12405:58:25"},"nodeType":"YulFunctionCall","src":"12405:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12398:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12570:3:25"}],"functionName":{"name":"store_literal_in_memory_e3b737c0f4e11dbbe996f8c49d6412d2a2d006b0d7072d02a885755268728a3c","nodeType":"YulIdentifier","src":"12481:88:25"},"nodeType":"YulFunctionCall","src":"12481:93:25"},"nodeType":"YulExpressionStatement","src":"12481:93:25"},{"nodeType":"YulAssignment","src":"12583:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12594:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"12599:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12590:3:25"},"nodeType":"YulFunctionCall","src":"12590:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12583:3:25"}]}]},"name":"abi_encode_t_stringliteral_e3b737c0f4e11dbbe996f8c49d6412d2a2d006b0d7072d02a885755268728a3c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12376:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12384:3:25","type":""}],"src":"12242:366:25"},{"body":{"nodeType":"YulBlock","src":"12785:248:25","statements":[{"nodeType":"YulAssignment","src":"12795:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12807:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12818:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12803:3:25"},"nodeType":"YulFunctionCall","src":"12803:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12795:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12842:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12853:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12838:3:25"},"nodeType":"YulFunctionCall","src":"12838:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12861:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"12867:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12857:3:25"},"nodeType":"YulFunctionCall","src":"12857:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12831:6:25"},"nodeType":"YulFunctionCall","src":"12831:47:25"},"nodeType":"YulExpressionStatement","src":"12831:47:25"},{"nodeType":"YulAssignment","src":"12887:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13021:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_e3b737c0f4e11dbbe996f8c49d6412d2a2d006b0d7072d02a885755268728a3c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12895:124:25"},"nodeType":"YulFunctionCall","src":"12895:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12887:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_e3b737c0f4e11dbbe996f8c49d6412d2a2d006b0d7072d02a885755268728a3c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12765:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12780:4:25","type":""}],"src":"12614:419:25"},{"body":{"nodeType":"YulBlock","src":"13067:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13084:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13087:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13077:6:25"},"nodeType":"YulFunctionCall","src":"13077:88:25"},"nodeType":"YulExpressionStatement","src":"13077:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13181:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13184:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13174:6:25"},"nodeType":"YulFunctionCall","src":"13174:15:25"},"nodeType":"YulExpressionStatement","src":"13174:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13205:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13208:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13198:6:25"},"nodeType":"YulFunctionCall","src":"13198:15:25"},"nodeType":"YulExpressionStatement","src":"13198:15:25"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"13039:180:25"},{"body":{"nodeType":"YulBlock","src":"13269:147:25","statements":[{"nodeType":"YulAssignment","src":"13279:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13302:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13284:17:25"},"nodeType":"YulFunctionCall","src":"13284:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"13279:1:25"}]},{"nodeType":"YulAssignment","src":"13313:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"13336:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13318:17:25"},"nodeType":"YulFunctionCall","src":"13318:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"13313:1:25"}]},{"nodeType":"YulAssignment","src":"13347:16:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13358:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"13361:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13354:3:25"},"nodeType":"YulFunctionCall","src":"13354:9:25"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"13347:3:25"}]},{"body":{"nodeType":"YulBlock","src":"13387:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"13389:16:25"},"nodeType":"YulFunctionCall","src":"13389:18:25"},"nodeType":"YulExpressionStatement","src":"13389:18:25"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13379:1:25"},{"name":"sum","nodeType":"YulIdentifier","src":"13382:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13376:2:25"},"nodeType":"YulFunctionCall","src":"13376:10:25"},"nodeType":"YulIf","src":"13373:36:25"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13256:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"13259:1:25","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"13265:3:25","type":""}],"src":"13225:191:25"},{"body":{"nodeType":"YulBlock","src":"13536:34:25","statements":[{"nodeType":"YulAssignment","src":"13546:18:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"13561:3:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13546:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13508:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"13513:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13524:11:25","type":""}],"src":"13422:148:25"},{"body":{"nodeType":"YulBlock","src":"13686:280:25","statements":[{"nodeType":"YulVariableDeclaration","src":"13696:53:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13743:5:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"13710:32:25"},"nodeType":"YulFunctionCall","src":"13710:39:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13700:6:25","type":""}]},{"nodeType":"YulAssignment","src":"13758:96:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13842:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"13847:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"13765:76:25"},"nodeType":"YulFunctionCall","src":"13765:89:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13758:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13902:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"13909:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13898:3:25"},"nodeType":"YulFunctionCall","src":"13898:16:25"},{"name":"pos","nodeType":"YulIdentifier","src":"13916:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"13921:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"13863:34:25"},"nodeType":"YulFunctionCall","src":"13863:65:25"},"nodeType":"YulExpressionStatement","src":"13863:65:25"},{"nodeType":"YulAssignment","src":"13937:23:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13948:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"13953:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13944:3:25"},"nodeType":"YulFunctionCall","src":"13944:16:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13937:3:25"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13667:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13674:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13682:3:25","type":""}],"src":"13576:390:25"},{"body":{"nodeType":"YulBlock","src":"14156:251:25","statements":[{"nodeType":"YulAssignment","src":"14167:102:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14256:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"14265:3:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"14174:81:25"},"nodeType":"YulFunctionCall","src":"14174:95:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14167:3:25"}]},{"nodeType":"YulAssignment","src":"14279:102:25","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14368:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"14377:3:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"14286:81:25"},"nodeType":"YulFunctionCall","src":"14286:95:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14279:3:25"}]},{"nodeType":"YulAssignment","src":"14391:10:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"14398:3:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14391:3:25"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14127:3:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14133:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14141:6:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14152:3:25","type":""}],"src":"13972:435:25"},{"body":{"nodeType":"YulBlock","src":"14441:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14458:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14461:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14451:6:25"},"nodeType":"YulFunctionCall","src":"14451:88:25"},"nodeType":"YulExpressionStatement","src":"14451:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14555:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14558:4:25","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14548:6:25"},"nodeType":"YulFunctionCall","src":"14548:15:25"},"nodeType":"YulExpressionStatement","src":"14548:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14579:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14582:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14572:6:25"},"nodeType":"YulFunctionCall","src":"14572:15:25"},"nodeType":"YulExpressionStatement","src":"14572:15:25"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"14413:180:25"},{"body":{"nodeType":"YulBlock","src":"14725:206:25","statements":[{"nodeType":"YulAssignment","src":"14735:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14747:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14758:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14743:3:25"},"nodeType":"YulFunctionCall","src":"14743:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14735:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14815:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14828:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14839:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14824:3:25"},"nodeType":"YulFunctionCall","src":"14824:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14771:43:25"},"nodeType":"YulFunctionCall","src":"14771:71:25"},"nodeType":"YulExpressionStatement","src":"14771:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14896:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14909:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14920:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14905:3:25"},"nodeType":"YulFunctionCall","src":"14905:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14852:43:25"},"nodeType":"YulFunctionCall","src":"14852:72:25"},"nodeType":"YulExpressionStatement","src":"14852:72:25"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14689:9:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14701:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14709:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14720:4:25","type":""}],"src":"14599:332:25"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_2597068d33a295edc85a1ae1f52030e1853f79ea98290f0d7046806186b0c635(memPtr) {\n\n        mstore(add(memPtr, 0), \"SoulBoundToken: Tokens are non-t\")\n\n        mstore(add(memPtr, 32), \"ransferable\")\n\n    }\n\n    function abi_encode_t_stringliteral_2597068d33a295edc85a1ae1f52030e1853f79ea98290f0d7046806186b0c635_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_2597068d33a295edc85a1ae1f52030e1853f79ea98290f0d7046806186b0c635(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2597068d33a295edc85a1ae1f52030e1853f79ea98290f0d7046806186b0c635__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2597068d33a295edc85a1ae1f52030e1853f79ea98290f0d7046806186b0c635_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e3b737c0f4e11dbbe996f8c49d6412d2a2d006b0d7072d02a885755268728a3c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address has already minted an SB\")\n\n        mstore(add(memPtr, 32), \"T\")\n\n    }\n\n    function abi_encode_t_stringliteral_e3b737c0f4e11dbbe996f8c49d6412d2a2d006b0d7072d02a885755268728a3c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_e3b737c0f4e11dbbe996f8c49d6412d2a2d006b0d7072d02a885755268728a3c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e3b737c0f4e11dbbe996f8c49d6412d2a2d006b0d7072d02a885755268728a3c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e3b737c0f4e11dbbe996f8c49d6412d2a2d006b0d7072d02a885755268728a3c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063a22cb46511610071578063a22cb465146102df578063b88d4fde146102fb578063c87b56dd14610317578063e985e9c514610347578063f2fde38b1461037757610116565b806370a0823114610269578063715018a6146102995780638da5cb5b146102a357806395d89b41146102c157610116565b806323b872dd116100e957806323b872dd146101b557806342842e0e146101d157806356a9c454146101ed5780636352211e1461021d5780636a6278421461024d57610116565b806301ffc9a71461011b57806306fdde031461014b578063081812fc14610169578063095ea7b314610199575b600080fd5b610135600480360381019061013091906117b3565b610393565b60405161014291906117fb565b60405180910390f35b610153610475565b60405161016091906118a6565b60405180910390f35b610183600480360381019061017e91906118fe565b610507565b604051610190919061196c565b60405180910390f35b6101b360048036038101906101ae91906119b3565b610523565b005b6101cf60048036038101906101ca91906119f3565b610539565b005b6101eb60048036038101906101e691906119f3565b610574565b005b61020760048036038101906102029190611a46565b610594565b60405161021491906117fb565b60405180910390f35b610237600480360381019061023291906118fe565b6105ea565b604051610244919061196c565b60405180910390f35b61026760048036038101906102629190611a46565b6105fc565b005b610283600480360381019061027e9190611a46565b610712565b6040516102909190611a82565b60405180910390f35b6102a16107cc565b005b6102ab6107e0565b6040516102b8919061196c565b60405180910390f35b6102c961080a565b6040516102d691906118a6565b60405180910390f35b6102f960048036038101906102f49190611ac9565b61089c565b005b61031560048036038101906103109190611c3e565b6108b2565b005b610331600480360381019061032c91906118fe565b6108ed565b60405161033e91906118a6565b60405180910390f35b610361600480360381019061035c9190611cc1565b610956565b60405161036e91906117fb565b60405180910390f35b610391600480360381019061038c9190611a46565b6109ea565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061045e57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061046e575061046d82610a70565b5b9050919050565b60606000805461048490611d30565b80601f01602080910402602001604051908101604052809291908181526020018280546104b090611d30565b80156104fd5780601f106104d2576101008083540402835291602001916104fd565b820191906000526020600020905b8154815290600101906020018083116104e057829003601f168201915b5050505050905090565b600061051282610ada565b5061051c82610b62565b9050919050565b6105358282610530610b9f565b610ba7565b5050565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056b90611dd3565b60405180910390fd5b61058f838383604051806020016040528060008152506108b2565b505050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60006105f582610ada565b9050919050565b610604610bb9565b600860008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610691576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068890611e65565b60405180910390fd5b6001600760008282546106a49190611eb4565b925050819055506106b781600754610c40565b6001600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107855760006040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161077c919061196c565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6107d4610bb9565b6107de6000610d39565b565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461081990611d30565b80601f016020809104026020016040519081016040528092919081815260200182805461084590611d30565b80156108925780601f1061086757610100808354040283529160200191610892565b820191906000526020600020905b81548152906001019060200180831161087557829003601f168201915b5050505050905090565b6108ae6108a7610b9f565b8383610dff565b5050565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e490611dd3565b60405180910390fd5b60606108f882610ada565b506000610903610f6e565b90506000815111610923576040518060200160405280600081525061094e565b8061092d84610f85565b60405160200161093e929190611f24565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6109f2610bb9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a645760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a5b919061196c565b60405180910390fd5b610a6d81610d39565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600080610ae683611053565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b5957826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610b509190611a82565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610bb48383836001611090565b505050565b610bc1610b9f565b73ffffffffffffffffffffffffffffffffffffffff16610bdf6107e0565b73ffffffffffffffffffffffffffffffffffffffff1614610c3e57610c02610b9f565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c35919061196c565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cb25760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610ca9919061196c565b60405180910390fd5b6000610cc083836000611255565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610d345760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401610d2b919061196c565b60405180910390fd5b505050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e7057816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610e67919061196c565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f6191906117fb565b60405180910390a3505050565b606060405180602001604052806000815250905090565b606060006001610f948461146f565b01905060008167ffffffffffffffff811115610fb357610fb2611b13565b5b6040519080825280601f01601f191660200182016040528015610fe55781602001600182028036833780820191505090505b509050600082602001820190505b600115611048578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161103c5761103b611f48565b5b04945060008503610ff3575b819350505050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806110c95750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156111fd5760006110d984610ada565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561114457508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561115757506111558184610956565b155b1561119957826040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401611190919061196c565b60405180910390fd5b81156111fb57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b60008061126184611053565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146112a3576112a28184866115c2565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611334576112e5600085600080611090565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146113b7576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106114cd577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816114c3576114c2611f48565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061150a576d04ee2d6d415b85acef81000000008381611500576114ff611f48565b5b0492506020810190505b662386f26fc10000831061153957662386f26fc10000838161152f5761152e611f48565b5b0492506010810190505b6305f5e1008310611562576305f5e100838161155857611557611f48565b5b0492506008810190505b612710831061158757612710838161157d5761157c611f48565b5b0492506004810190505b606483106115aa57606483816115a05761159f611f48565b5b0492506002810190505b600a83106115b9576001810190505b80915050919050565b6115cd838383611686565b61168157600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361164257806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016116399190611a82565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611678929190611f77565b60405180910390fd5b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561173e57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806116ff57506116fe8484610956565b5b8061173d57508273ffffffffffffffffffffffffffffffffffffffff1661172583610b62565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6117908161175b565b811461179b57600080fd5b50565b6000813590506117ad81611787565b92915050565b6000602082840312156117c9576117c8611751565b5b60006117d78482850161179e565b91505092915050565b60008115159050919050565b6117f5816117e0565b82525050565b600060208201905061181060008301846117ec565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611850578082015181840152602081019050611835565b60008484015250505050565b6000601f19601f8301169050919050565b600061187882611816565b6118828185611821565b9350611892818560208601611832565b61189b8161185c565b840191505092915050565b600060208201905081810360008301526118c0818461186d565b905092915050565b6000819050919050565b6118db816118c8565b81146118e657600080fd5b50565b6000813590506118f8816118d2565b92915050565b60006020828403121561191457611913611751565b5b6000611922848285016118e9565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119568261192b565b9050919050565b6119668161194b565b82525050565b6000602082019050611981600083018461195d565b92915050565b6119908161194b565b811461199b57600080fd5b50565b6000813590506119ad81611987565b92915050565b600080604083850312156119ca576119c9611751565b5b60006119d88582860161199e565b92505060206119e9858286016118e9565b9150509250929050565b600080600060608486031215611a0c57611a0b611751565b5b6000611a1a8682870161199e565b9350506020611a2b8682870161199e565b9250506040611a3c868287016118e9565b9150509250925092565b600060208284031215611a5c57611a5b611751565b5b6000611a6a8482850161199e565b91505092915050565b611a7c816118c8565b82525050565b6000602082019050611a976000830184611a73565b92915050565b611aa6816117e0565b8114611ab157600080fd5b50565b600081359050611ac381611a9d565b92915050565b60008060408385031215611ae057611adf611751565b5b6000611aee8582860161199e565b9250506020611aff85828601611ab4565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611b4b8261185c565b810181811067ffffffffffffffff82111715611b6a57611b69611b13565b5b80604052505050565b6000611b7d611747565b9050611b898282611b42565b919050565b600067ffffffffffffffff821115611ba957611ba8611b13565b5b611bb28261185c565b9050602081019050919050565b82818337600083830152505050565b6000611be1611bdc84611b8e565b611b73565b905082815260208101848484011115611bfd57611bfc611b0e565b5b611c08848285611bbf565b509392505050565b600082601f830112611c2557611c24611b09565b5b8135611c35848260208601611bce565b91505092915050565b60008060008060808587031215611c5857611c57611751565b5b6000611c668782880161199e565b9450506020611c778782880161199e565b9350506040611c88878288016118e9565b925050606085013567ffffffffffffffff811115611ca957611ca8611756565b5b611cb587828801611c10565b91505092959194509250565b60008060408385031215611cd857611cd7611751565b5b6000611ce68582860161199e565b9250506020611cf78582860161199e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611d4857607f821691505b602082108103611d5b57611d5a611d01565b5b50919050565b7f536f756c426f756e64546f6b656e3a20546f6b656e7320617265206e6f6e2d7460008201527f72616e7366657261626c65000000000000000000000000000000000000000000602082015250565b6000611dbd602b83611821565b9150611dc882611d61565b604082019050919050565b60006020820190508181036000830152611dec81611db0565b9050919050565b7f416464726573732068617320616c7265616479206d696e74656420616e20534260008201527f5400000000000000000000000000000000000000000000000000000000000000602082015250565b6000611e4f602183611821565b9150611e5a82611df3565b604082019050919050565b60006020820190508181036000830152611e7e81611e42565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611ebf826118c8565b9150611eca836118c8565b9250828201905080821115611ee257611ee1611e85565b5b92915050565b600081905092915050565b6000611efe82611816565b611f088185611ee8565b9350611f18818560208601611832565b80840191505092915050565b6000611f308285611ef3565b9150611f3c8284611ef3565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000604082019050611f8c600083018561195d565b611f996020830184611a73565b939250505056fea26469706673582212209dc77044c48b05b3840a2be4db7acf796a347c64b30fb9add2cd1b6e0b61035264736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x377 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2C1 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x56A9C454 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x24D JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x199 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x17B3 JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x475 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x18A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x18FE JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x196C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x19B3 JUMP JUMPDEST PUSH2 0x523 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0x539 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x1A46 JUMP JUMPDEST PUSH2 0x594 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x18FE JUMP JUMPDEST PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x196C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x267 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x1A46 JUMP JUMPDEST PUSH2 0x5FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x283 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x1A46 JUMP JUMPDEST PUSH2 0x712 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x1A82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH2 0x7CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AB PUSH2 0x7E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x196C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C9 PUSH2 0x80A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x18A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x1AC9 JUMP JUMPDEST PUSH2 0x89C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x1C3E JUMP JUMPDEST PUSH2 0x8B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x18FE JUMP JUMPDEST PUSH2 0x8ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x18A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x361 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35C SWAP2 SWAP1 PUSH2 0x1CC1 JUMP JUMPDEST PUSH2 0x956 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x391 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x1A46 JUMP JUMPDEST PUSH2 0x9EA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x45E JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x46E JUMPI POP PUSH2 0x46D DUP3 PUSH2 0xA70 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x484 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4B0 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x512 DUP3 PUSH2 0xADA JUMP JUMPDEST POP PUSH2 0x51C DUP3 PUSH2 0xB62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x535 DUP3 DUP3 PUSH2 0x530 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0xBA7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56B SWAP1 PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x58F DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F5 DUP3 PUSH2 0xADA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x604 PUSH2 0xBB9 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x691 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x688 SWAP1 PUSH2 0x1E65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6A4 SWAP2 SWAP1 PUSH2 0x1EB4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x6B7 DUP2 PUSH1 0x7 SLOAD PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x785 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77C SWAP2 SWAP1 PUSH2 0x196C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7D4 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x7DE PUSH1 0x0 PUSH2 0xD39 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x819 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x845 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x892 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x867 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x892 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x875 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8AE PUSH2 0x8A7 PUSH2 0xB9F JUMP JUMPDEST DUP4 DUP4 PUSH2 0xDFF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E4 SWAP1 PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH2 0x8F8 DUP3 PUSH2 0xADA JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x903 PUSH2 0xF6E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x923 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x94E JUMP JUMPDEST DUP1 PUSH2 0x92D DUP5 PUSH2 0xF85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x93E SWAP3 SWAP2 SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9F2 PUSH2 0xBB9 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA64 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5B SWAP2 SWAP1 PUSH2 0x196C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA6D DUP2 PUSH2 0xD39 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAE6 DUP4 PUSH2 0x1053 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB59 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB50 SWAP2 SWAP1 PUSH2 0x1A82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBB4 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1090 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xBC1 PUSH2 0xB9F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBDF PUSH2 0x7E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC3E JUMPI PUSH2 0xC02 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC35 SWAP2 SWAP1 PUSH2 0x196C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCB2 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA9 SWAP2 SWAP1 PUSH2 0x196C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCC0 DUP4 DUP4 PUSH1 0x0 PUSH2 0x1255 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD34 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2B SWAP2 SWAP1 PUSH2 0x196C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE70 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE67 SWAP2 SWAP1 PUSH2 0x196C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF61 SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0xF94 DUP5 PUSH2 0x146F JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFB3 JUMPI PUSH2 0xFB2 PUSH2 0x1B13 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFE5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1048 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x103C JUMPI PUSH2 0x103B PUSH2 0x1F48 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0xFF3 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x10C9 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x11FD JUMPI PUSH1 0x0 PUSH2 0x10D9 DUP5 PUSH2 0xADA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1144 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1157 JUMPI POP PUSH2 0x1155 DUP2 DUP5 PUSH2 0x956 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1199 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1190 SWAP2 SWAP1 PUSH2 0x196C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x11FB JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1261 DUP5 PUSH2 0x1053 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12A3 JUMPI PUSH2 0x12A2 DUP2 DUP5 DUP7 PUSH2 0x15C2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1334 JUMPI PUSH2 0x12E5 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x1090 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13B7 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x14CD JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x14C3 JUMPI PUSH2 0x14C2 PUSH2 0x1F48 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x150A JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1500 JUMPI PUSH2 0x14FF PUSH2 0x1F48 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1539 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x152F JUMPI PUSH2 0x152E PUSH2 0x1F48 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1562 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1558 JUMPI PUSH2 0x1557 PUSH2 0x1F48 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1587 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x157D JUMPI PUSH2 0x157C PUSH2 0x1F48 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x15AA JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x15A0 JUMPI PUSH2 0x159F PUSH2 0x1F48 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x15B9 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15CD DUP4 DUP4 DUP4 PUSH2 0x1686 JUMP JUMPDEST PUSH2 0x1681 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1642 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1639 SWAP2 SWAP1 PUSH2 0x1A82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1678 SWAP3 SWAP2 SWAP1 PUSH2 0x1F77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x173E JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x16FF JUMPI POP PUSH2 0x16FE DUP5 DUP5 PUSH2 0x956 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x173D JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1725 DUP4 PUSH2 0xB62 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1790 DUP2 PUSH2 0x175B JUMP JUMPDEST DUP2 EQ PUSH2 0x179B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17AD DUP2 PUSH2 0x1787 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17C9 JUMPI PUSH2 0x17C8 PUSH2 0x1751 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17D7 DUP5 DUP3 DUP6 ADD PUSH2 0x179E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17F5 DUP2 PUSH2 0x17E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1810 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1850 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1835 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1878 DUP3 PUSH2 0x1816 JUMP JUMPDEST PUSH2 0x1882 DUP2 DUP6 PUSH2 0x1821 JUMP JUMPDEST SWAP4 POP PUSH2 0x1892 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1832 JUMP JUMPDEST PUSH2 0x189B DUP2 PUSH2 0x185C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18C0 DUP2 DUP5 PUSH2 0x186D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18DB DUP2 PUSH2 0x18C8 JUMP JUMPDEST DUP2 EQ PUSH2 0x18E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18F8 DUP2 PUSH2 0x18D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1914 JUMPI PUSH2 0x1913 PUSH2 0x1751 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1922 DUP5 DUP3 DUP6 ADD PUSH2 0x18E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1956 DUP3 PUSH2 0x192B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1966 DUP2 PUSH2 0x194B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1981 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x195D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1990 DUP2 PUSH2 0x194B JUMP JUMPDEST DUP2 EQ PUSH2 0x199B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19AD DUP2 PUSH2 0x1987 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19CA JUMPI PUSH2 0x19C9 PUSH2 0x1751 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19D8 DUP6 DUP3 DUP7 ADD PUSH2 0x199E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19E9 DUP6 DUP3 DUP7 ADD PUSH2 0x18E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A0C JUMPI PUSH2 0x1A0B PUSH2 0x1751 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A1A DUP7 DUP3 DUP8 ADD PUSH2 0x199E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A2B DUP7 DUP3 DUP8 ADD PUSH2 0x199E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A3C DUP7 DUP3 DUP8 ADD PUSH2 0x18E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A5C JUMPI PUSH2 0x1A5B PUSH2 0x1751 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A6A DUP5 DUP3 DUP6 ADD PUSH2 0x199E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A7C DUP2 PUSH2 0x18C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A97 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A73 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AA6 DUP2 PUSH2 0x17E0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AC3 DUP2 PUSH2 0x1A9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AE0 JUMPI PUSH2 0x1ADF PUSH2 0x1751 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AEE DUP6 DUP3 DUP7 ADD PUSH2 0x199E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AFF DUP6 DUP3 DUP7 ADD PUSH2 0x1AB4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1B4B DUP3 PUSH2 0x185C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1B6A JUMPI PUSH2 0x1B69 PUSH2 0x1B13 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B7D PUSH2 0x1747 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B89 DUP3 DUP3 PUSH2 0x1B42 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BA9 JUMPI PUSH2 0x1BA8 PUSH2 0x1B13 JUMP JUMPDEST JUMPDEST PUSH2 0x1BB2 DUP3 PUSH2 0x185C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE1 PUSH2 0x1BDC DUP5 PUSH2 0x1B8E JUMP JUMPDEST PUSH2 0x1B73 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1BFD JUMPI PUSH2 0x1BFC PUSH2 0x1B0E JUMP JUMPDEST JUMPDEST PUSH2 0x1C08 DUP5 DUP3 DUP6 PUSH2 0x1BBF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C25 JUMPI PUSH2 0x1C24 PUSH2 0x1B09 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C35 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1BCE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C58 JUMPI PUSH2 0x1C57 PUSH2 0x1751 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C66 DUP8 DUP3 DUP9 ADD PUSH2 0x199E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1C77 DUP8 DUP3 DUP9 ADD PUSH2 0x199E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1C88 DUP8 DUP3 DUP9 ADD PUSH2 0x18E9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CA9 JUMPI PUSH2 0x1CA8 PUSH2 0x1756 JUMP JUMPDEST JUMPDEST PUSH2 0x1CB5 DUP8 DUP3 DUP9 ADD PUSH2 0x1C10 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CD8 JUMPI PUSH2 0x1CD7 PUSH2 0x1751 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CE6 DUP6 DUP3 DUP7 ADD PUSH2 0x199E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CF7 DUP6 DUP3 DUP7 ADD PUSH2 0x199E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1D48 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1D5B JUMPI PUSH2 0x1D5A PUSH2 0x1D01 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536F756C426F756E64546F6B656E3A20546F6B656E7320617265206E6F6E2D74 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72616E7366657261626C65000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DBD PUSH1 0x2B DUP4 PUSH2 0x1821 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DC8 DUP3 PUSH2 0x1D61 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DEC DUP2 PUSH2 0x1DB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573732068617320616C7265616479206D696E74656420616E205342 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x5400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E4F PUSH1 0x21 DUP4 PUSH2 0x1821 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E5A DUP3 PUSH2 0x1DF3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E7E DUP2 PUSH2 0x1E42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1EBF DUP3 PUSH2 0x18C8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ECA DUP4 PUSH2 0x18C8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1EE2 JUMPI PUSH2 0x1EE1 PUSH2 0x1E85 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EFE DUP3 PUSH2 0x1816 JUMP JUMPDEST PUSH2 0x1F08 DUP2 DUP6 PUSH2 0x1EE8 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F18 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1832 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F30 DUP3 DUP6 PUSH2 0x1EF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F3C DUP3 DUP5 PUSH2 0x1EF3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F8C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x195D JUMP JUMPDEST PUSH2 0x1F99 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A73 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 0xC7 PUSH17 0x44C48B05B3840A2BE4DB7ACF796A347C64 0xB3 0xF 0xB9 0xAD 0xD2 0xCD SHL PUSH15 0xB61035264736F6C63430008140033 ","sourceMap":"170:965:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1560:300:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2364:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3496:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3322:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;647:174:24;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4786:132:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1036:97:24;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2184:118:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;423:218:24;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1919:208:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2517:93:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3717:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;827:203:24;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2676:255:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3927:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1560:300:9;1662:4;1712:25;1697:40;;;:11;:40;;;;:104;;;;1768:33;1753:48;;;:11;:48;;;;1697:104;:156;;;;1817:36;1841:11;1817:23;:36::i;:::-;1697:156;1678:175;;1560:300;;;:::o;2364:89::-;2409:13;2441:5;2434:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2364:89;:::o;3496:154::-;3563:7;3582:22;3596:7;3582:13;:22::i;:::-;;3622:21;3635:7;3622:12;:21::i;:::-;3615:28;;3496:154;;;:::o;3322:113::-;3393:35;3402:2;3406:7;3415:12;:10;:12::i;:::-;3393:8;:35::i;:::-;3322:113;;:::o;647:174:24:-;761:53;;;;;;;;;;:::i;:::-;;;;;;;;4786:132:9;4872:39;4889:4;4895:2;4899:7;4872:39;;;;;;;;;;;;:16;:39::i;:::-;4786:132;;;:::o;1036:97:24:-;1087:4;1110:10;:16;1121:4;1110:16;;;;;;;;;;;;;;;;;;;;;;;;;1103:23;;1036:97;;;:::o;2184:118:9:-;2247:7;2273:22;2287:7;2273:13;:22::i;:::-;2266:29;;2184:118;;;:::o;423:218:24:-;1531:13:0;:11;:13::i;:::-;485:10:24::1;:14;496:2;485:14;;;;;;;;;;;;;;;;;;;;;;;;;484:15;476:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;566:1;547:15;;:20;;;;;;;:::i;:::-;;;;;;;;577:26;583:2;587:15;;577:5;:26::i;:::-;630:4;613:10;:14;624:2;613:14;;;;;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;423:218:::0;:::o;1919:208:9:-;1982:7;2022:1;2005:19;;:5;:19;;;2001:87;;2074:1;2047:30;;;;;;;;;;;:::i;:::-;;;;;;;;2001:87;2104:9;:16;2114:5;2104:16;;;;;;;;;;;;;;;;2097:23;;1919:208;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2517:93:9:-;2564:13;2596:7;2589:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2517:93;:::o;3717:144::-;3802:52;3821:12;:10;:12::i;:::-;3835:8;3845;3802:18;:52::i;:::-;3717:144;;:::o;827:203:24:-;970:53;;;;;;;;;;:::i;:::-;;;;;;;;2676:255:9;2740:13;2765:22;2779:7;2765:13;:22::i;:::-;;2798:21;2822:10;:8;:10::i;:::-;2798:34;;2873:1;2855:7;2849:21;:25;:75;;;;;;;;;;;;;;;;;2891:7;2900:18;:7;:16;:18::i;:::-;2877:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2849:75;2842:82;;;2676:255;;;:::o;3927:153::-;4015:4;4038:18;:25;4057:5;4038:25;;;;;;;;;;;;;;;:35;4064:8;4038:35;;;;;;;;;;;;;;;;;;;;;;;;;4031:42;;3927:153;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;763:146:18:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;16212:241:9:-;16275:7;16294:13;16310:17;16319:7;16310:8;:17::i;:::-;16294:33;;16358:1;16341:19;;:5;:19;;;16337:88;;16406:7;16383:31;;;;;;;;;;;:::i;:::-;;;;;;;;16337:88;16441:5;16434:12;;;16212:241;;;:::o;5963:127::-;6033:7;6059:15;:24;6075:7;6059:24;;;;;;;;;;;;;;;;;;;;;6052:31;;5963:127;;;:::o;656:96:15:-;709:7;735:10;728:17;;656:96;:::o;14492:120:9:-;14572:33;14581:2;14585:7;14594:4;14600;14572:8;:33::i;:::-;14492:120;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;9978:327:9:-;10059:1;10045:16;;:2;:16;;;10041:87;;10114:1;10084:33;;;;;;;;;;;:::i;:::-;;;;;;;;10041:87;10137:21;10161:32;10169:2;10173:7;10190:1;10161:7;:32::i;:::-;10137:56;;10232:1;10207:27;;:13;:27;;;10203:96;;10285:1;10257:31;;;;;;;;;;;:::i;:::-;;;;;;;;10203:96;10031:274;9978:327;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;15665:312:9:-;15792:1;15772:22;;:8;:22;;;15768:91;;15839:8;15817:31;;;;;;;;;;;:::i;:::-;;;;;;;;15768:91;15906:8;15868:18;:25;15887:5;15868:25;;;;;;;;;;;;;;;:35;15894:8;15868:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15951:8;15929:41;;15944:5;15929:41;;;15961:8;15929:41;;;;;;:::i;:::-;;;;;;;;15665:312;;;:::o;3173:92::-;3224:13;3249:9;;;;;;;;;;;;;;3173:92;:::o;987:632:17:-;1043:13;1092:14;1129:1;1109:17;1120:5;1109:10;:17::i;:::-;:21;1092:38;;1144:20;1178:6;1167:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1144:41;;1199:11;1294:6;1290:2;1286:15;1278:6;1274:28;1267:35;;1329:247;1336:4;1329:247;;;1360:5;;;;;;;;1464:10;1459:2;1452:5;1448:14;1443:32;1438:3;1430:46;1520:2;1511:11;;;;;;:::i;:::-;;;;;1553:1;1544:5;:10;1329:247;1540:21;1329:247;1596:6;1589:13;;;;;987:632;;;:::o;5732:115:9:-;5798:7;5824;:16;5832:7;5824:16;;;;;;;;;;;;;;;;;;;;;5817:23;;5732:115;;;:::o;14794:662::-;14954:9;:31;;;;14983:1;14967:18;;:4;:18;;;;14954:31;14950:460;;;15001:13;15017:22;15031:7;15017:13;:22::i;:::-;15001:38;;15183:1;15167:18;;:4;:18;;;;:35;;;;;15198:4;15189:13;;:5;:13;;;;15167:35;:69;;;;;15207:29;15224:5;15231:4;15207:16;:29::i;:::-;15206:30;15167:69;15163:142;;;15285:4;15263:27;;;;;;;;;;;:::i;:::-;;;;;;;;15163:142;15323:9;15319:81;;;15377:7;15373:2;15357:28;;15366:5;15357:28;;;;;;;;;;;;15319:81;14987:423;14950:460;15447:2;15420:15;:24;15436:7;15420:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14794:662;;;;:::o;8861:795::-;8947:7;8966:12;8981:17;8990:7;8981:8;:17::i;:::-;8966:32;;9074:1;9058:18;;:4;:18;;;9054:86;;9092:37;9109:4;9115;9121:7;9092:16;:37::i;:::-;9054:86;9200:1;9184:18;;:4;:18;;;9180:256;;9300:48;9317:1;9321:7;9338:1;9342:5;9300:8;:48::i;:::-;9410:1;9391:9;:15;9401:4;9391:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9180:256;9464:1;9450:16;;:2;:16;;;9446:107;;9527:1;9510:9;:13;9520:2;9510:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9446:107;9582:2;9563:7;:16;9571:7;9563:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9619:7;9615:2;9600:27;;9609:4;9600:27;;;;;;;;;;;;9645:4;9638:11;;;8861:795;;;;;:::o;25316:916:20:-;25369:7;25388:14;25405:1;25388:18;;25453:8;25444:5;:17;25440:103;;25490:8;25481:17;;;;;;:::i;:::-;;;;;25526:2;25516:12;;;;25440:103;25569:8;25560:5;:17;25556:103;;25606:8;25597:17;;;;;;:::i;:::-;;;;;25642:2;25632:12;;;;25556:103;25685:8;25676:5;:17;25672:103;;25722:8;25713:17;;;;;;:::i;:::-;;;;;25758:2;25748:12;;;;25672:103;25801:7;25792:5;:16;25788:100;;25837:7;25828:16;;;;;;:::i;:::-;;;;;25872:1;25862:11;;;;25788:100;25914:7;25905:5;:16;25901:100;;25950:7;25941:16;;;;;;:::i;:::-;;;;;25985:1;25975:11;;;;25901:100;26027:7;26018:5;:16;26014:100;;26063:7;26054:16;;;;;;:::i;:::-;;;;;26098:1;26088:11;;;;26014:100;26140:7;26131:5;:16;26127:66;;26177:1;26167:11;;;;26127:66;26219:6;26212:13;;;25316:916;;;:::o;7105:368:9:-;7217:38;7231:5;7238:7;7247;7217:13;:38::i;:::-;7212:255;;7292:1;7275:19;;:5;:19;;;7271:186;;7344:7;7321:31;;;;;;;;;;;:::i;:::-;;;;;;;;7271:186;7425:7;7434;7398:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7212:255;7105:368;;;:::o;6401:272::-;6504:4;6558:1;6539:21;;:7;:21;;;;:127;;;;;6586:7;6577:16;;:5;:16;;;:52;;;;6597:32;6614:5;6621:7;6597:16;:32::i;:::-;6577:52;:88;;;;6658:7;6633:32;;:21;6646:7;6633:12;:21::i;:::-;:32;;;6577:88;6539:127;6520:146;;6401:272;;;;;:::o;7:75:25:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:329::-;5574:6;5623:2;5611:9;5602:7;5598:23;5594:32;5591:119;;;5629:79;;:::i;:::-;5591:119;5749:1;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5720:117;5515:329;;;;:::o;5850:118::-;5937:24;5955:5;5937:24;:::i;:::-;5932:3;5925:37;5850:118;;:::o;5974:222::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;5974:222;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:474::-;10059:6;10067;10116:2;10104:9;10095:7;10091:23;10087:32;10084:119;;;10122:79;;:::i;:::-;10084:119;10242:1;10267:53;10312:7;10303:6;10292:9;10288:22;10267:53;:::i;:::-;10257:63;;10213:117;10369:2;10395:53;10440:7;10431:6;10420:9;10416:22;10395:53;:::i;:::-;10385:63;;10340:118;9991:474;;;;;:::o;10471:180::-;10519:77;10516:1;10509:88;10616:4;10613:1;10606:15;10640:4;10637:1;10630:15;10657:320;10701:6;10738:1;10732:4;10728:12;10718:22;;10785:1;10779:4;10775:12;10806:18;10796:81;;10862:4;10854:6;10850:17;10840:27;;10796:81;10924:2;10916:6;10913:14;10893:18;10890:38;10887:84;;10943:18;;:::i;:::-;10887:84;10708:269;10657:320;;;:::o;10983:230::-;11123:34;11119:1;11111:6;11107:14;11100:58;11192:13;11187:2;11179:6;11175:15;11168:38;10983:230;:::o;11219:366::-;11361:3;11382:67;11446:2;11441:3;11382:67;:::i;:::-;11375:74;;11458:93;11547:3;11458:93;:::i;:::-;11576:2;11571:3;11567:12;11560:19;;11219:366;;;:::o;11591:419::-;11757:4;11795:2;11784:9;11780:18;11772:26;;11844:9;11838:4;11834:20;11830:1;11819:9;11815:17;11808:47;11872:131;11998:4;11872:131;:::i;:::-;11864:139;;11591:419;;;:::o;12016:220::-;12156:34;12152:1;12144:6;12140:14;12133:58;12225:3;12220:2;12212:6;12208:15;12201:28;12016:220;:::o;12242:366::-;12384:3;12405:67;12469:2;12464:3;12405:67;:::i;:::-;12398:74;;12481:93;12570:3;12481:93;:::i;:::-;12599:2;12594:3;12590:12;12583:19;;12242:366;;;:::o;12614:419::-;12780:4;12818:2;12807:9;12803:18;12795:26;;12867:9;12861:4;12857:20;12853:1;12842:9;12838:17;12831:47;12895:131;13021:4;12895:131;:::i;:::-;12887:139;;12614:419;;;:::o;13039:180::-;13087:77;13084:1;13077:88;13184:4;13181:1;13174:15;13208:4;13205:1;13198:15;13225:191;13265:3;13284:20;13302:1;13284:20;:::i;:::-;13279:25;;13318:20;13336:1;13318:20;:::i;:::-;13313:25;;13361:1;13358;13354:9;13347:16;;13382:3;13379:1;13376:10;13373:36;;;13389:18;;:::i;:::-;13373:36;13225:191;;;;:::o;13422:148::-;13524:11;13561:3;13546:18;;13422:148;;;;:::o;13576:390::-;13682:3;13710:39;13743:5;13710:39;:::i;:::-;13765:89;13847:6;13842:3;13765:89;:::i;:::-;13758:96;;13863:65;13921:6;13916:3;13909:4;13902:5;13898:16;13863:65;:::i;:::-;13953:6;13948:3;13944:16;13937:23;;13686:280;13576:390;;;;:::o;13972:435::-;14152:3;14174:95;14265:3;14256:6;14174:95;:::i;:::-;14167:102;;14286:95;14377:3;14368:6;14286:95;:::i;:::-;14279:102;;14398:3;14391:10;;13972:435;;;;;:::o;14413:180::-;14461:77;14458:1;14451:88;14558:4;14555:1;14548:15;14582:4;14579:1;14572:15;14599:332;14720:4;14758:2;14747:9;14743:18;14735:26;;14771:71;14839:1;14828:9;14824:17;14815:6;14771:71;:::i;:::-;14852:72;14920:2;14909:9;14905:18;14896:6;14852:72;:::i;:::-;14599:332;;;;;:::o"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","hasSBT(address)":"56a9c454","isApprovedForAll(address,address)":"e985e9c5","mint(address)":"6a627842","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"hasSBT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SBT.sol\":\"SoulBoundToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/SBT.sol\":{\"keccak256\":\"0x22f9b4f4359e287aa46ffedab71f1be62dab0ae82c478f50d0876de88483eb6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2910112c4fba74c043ead1e26dc4e9fdb4d887c7dcb66ee9d964f31b5e4305f2\",\"dweb:/ipfs/QmQcLvVVmh7h4gS1c96Fepio6HcGLQHXEPoz5bs5mzUdmR\"]}},\"version\":1}"}}}}}